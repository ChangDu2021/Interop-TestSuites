//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCTABL {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite : PtfTestClassBase {
        
        public S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "2000000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter IMS_OXCTABLAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCTABLAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite() {
            this.Manager.BeginTest("MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp38 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp38 == 0)) {
                this.Manager.Comment("reaching state \'S6\'");
                goto label15;
            }
            if ((temp38 == 1)) {
                this.Manager.Comment("reaching state \'S7\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S15\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp1;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp1 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp1, "return of RopSetColumns, state S18");
                this.Manager.Comment("reaching state \'S21\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp2;
                this.Manager.Comment("executing step \'call RopCreateBookmark()\'");
                temp2 = this.IMS_OXCTABLAdapterInstance.RopCreateBookmark();
                this.Manager.Checkpoint("MS-OXCTABL_R526");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return RopCreateBookmark/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp2, "return of RopCreateBookmark, state S24");
                this.Manager.Comment("reaching state \'S27\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp3;
                this.Manager.Comment("executing step \'call RopSortTable(1,True,False,True,True,True,False,False)\'");
                temp3 = this.IMS_OXCTABLAdapterInstance.RopSortTable(1u, true, false, true, true, true, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R447");
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("checking step \'return RopSortTable/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp3, "return of RopSortTable, state S30");
                this.Manager.Comment("reaching state \'S33\'");
                bool temp4;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(904,out _)\'");
                this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(904, out temp4);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp4);
                this.Manager.Comment("reaching state \'S36\'");
                int temp37 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker15)));
                if ((temp37 == 0)) {
                    this.Manager.Comment("reaching state \'S39\'");
                    bool temp5;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(905,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(905, out temp5);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp5);
                    this.Manager.Comment("reaching state \'S45\'");
                    int temp20 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker8)));
                    if ((temp20 == 0)) {
                        this.Manager.Comment("reaching state \'S49\'");
                        bool temp6;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(872,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(872, out temp6);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp6);
                        this.Manager.Comment("reaching state \'S57\'");
                        int temp11 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker2)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker5)));
                        if ((temp11 == 0)) {
                            this.Manager.Comment("reaching state \'S65\'");
                            bool temp7;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp7);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp7);
                            this.Manager.Comment("reaching state \'S81\'");
                            int temp8 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker3)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker4)));
                            if ((temp8 == 0)) {
                                this.Manager.Comment("reaching state \'S93\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S93\'.");
                                goto label0;
                            }
                            if ((temp8 == 1)) {
                                this.Manager.Comment("reaching state \'S94\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S94\'.");
                                goto label0;
                            }
                            throw new InvalidOperationException("never reached");
                        label0:
;
                            goto label2;
                        }
                        if ((temp11 == 1)) {
                            this.Manager.Comment("reaching state \'S66\'");
                            bool temp9;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp9);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp9);
                            this.Manager.Comment("reaching state \'S82\'");
                            int temp10 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker6)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker7)));
                            if ((temp10 == 0)) {
                                this.Manager.Comment("reaching state \'S95\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S95\'.");
                                goto label1;
                            }
                            if ((temp10 == 1)) {
                                this.Manager.Comment("reaching state \'S96\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S96\'.");
                                goto label1;
                            }
                            throw new InvalidOperationException("never reached");
                        label1:
;
                            goto label2;
                        }
                        throw new InvalidOperationException("never reached");
                    label2:
;
                        goto label6;
                    }
                    if ((temp20 == 1)) {
                        this.Manager.Comment("reaching state \'S50\'");
                        bool temp12;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(872,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(872, out temp12);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp12);
                        this.Manager.Comment("reaching state \'S58\'");
                        int temp19 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker9)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker12)));
                        if ((temp19 == 0)) {
                            this.Manager.Comment("reaching state \'S67\'");
                            bool temp13;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp13);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp13);
                            this.Manager.Comment("reaching state \'S83\'");
                            int temp15 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker10)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker11)));
                            if ((temp15 == 0)) {
                                this.Manager.Comment("reaching state \'S97\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp14;
                                this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                                temp14 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                                this.Manager.Checkpoint("MS-OXCTABL_R508");
                                this.Manager.Checkpoint("MS-OXCTABL_R904");
                                this.Manager.Comment("reaching state \'S113\'");
                                this.Manager.Comment("checking step \'return RopSeekRowBookmark/ecInvalidBookmark\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecInvalidBookmark, temp14, "return of RopSeekRowBookmark, state S113");
                                this.Manager.Comment("reaching state \'S117\'");
                                goto label3;
                            }
                            if ((temp15 == 1)) {
                                this.Manager.Comment("reaching state \'S98\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S98\'.");
                                goto label3;
                            }
                            throw new InvalidOperationException("never reached");
                        label3:
;
                            goto label5;
                        }
                        if ((temp19 == 1)) {
                            this.Manager.Comment("reaching state \'S68\'");
                            bool temp16;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp16);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp16);
                            this.Manager.Comment("reaching state \'S84\'");
                            int temp18 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker13)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker14)));
                            if ((temp18 == 0)) {
                                this.Manager.Comment("reaching state \'S100\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S100\'.");
                                goto label4;
                            }
                            if ((temp18 == 1)) {
                                this.Manager.Comment("reaching state \'S99\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp17;
                                this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                                temp17 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                                this.Manager.Checkpoint("MS-OXCTABL_R508");
                                this.Manager.Checkpoint("MS-OXCTABL_R761");
                                this.Manager.Checkpoint("MS-OXCTABL_R904");
                                this.Manager.Comment("reaching state \'S114\'");
                                this.Manager.Comment("checking step \'return RopSeekRowBookmark/ecInvalidBookmark\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecInvalidBookmark, temp17, "return of RopSeekRowBookmark, state S114");
                                this.Manager.Comment("reaching state \'S118\'");
                                goto label4;
                            }
                            throw new InvalidOperationException("never reached");
                        label4:
;
                            goto label5;
                        }
                        throw new InvalidOperationException("never reached");
                    label5:
;
                        goto label6;
                    }
                    throw new InvalidOperationException("never reached");
                label6:
;
                    goto label14;
                }
                if ((temp37 == 1)) {
                    this.Manager.Comment("reaching state \'S40\'");
                    bool temp21;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(905,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(905, out temp21);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp21);
                    this.Manager.Comment("reaching state \'S46\'");
                    int temp36 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker16)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker23)));
                    if ((temp36 == 0)) {
                        this.Manager.Comment("reaching state \'S51\'");
                        bool temp22;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(872,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(872, out temp22);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp22);
                        this.Manager.Comment("reaching state \'S59\'");
                        int temp27 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker17)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker20)));
                        if ((temp27 == 0)) {
                            this.Manager.Comment("reaching state \'S69\'");
                            bool temp23;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp23);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp23);
                            this.Manager.Comment("reaching state \'S85\'");
                            int temp24 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker18)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker19)));
                            if ((temp24 == 0)) {
                                this.Manager.Comment("reaching state \'S101\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S101\'.");
                                goto label7;
                            }
                            if ((temp24 == 1)) {
                                this.Manager.Comment("reaching state \'S102\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S102\'.");
                                goto label7;
                            }
                            throw new InvalidOperationException("never reached");
                        label7:
;
                            goto label9;
                        }
                        if ((temp27 == 1)) {
                            this.Manager.Comment("reaching state \'S70\'");
                            bool temp25;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp25);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp25);
                            this.Manager.Comment("reaching state \'S86\'");
                            int temp26 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker21)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker22)));
                            if ((temp26 == 0)) {
                                this.Manager.Comment("reaching state \'S103\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S103\'.");
                                goto label8;
                            }
                            if ((temp26 == 1)) {
                                this.Manager.Comment("reaching state \'S104\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S104\'.");
                                goto label8;
                            }
                            throw new InvalidOperationException("never reached");
                        label8:
;
                            goto label9;
                        }
                        throw new InvalidOperationException("never reached");
                    label9:
;
                        goto label13;
                    }
                    if ((temp36 == 1)) {
                        this.Manager.Comment("reaching state \'S52\'");
                        bool temp28;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(872,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(872, out temp28);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp28);
                        this.Manager.Comment("reaching state \'S60\'");
                        int temp35 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker24)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker27)));
                        if ((temp35 == 0)) {
                            this.Manager.Comment("reaching state \'S71\'");
                            bool temp29;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp29);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp29);
                            this.Manager.Comment("reaching state \'S87\'");
                            int temp31 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker25)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker26)));
                            if ((temp31 == 0)) {
                                this.Manager.Comment("reaching state \'S105\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S105\'.");
                                goto label10;
                            }
                            if ((temp31 == 1)) {
                                this.Manager.Comment("reaching state \'S106\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp30;
                                this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                                temp30 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                                this.Manager.Checkpoint("MS-OXCTABL_R508");
                                this.Manager.Checkpoint("MS-OXCTABL_R905");
                                this.Manager.Checkpoint("MS-OXCTABL_R504");
                                this.Manager.Checkpoint("MS-OXCTABL_R522");
                                this.Manager.Comment("reaching state \'S115\'");
                                this.Manager.Comment("checking step \'return RopSeekRowBookmark/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp30, "return of RopSeekRowBookmark, state S115");
                                this.Manager.Comment("reaching state \'S119\'");
                                goto label10;
                            }
                            throw new InvalidOperationException("never reached");
                        label10:
;
                            goto label12;
                        }
                        if ((temp35 == 1)) {
                            this.Manager.Comment("reaching state \'S72\'");
                            bool temp32;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp32);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp32);
                            this.Manager.Comment("reaching state \'S88\'");
                            int temp34 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker28)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker29)));
                            if ((temp34 == 0)) {
                                this.Manager.Comment("reaching state \'S107\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp33;
                                this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                                temp33 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                                this.Manager.Checkpoint("MS-OXCTABL_R508");
                                this.Manager.Checkpoint("MS-OXCTABL_R761");
                                this.Manager.Checkpoint("MS-OXCTABL_R905");
                                this.Manager.Checkpoint("MS-OXCTABL_R504");
                                this.Manager.Checkpoint("MS-OXCTABL_R522");
                                this.Manager.Comment("reaching state \'S116\'");
                                this.Manager.Comment("checking step \'return RopSeekRowBookmark/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp33, "return of RopSeekRowBookmark, state S116");
                                this.Manager.Comment("reaching state \'S120\'");
                                goto label11;
                            }
                            if ((temp34 == 1)) {
                                this.Manager.Comment("reaching state \'S108\'");
                                this.Manager.Assert(false, "reached non-accepting end state \'S108\'.");
                                goto label11;
                            }
                            throw new InvalidOperationException("never reached");
                        label11:
;
                            goto label12;
                        }
                        throw new InvalidOperationException("never reached");
                    label12:
;
                        goto label13;
                    }
                    throw new InvalidOperationException("never reached");
                label13:
;
                    goto label14;
                }
                throw new InvalidOperationException("never reached");
            label14:
;
                goto label15;
            }
            throw new InvalidOperationException("never reached");
        label15:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S36");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S45");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S57");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S81");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S81");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S57");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S82");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S82");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S45");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S58");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S83");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S83");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S58");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S84");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker14(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S84");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker15(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S36");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker16(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S46");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker17(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S59");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker18(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S85");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker19(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S85");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker20(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S59");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker21(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S86");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker22(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S86");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker23(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S46");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker24(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S60");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker25(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S87");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker26(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S87");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker27(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S60");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker28(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S88");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker29(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S88");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1() {
            this.Manager.BeginTest("MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp39;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp39);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp39);
            this.Manager.Comment("reaching state \'S3\'");
            int temp53 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp53 == 0)) {
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S16\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp40;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp40 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S19\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp40, "return of RopSetColumns, state S19");
                this.Manager.Comment("reaching state \'S22\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp41;
                this.Manager.Comment("executing step \'call RopCreateBookmark()\'");
                temp41 = this.IMS_OXCTABLAdapterInstance.RopCreateBookmark();
                this.Manager.Checkpoint("MS-OXCTABL_R526");
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return RopCreateBookmark/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp41, "return of RopCreateBookmark, state S25");
                this.Manager.Comment("reaching state \'S28\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp42;
                this.Manager.Comment("executing step \'call RopResetTable()\'");
                temp42 = this.IMS_OXCTABLAdapterInstance.RopResetTable();
                this.Manager.Checkpoint("MS-OXCTABL_R564");
                this.Manager.Comment("reaching state \'S31\'");
                this.Manager.Comment("checking step \'return RopResetTable/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp42, "return of RopResetTable, state S31");
                this.Manager.Comment("reaching state \'S34\'");
                bool temp43;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(909,out _)\'");
                this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(909, out temp43);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp43);
                this.Manager.Comment("reaching state \'S37\'");
                int temp52 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker7)));
                if ((temp52 == 0)) {
                    this.Manager.Comment("reaching state \'S41\'");
                    bool temp44;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(872,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(872, out temp44);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp44);
                    this.Manager.Comment("reaching state \'S47\'");
                    int temp51 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker1)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker4)));
                    if ((temp51 == 0)) {
                        this.Manager.Comment("reaching state \'S53\'");
                        bool temp45;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp45);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp45);
                        this.Manager.Comment("reaching state \'S61\'");
                        int temp47 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker2)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker3)));
                        if ((temp47 == 0)) {
                            this.Manager.Comment("reaching state \'S73\'");
                            this.Manager.Assert(false, "reached non-accepting end state \'S73\'.");
                            goto label16;
                        }
                        if ((temp47 == 1)) {
                            this.Manager.Comment("reaching state \'S74\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp46;
                            this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                            temp46 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                            this.Manager.Checkpoint("MS-OXCTABL_R508");
                            this.Manager.Checkpoint("MS-OXCTABL_R909");
                            this.Manager.Checkpoint("MS-OXCTABL_R504");
                            this.Manager.Checkpoint("MS-OXCTABL_R522");
                            this.Manager.Comment("reaching state \'S89\'");
                            this.Manager.Comment("checking step \'return RopSeekRowBookmark/success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp46, "return of RopSeekRowBookmark, state S89");
                            this.Manager.Comment("reaching state \'S109\'");
                            goto label16;
                        }
                        throw new InvalidOperationException("never reached");
                    label16:
;
                        goto label18;
                    }
                    if ((temp51 == 1)) {
                        this.Manager.Comment("reaching state \'S54\'");
                        bool temp48;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp48);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp48);
                        this.Manager.Comment("reaching state \'S62\'");
                        int temp50 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker5)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker6)));
                        if ((temp50 == 0)) {
                            this.Manager.Comment("reaching state \'S75\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp49;
                            this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                            temp49 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                            this.Manager.Checkpoint("MS-OXCTABL_R508");
                            this.Manager.Checkpoint("MS-OXCTABL_R761");
                            this.Manager.Checkpoint("MS-OXCTABL_R909");
                            this.Manager.Checkpoint("MS-OXCTABL_R504");
                            this.Manager.Checkpoint("MS-OXCTABL_R522");
                            this.Manager.Comment("reaching state \'S90\'");
                            this.Manager.Comment("checking step \'return RopSeekRowBookmark/success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp49, "return of RopSeekRowBookmark, state S90");
                            this.Manager.Comment("reaching state \'S110\'");
                            goto label17;
                        }
                        if ((temp50 == 1)) {
                            this.Manager.Comment("reaching state \'S76\'");
                            this.Manager.Assert(false, "reached non-accepting end state \'S76\'.");
                            goto label17;
                        }
                        throw new InvalidOperationException("never reached");
                    label17:
;
                        goto label18;
                    }
                    throw new InvalidOperationException("never reached");
                label18:
;
                    goto label19;
                }
                if ((temp52 == 1)) {
                    this.Manager.Comment("reaching state \'S42\'");
                    goto label19;
                }
                throw new InvalidOperationException("never reached");
            label19:
;
                goto label20;
            }
            if ((temp53 == 1)) {
                this.Manager.Comment("reaching state \'S9\'");
                goto label20;
            }
            throw new InvalidOperationException("never reached");
        label20:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S37");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S47");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S61");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S61");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S47");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S62");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S62");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S37");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2() {
            this.Manager.BeginTest("MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp54;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp54);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp54);
            this.Manager.Comment("reaching state \'S5\'");
            int temp68 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp68 == 0)) {
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S17\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp55;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp55 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp55, "return of RopSetColumns, state S20");
                this.Manager.Comment("reaching state \'S23\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp56;
                this.Manager.Comment("executing step \'call RopCreateBookmark()\'");
                temp56 = this.IMS_OXCTABLAdapterInstance.RopCreateBookmark();
                this.Manager.Checkpoint("MS-OXCTABL_R526");
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("checking step \'return RopCreateBookmark/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp56, "return of RopCreateBookmark, state S26");
                this.Manager.Comment("reaching state \'S29\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp57;
                this.Manager.Comment("executing step \'call RopRestrict(1,True,False,False)\'");
                temp57 = this.IMS_OXCTABLAdapterInstance.RopRestrict(1u, true, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R834");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return RopRestrict/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp57, "return of RopRestrict, state S32");
                this.Manager.Comment("reaching state \'S35\'");
                bool temp58;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(906,out _)\'");
                this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(906, out temp58);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp58);
                this.Manager.Comment("reaching state \'S38\'");
                int temp67 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker7)));
                if ((temp67 == 0)) {
                    this.Manager.Comment("reaching state \'S43\'");
                    bool temp59;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(872,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(872, out temp59);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp59);
                    this.Manager.Comment("reaching state \'S48\'");
                    int temp66 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker1)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker4)));
                    if ((temp66 == 0)) {
                        this.Manager.Comment("reaching state \'S55\'");
                        bool temp60;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp60);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp60);
                        this.Manager.Comment("reaching state \'S63\'");
                        int temp62 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker2)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker3)));
                        if ((temp62 == 0)) {
                            this.Manager.Comment("reaching state \'S77\'");
                            this.Manager.Assert(false, "reached non-accepting end state \'S77\'.");
                            goto label21;
                        }
                        if ((temp62 == 1)) {
                            this.Manager.Comment("reaching state \'S78\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp61;
                            this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                            temp61 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                            this.Manager.Checkpoint("MS-OXCTABL_R508");
                            this.Manager.Checkpoint("MS-OXCTABL_R906");
                            this.Manager.Comment("reaching state \'S91\'");
                            this.Manager.Comment("checking step \'return RopSeekRowBookmark/ecInvalidBookmark\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecInvalidBookmark, temp61, "return of RopSeekRowBookmark, state S91");
                            this.Manager.Comment("reaching state \'S111\'");
                            goto label21;
                        }
                        throw new InvalidOperationException("never reached");
                    label21:
;
                        goto label23;
                    }
                    if ((temp66 == 1)) {
                        this.Manager.Comment("reaching state \'S56\'");
                        bool temp63;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(761,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(761, out temp63);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp63);
                        this.Manager.Comment("reaching state \'S64\'");
                        int temp65 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker5)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker6)));
                        if ((temp65 == 0)) {
                            this.Manager.Comment("reaching state \'S79\'");
                            this.Manager.Assert(false, "reached non-accepting end state \'S79\'.");
                            goto label22;
                        }
                        if ((temp65 == 1)) {
                            this.Manager.Comment("reaching state \'S80\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp64;
                            this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                            temp64 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                            this.Manager.Checkpoint("MS-OXCTABL_R508");
                            this.Manager.Checkpoint("MS-OXCTABL_R761");
                            this.Manager.Checkpoint("MS-OXCTABL_R906");
                            this.Manager.Comment("reaching state \'S92\'");
                            this.Manager.Comment("checking step \'return RopSeekRowBookmark/ecInvalidBookmark\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecInvalidBookmark, temp64, "return of RopSeekRowBookmark, state S92");
                            this.Manager.Comment("reaching state \'S112\'");
                            goto label22;
                        }
                        throw new InvalidOperationException("never reached");
                    label22:
;
                        goto label23;
                    }
                    throw new InvalidOperationException("never reached");
                label23:
;
                    goto label24;
                }
                if ((temp67 == 1)) {
                    this.Manager.Comment("reaching state \'S44\'");
                    goto label24;
                }
                throw new InvalidOperationException("never reached");
            label24:
;
                goto label25;
            }
            if ((temp68 == 1)) {
                this.Manager.Comment("reaching state \'S11\'");
                goto label25;
            }
            throw new InvalidOperationException("never reached");
        label25:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S38");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S48");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S63");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S63");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S48");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S64");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S64");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S38");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
    }
}