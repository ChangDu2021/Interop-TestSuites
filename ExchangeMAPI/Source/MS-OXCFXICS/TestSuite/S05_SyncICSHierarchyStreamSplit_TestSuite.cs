//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S05_SyncICSHierarchyStreamSplit_TestSuite : PtfTestClassBase {
        
        public S05_SyncICSHierarchyStreamSplit_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S05_SyncICSHierarchyStreamSplit_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S05_SyncICSHierarchyStreamSplit_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp207 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyStreamSplit_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyStreamSplit_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_SyncICSHierarchyStreamSplit_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyStreamSplit_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp207 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S5\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S6");
                this.Manager.Comment("reaching state \'S7\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S8");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S8");
                this.Manager.Comment("reaching state \'S9\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S10");
                this.Manager.Comment("reaching state \'S11\'");
                int temp9;
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp9, out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "folderIdIndex of CreateFolder, state S12");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "folderHandleIndex of CreateFolder, state S12");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of CreateFolder, state S12");
                this.Manager.Comment("reaching state \'S13\'");
                int temp12;
                int temp13;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp14;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp14 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp12, out temp13);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 4,out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp12, "folderIdIndex of CreateFolder, state S14");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp13, "folderHandleIndex of CreateFolder, state S14");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp14, "return of CreateFolder, state S14");
                this.Manager.Comment("reaching state \'S15\'");
                int temp15;
                int temp16;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp17 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp15, out temp16);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 5,out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp15, "folderIdIndex of CreateFolder, state S16");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp16, "folderHandleIndex of CreateFolder, state S16");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of CreateFolder, state S16");
                this.Manager.Comment("reaching state \'S17\'");
                int temp18;
                int temp19;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp20 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp18, out temp19);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 6,out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp18, "folderIdIndex of CreateFolder, state S18");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp19, "folderHandleIndex of CreateFolder, state S18");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp20, "return of CreateFolder, state S18");
                this.Manager.Comment("reaching state \'S19\'");
                int temp21;
                int temp22;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp23 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp21, out temp22);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 7,out 8]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp21, "folderIdIndex of CreateFolder, state S20");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp22, "folderHandleIndex of CreateFolder, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of CreateFolder, state S20");
                this.Manager.Comment("reaching state \'S21\'");
                int temp24;
                int temp25;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp26 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp24, out temp25);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S22\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 8,out 9]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp24, "folderIdIndex of CreateFolder, state S22");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp25, "folderHandleIndex of CreateFolder, state S22");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of CreateFolder, state S22");
                this.Manager.Comment("reaching state \'S23\'");
                int temp27;
                int temp28;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp29 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp27, out temp28);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 9,out 10]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp27, "folderIdIndex of CreateFolder, state S24");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp28, "folderHandleIndex of CreateFolder, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of CreateFolder, state S24");
                this.Manager.Comment("reaching state \'S25\'");
                int temp30;
                int temp31;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp32 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp30, out temp31);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 10,out 11]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp30, "folderIdIndex of CreateFolder, state S26");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp31, "folderHandleIndex of CreateFolder, state S26");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of CreateFolder, state S26");
                this.Manager.Comment("reaching state \'S27\'");
                int temp33;
                int temp34;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp35 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp33, out temp34);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 11,out 12]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp33, "folderIdIndex of CreateFolder, state S28");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp34, "folderHandleIndex of CreateFolder, state S28");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of CreateFolder, state S28");
                this.Manager.Comment("reaching state \'S29\'");
                int temp36;
                int temp37;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp38 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp36, out temp37);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 12,out 13]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp36, "folderIdIndex of CreateFolder, state S30");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 13, temp37, "folderHandleIndex of CreateFolder, state S30");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp38, "return of CreateFolder, state S30");
                this.Manager.Comment("reaching state \'S31\'");
                int temp39;
                int temp40;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp41 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp39, out temp40);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 13,out 14]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 13, temp39, "folderIdIndex of CreateFolder, state S32");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 14, temp40, "folderHandleIndex of CreateFolder, state S32");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of CreateFolder, state S32");
                this.Manager.Comment("reaching state \'S33\'");
                int temp42;
                int temp43;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp44 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp42, out temp43);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S34\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 14,out 15]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 14, temp42, "folderIdIndex of CreateFolder, state S34");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 15, temp43, "folderHandleIndex of CreateFolder, state S34");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of CreateFolder, state S34");
                this.Manager.Comment("reaching state \'S35\'");
                int temp45;
                int temp46;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp47 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp45, out temp46);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 15,out 16]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 15, temp45, "folderIdIndex of CreateFolder, state S36");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 16, temp46, "folderHandleIndex of CreateFolder, state S36");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of CreateFolder, state S36");
                this.Manager.Comment("reaching state \'S37\'");
                int temp48;
                int temp49;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp50 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp48, out temp49);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 16,out 17]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 16, temp48, "folderIdIndex of CreateFolder, state S38");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 17, temp49, "folderHandleIndex of CreateFolder, state S38");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of CreateFolder, state S38");
                this.Manager.Comment("reaching state \'S39\'");
                int temp51;
                int temp52;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp53 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp51, out temp52);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 17,out 18]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 17, temp51, "folderIdIndex of CreateFolder, state S40");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 18, temp52, "folderHandleIndex of CreateFolder, state S40");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of CreateFolder, state S40");
                this.Manager.Comment("reaching state \'S41\'");
                int temp54;
                int temp55;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp56 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp54, out temp55);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 18,out 19]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 18, temp54, "folderIdIndex of CreateFolder, state S42");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 19, temp55, "folderHandleIndex of CreateFolder, state S42");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp56, "return of CreateFolder, state S42");
                this.Manager.Comment("reaching state \'S43\'");
                int temp57;
                int temp58;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp59;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp59 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp57, out temp58);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 19,out 20]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 19, temp57, "folderIdIndex of CreateFolder, state S44");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 20, temp58, "folderHandleIndex of CreateFolder, state S44");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp59, "return of CreateFolder, state S44");
                this.Manager.Comment("reaching state \'S45\'");
                int temp60;
                int temp61;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp62 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp60, out temp61);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S46\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 20,out 21]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 20, temp60, "folderIdIndex of CreateFolder, state S46");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 21, temp61, "folderHandleIndex of CreateFolder, state S46");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp62, "return of CreateFolder, state S46");
                this.Manager.Comment("reaching state \'S47\'");
                int temp63;
                int temp64;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp65 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp63, out temp64);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 21,out 22]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 21, temp63, "folderIdIndex of CreateFolder, state S48");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 22, temp64, "folderHandleIndex of CreateFolder, state S48");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of CreateFolder, state S48");
                this.Manager.Comment("reaching state \'S49\'");
                int temp66;
                int temp67;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp68;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp68 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp66, out temp67);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S50\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 22,out 23]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 22, temp66, "folderIdIndex of CreateFolder, state S50");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 23, temp67, "folderHandleIndex of CreateFolder, state S50");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp68, "return of CreateFolder, state S50");
                this.Manager.Comment("reaching state \'S51\'");
                int temp69;
                int temp70;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp71 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp69, out temp70);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S52\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 23,out 24]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 23, temp69, "folderIdIndex of CreateFolder, state S52");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 24, temp70, "folderHandleIndex of CreateFolder, state S52");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of CreateFolder, state S52");
                this.Manager.Comment("reaching state \'S53\'");
                int temp72;
                int temp73;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp74 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp72, out temp73);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S54\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 24,out 25]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 24, temp72, "folderIdIndex of CreateFolder, state S54");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 25, temp73, "folderHandleIndex of CreateFolder, state S54");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of CreateFolder, state S54");
                this.Manager.Comment("reaching state \'S55\'");
                int temp75;
                int temp76;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp77;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp77 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp75, out temp76);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S56\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 25,out 26]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 25, temp75, "folderIdIndex of CreateFolder, state S56");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 26, temp76, "folderHandleIndex of CreateFolder, state S56");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp77, "return of CreateFolder, state S56");
                this.Manager.Comment("reaching state \'S57\'");
                int temp78;
                int temp79;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp80;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp80 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp78, out temp79);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S58\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 26,out 27]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 26, temp78, "folderIdIndex of CreateFolder, state S58");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 27, temp79, "folderHandleIndex of CreateFolder, state S58");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp80, "return of CreateFolder, state S58");
                this.Manager.Comment("reaching state \'S59\'");
                int temp81;
                int temp82;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp83 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp81, out temp82);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S60\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 27,out 28]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 27, temp81, "folderIdIndex of CreateFolder, state S60");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 28, temp82, "folderHandleIndex of CreateFolder, state S60");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of CreateFolder, state S60");
                this.Manager.Comment("reaching state \'S61\'");
                int temp84;
                int temp85;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp86;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp86 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp84, out temp85);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S62\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 28,out 29]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 28, temp84, "folderIdIndex of CreateFolder, state S62");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 29, temp85, "folderHandleIndex of CreateFolder, state S62");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp86, "return of CreateFolder, state S62");
                this.Manager.Comment("reaching state \'S63\'");
                int temp87;
                int temp88;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp89;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp89 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp87, out temp88);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S64\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 29,out 30]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 29, temp87, "folderIdIndex of CreateFolder, state S64");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 30, temp88, "folderHandleIndex of CreateFolder, state S64");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp89, "return of CreateFolder, state S64");
                this.Manager.Comment("reaching state \'S65\'");
                int temp90;
                int temp91;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp92;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp92 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp90, out temp91);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S66\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 30,out 31]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 30, temp90, "folderIdIndex of CreateFolder, state S66");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 31, temp91, "folderHandleIndex of CreateFolder, state S66");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp92, "return of CreateFolder, state S66");
                this.Manager.Comment("reaching state \'S67\'");
                int temp93;
                int temp94;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp95;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp95 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp93, out temp94);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S68\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 31,out 32]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 31, temp93, "folderIdIndex of CreateFolder, state S68");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 32, temp94, "folderHandleIndex of CreateFolder, state S68");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp95, "return of CreateFolder, state S68");
                this.Manager.Comment("reaching state \'S69\'");
                int temp96;
                int temp97;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp98;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp98 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp96, out temp97);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S70\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 32,out 33]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 32, temp96, "folderIdIndex of CreateFolder, state S70");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 33, temp97, "folderHandleIndex of CreateFolder, state S70");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp98, "return of CreateFolder, state S70");
                this.Manager.Comment("reaching state \'S71\'");
                int temp99;
                int temp100;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp101;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp101 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp99, out temp100);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S72\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 33,out 34]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 33, temp99, "folderIdIndex of CreateFolder, state S72");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 34, temp100, "folderHandleIndex of CreateFolder, state S72");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp101, "return of CreateFolder, state S72");
                this.Manager.Comment("reaching state \'S73\'");
                int temp102;
                int temp103;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp104;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp104 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp102, out temp103);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S74\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 34,out 35]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 34, temp102, "folderIdIndex of CreateFolder, state S74");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 35, temp103, "folderHandleIndex of CreateFolder, state S74");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp104, "return of CreateFolder, state S74");
                this.Manager.Comment("reaching state \'S75\'");
                int temp105;
                int temp106;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp107;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp107 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp105, out temp106);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S76\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 35,out 36]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 35, temp105, "folderIdIndex of CreateFolder, state S76");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 36, temp106, "folderHandleIndex of CreateFolder, state S76");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp107, "return of CreateFolder, state S76");
                this.Manager.Comment("reaching state \'S77\'");
                int temp108;
                int temp109;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp110;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp110 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp108, out temp109);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S78\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 36,out 37]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 36, temp108, "folderIdIndex of CreateFolder, state S78");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 37, temp109, "folderHandleIndex of CreateFolder, state S78");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp110, "return of CreateFolder, state S78");
                this.Manager.Comment("reaching state \'S79\'");
                int temp111;
                int temp112;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp113 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp111, out temp112);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 37,out 38]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 37, temp111, "folderIdIndex of CreateFolder, state S80");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 38, temp112, "folderHandleIndex of CreateFolder, state S80");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp113, "return of CreateFolder, state S80");
                this.Manager.Comment("reaching state \'S81\'");
                int temp114;
                int temp115;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp116 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp114, out temp115);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S82\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 38,out 39]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 38, temp114, "folderIdIndex of CreateFolder, state S82");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 39, temp115, "folderHandleIndex of CreateFolder, state S82");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of CreateFolder, state S82");
                this.Manager.Comment("reaching state \'S83\'");
                int temp117;
                int temp118;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp119;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp119 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp117, out temp118);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S84\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 39,out 40]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 39, temp117, "folderIdIndex of CreateFolder, state S84");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 40, temp118, "folderHandleIndex of CreateFolder, state S84");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp119, "return of CreateFolder, state S84");
                this.Manager.Comment("reaching state \'S85\'");
                int temp120;
                int temp121;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp122;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp122 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp120, out temp121);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S86\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 40,out 41]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 40, temp120, "folderIdIndex of CreateFolder, state S86");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 41, temp121, "folderHandleIndex of CreateFolder, state S86");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp122, "return of CreateFolder, state S86");
                this.Manager.Comment("reaching state \'S87\'");
                int temp123;
                int temp124;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp125;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp125 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp123, out temp124);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S88\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 41,out 42]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 41, temp123, "folderIdIndex of CreateFolder, state S88");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 42, temp124, "folderHandleIndex of CreateFolder, state S88");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp125, "return of CreateFolder, state S88");
                this.Manager.Comment("reaching state \'S89\'");
                int temp126;
                int temp127;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp128;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp128 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp126, out temp127);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S90\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 42,out 43]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 42, temp126, "folderIdIndex of CreateFolder, state S90");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 43, temp127, "folderHandleIndex of CreateFolder, state S90");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp128, "return of CreateFolder, state S90");
                this.Manager.Comment("reaching state \'S91\'");
                int temp129;
                int temp130;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp131;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp131 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp129, out temp130);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S92\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 43,out 44]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 43, temp129, "folderIdIndex of CreateFolder, state S92");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 44, temp130, "folderHandleIndex of CreateFolder, state S92");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp131, "return of CreateFolder, state S92");
                this.Manager.Comment("reaching state \'S93\'");
                int temp132;
                int temp133;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp134;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp134 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp132, out temp133);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S94\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 44,out 45]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 44, temp132, "folderIdIndex of CreateFolder, state S94");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 45, temp133, "folderHandleIndex of CreateFolder, state S94");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp134, "return of CreateFolder, state S94");
                this.Manager.Comment("reaching state \'S95\'");
                int temp135;
                int temp136;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp137;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp137 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp135, out temp136);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S96\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 45,out 46]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 45, temp135, "folderIdIndex of CreateFolder, state S96");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 46, temp136, "folderHandleIndex of CreateFolder, state S96");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp137, "return of CreateFolder, state S96");
                this.Manager.Comment("reaching state \'S97\'");
                int temp138;
                int temp139;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp140;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp140 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp138, out temp139);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S98\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 46,out 47]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 46, temp138, "folderIdIndex of CreateFolder, state S98");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 47, temp139, "folderHandleIndex of CreateFolder, state S98");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp140, "return of CreateFolder, state S98");
                this.Manager.Comment("reaching state \'S99\'");
                int temp141;
                int temp142;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp143;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp143 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp141, out temp142);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S100\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 47,out 48]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 47, temp141, "folderIdIndex of CreateFolder, state S100");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 48, temp142, "folderHandleIndex of CreateFolder, state S100");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp143, "return of CreateFolder, state S100");
                this.Manager.Comment("reaching state \'S101\'");
                int temp144;
                int temp145;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp146;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp146 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp144, out temp145);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S102\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 48,out 49]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 48, temp144, "folderIdIndex of CreateFolder, state S102");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 49, temp145, "folderHandleIndex of CreateFolder, state S102");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp146, "return of CreateFolder, state S102");
                this.Manager.Comment("reaching state \'S103\'");
                int temp147;
                int temp148;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp149;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp149 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp147, out temp148);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S104\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 49,out 50]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 49, temp147, "folderIdIndex of CreateFolder, state S104");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 50, temp148, "folderHandleIndex of CreateFolder, state S104");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp149, "return of CreateFolder, state S104");
                this.Manager.Comment("reaching state \'S105\'");
                int temp150;
                int temp151;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp152;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp152 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp150, out temp151);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S106\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 50,out 51]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 50, temp150, "folderIdIndex of CreateFolder, state S106");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 51, temp151, "folderHandleIndex of CreateFolder, state S106");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp152, "return of CreateFolder, state S106");
                this.Manager.Comment("reaching state \'S107\'");
                int temp153;
                int temp154;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp155;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp155 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp153, out temp154);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S108\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 51,out 52]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 51, temp153, "folderIdIndex of CreateFolder, state S108");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 52, temp154, "folderHandleIndex of CreateFolder, state S108");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp155, "return of CreateFolder, state S108");
                this.Manager.Comment("reaching state \'S109\'");
                int temp156;
                int temp157;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp158;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp158 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp156, out temp157);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S110\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 52,out 53]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 52, temp156, "folderIdIndex of CreateFolder, state S110");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 53, temp157, "folderHandleIndex of CreateFolder, state S110");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp158, "return of CreateFolder, state S110");
                this.Manager.Comment("reaching state \'S111\'");
                int temp159;
                int temp160;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp161;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp161 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp159, out temp160);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S112\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 53,out 54]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 53, temp159, "folderIdIndex of CreateFolder, state S112");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 54, temp160, "folderHandleIndex of CreateFolder, state S112");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp161, "return of CreateFolder, state S112");
                this.Manager.Comment("reaching state \'S113\'");
                int temp162;
                int temp163;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp164;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp164 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp162, out temp163);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S114\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 54,out 55]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 54, temp162, "folderIdIndex of CreateFolder, state S114");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 55, temp163, "folderHandleIndex of CreateFolder, state S114");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp164, "return of CreateFolder, state S114");
                this.Manager.Comment("reaching state \'S115\'");
                int temp165;
                int temp166;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp167 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp165, out temp166);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S116\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 55,out 56]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 55, temp165, "folderIdIndex of CreateFolder, state S116");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 56, temp166, "folderHandleIndex of CreateFolder, state S116");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of CreateFolder, state S116");
                this.Manager.Comment("reaching state \'S117\'");
                int temp168;
                int temp169;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp170;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp170 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp168, out temp169);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S118\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 56,out 57]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 56, temp168, "folderIdIndex of CreateFolder, state S118");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 57, temp169, "folderHandleIndex of CreateFolder, state S118");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp170, "return of CreateFolder, state S118");
                this.Manager.Comment("reaching state \'S119\'");
                int temp171;
                int temp172;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp173;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp173 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp171, out temp172);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S120\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 57,out 58]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 57, temp171, "folderIdIndex of CreateFolder, state S120");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 58, temp172, "folderHandleIndex of CreateFolder, state S120");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp173, "return of CreateFolder, state S120");
                this.Manager.Comment("reaching state \'S121\'");
                int temp174;
                int temp175;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp176;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp176 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp174, out temp175);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S122\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 58,out 59]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 58, temp174, "folderIdIndex of CreateFolder, state S122");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 59, temp175, "folderHandleIndex of CreateFolder, state S122");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp176, "return of CreateFolder, state S122");
                this.Manager.Comment("reaching state \'S123\'");
                int temp177;
                int temp178;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp179;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp179 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp177, out temp178);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S124\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 59,out 60]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 59, temp177, "folderIdIndex of CreateFolder, state S124");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 60, temp178, "folderHandleIndex of CreateFolder, state S124");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp179, "return of CreateFolder, state S124");
                this.Manager.Comment("reaching state \'S125\'");
                int temp180;
                int temp181;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp182;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp182 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp180, out temp181);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S126\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 60,out 61]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 60, temp180, "folderIdIndex of CreateFolder, state S126");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 61, temp181, "folderHandleIndex of CreateFolder, state S126");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp182, "return of CreateFolder, state S126");
                this.Manager.Comment("reaching state \'S127\'");
                int temp183;
                int temp184;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp185;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp185 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp183, out temp184);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S128\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 61,out 62]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 61, temp183, "folderIdIndex of CreateFolder, state S128");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 62, temp184, "folderHandleIndex of CreateFolder, state S128");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp185, "return of CreateFolder, state S128");
                this.Manager.Comment("reaching state \'S129\'");
                int temp186;
                int temp187;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp188;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                temp188 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp186, out temp187);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S130\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 62,out 63]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 62, temp186, "folderIdIndex of CreateFolder, state S130");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 63, temp187, "folderHandleIndex of CreateFolder, state S130");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp188, "return of CreateFolder, state S130");
                this.Manager.Comment("reaching state \'S131\'");
                int temp189;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp190;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                        "Unicode|NoForeignIdentifiers,Eid,[\"PidTagCreationTime\"],out _)\'");
                temp190 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp189);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S132\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 64]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 64, temp189, "downloadcontextHandleIndex of SynchronizationConfigure, state S132");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp190, "return of SynchronizationConfigure, state S132");
                this.Manager.Comment("reaching state \'S133\'");
                bool temp191;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp191);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp191);
                this.Manager.Comment("reaching state \'S134\'");
                int temp206 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyStreamSplit_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyStreamSplit_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S05_SyncICSHierarchyStreamSplit_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyStreamSplit_TestSuiteCheckRequirementEnabledChecker1)));
                if ((temp206 == 0)) {
                    this.Manager.Comment("reaching state \'S135\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp192;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,64,PidTagIdsetGiven,True,0)\'");
                    temp192 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 64, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S137\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp192, "return of SynchronizationUploadState, state S137");
                    this.Manager.Comment("reaching state \'S139\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp193;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,64,PidTagCnsetSeen,False,0)\'");
                    temp193 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 64, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S141\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp193, "return of SynchronizationUploadState, state S141");
                    this.Manager.Comment("reaching state \'S143\'");
                    int temp194;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp195;
                    bool temp196;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp197;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,64,Normal,out _,out _,out _)\'");
                    temp197 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 64, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp194, out temp195, out temp196);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S145\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                            "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                            "True),FolderCount=60,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGi" +
                            "ven={10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,3,30,31,32,33,3" +
                            "4,35,36,37,38,39,4,40,41,42,43,44,45,46,47,48,49,5,50,51,52,53,54,55,56,57,58,59" +
                            ",6,60,61,62,7,8,9},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPro" +
                            "pertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderB" +
                            "eforeChild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSet" +
                            "Deleted={},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=Fal" +
                            "se)),AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,Messa" +
                            "geInfo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelet" +
                            "ed=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)" +
                            ",IsReadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex" +
                            "=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPro" +
                            "pertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessag" +
                            "eDeliveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Ab" +
                            "stractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsP" +
                            "idTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=F" +
                            "alse,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderM" +
                            "essage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessa" +
                            "geList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=Abstra" +
                            "ctMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMe" +
                            "ssageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTa" +
                            "gFXDelProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodeP" +
                            "age=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractT" +
                            "opFolder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarn" +
                            "ingOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolder" +
                            "ContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFX" +
                            "DelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByP" +
                            "idTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False," +
                            "AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMes" +
                            "sageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededBy" +
                            "PidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProperties" +
                            "InUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherC" +
                            "odePage=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=Abstr" +
                            "actState(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNum" +
                            "ber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChan" +
                            "geNumber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMess" +
                            "ageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByP" +
                            "idTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesI" +
                            "nUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCo" +
                            "dePage=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTag" +
                            "EcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageConten" +
                            "t(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(A" +
                            "ttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fals" +
                            "e),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Strin" +
                            "gPropertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumbe" +
                            "r=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp194, "transferBufferIndex of FastTransferSourceGetBuffer, state S145");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            true,
                                                            true,
                                                            false,
                                                            true}),
                                                60,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 10, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 11, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 12, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 13, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 14, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 15, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 16, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 17, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 18, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 19, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 20, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 21, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 22, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 23, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 24, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 25, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 26, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 27, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 28, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 29, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 30, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 31, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 32, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 33, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 34, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 35, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 36, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 37, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 38, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 39, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 40, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 41, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 42, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 43, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 44, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 45, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 46, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 47, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 48, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 49, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 50, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 51, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 52, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 53, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                            "Element"}, new object[] {
                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 54, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                        "Element"}, new object[] {
                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 55, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                    "Element"}, new object[] {
                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 56, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                "Element"}, new object[] {
                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 57, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                            "Element"}, new object[] {
                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 58, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                        "Element"}, new object[] {
                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 59, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                    "Element"}, new object[] {
                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 6, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                "Element"}, new object[] {
                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 60, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                            "Element"}, new object[] {
                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 61, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                        "Element"}, new object[] {
                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 62, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 7, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 8, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 9, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp195, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S145");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp196, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S145");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp197, "return of FastTransferSourceGetBuffer, state S145");
                    this.Manager.Comment("reaching state \'S147\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp198;
                    this.Manager.Comment("executing step \'call Release(1,64)\'");
                    temp198 = this.IMS_OXCFXICSAdapterInstance.Release(1, 64);
                    this.Manager.Comment("reaching state \'S149\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp198, "return of Release, state S149");
                    this.Manager.Comment("reaching state \'S151\'");
                    goto label0;
                }
                if ((temp206 == 1)) {
                    this.Manager.Comment("reaching state \'S136\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp199;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,64,PidTagIdsetGiven,True,0)\'");
                    temp199 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 64, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S138\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp199, "return of SynchronizationUploadState, state S138");
                    this.Manager.Comment("reaching state \'S140\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp200;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,64,PidTagCnsetSeen,False,0)\'");
                    temp200 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 64, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S142\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp200, "return of SynchronizationUploadState, state S142");
                    this.Manager.Comment("reaching state \'S144\'");
                    int temp201;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp202;
                    bool temp203;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp204;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,64,Normal,out _,out _,out _)\'");
                    temp204 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 64, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp201, out temp202, out temp203);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S146\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                            "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                            "True),FolderCount=60,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGi" +
                            "ven={10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,3,30,31,32,33,3" +
                            "4,35,36,37,38,39,4,40,41,42,43,44,45,46,47,48,49,5,50,51,52,53,54,55,56,57,58,59" +
                            ",6,60,61,62,7,8,9},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPro" +
                            "pertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderB" +
                            "eforeChild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSet" +
                            "Deleted={},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=Fal" +
                            "se)),AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,Messa" +
                            "geInfo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelet" +
                            "ed=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)" +
                            ",IsReadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex" +
                            "=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPro" +
                            "pertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessag" +
                            "eDeliveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Ab" +
                            "stractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsP" +
                            "idTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=F" +
                            "alse,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderM" +
                            "essage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessa" +
                            "geList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=Abstra" +
                            "ctMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMe" +
                            "ssageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTa" +
                            "gFXDelProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodeP" +
                            "age=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractT" +
                            "opFolder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarn" +
                            "ingOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolder" +
                            "ContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFX" +
                            "DelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByP" +
                            "idTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False," +
                            "AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMes" +
                            "sageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededBy" +
                            "PidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProperties" +
                            "InUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherC" +
                            "odePage=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=Abstr" +
                            "actState(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNum" +
                            "ber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChan" +
                            "geNumber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMess" +
                            "ageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByP" +
                            "idTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesI" +
                            "nUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCo" +
                            "dePage=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTag" +
                            "EcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageConten" +
                            "t(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(A" +
                            "ttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fals" +
                            "e),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Strin" +
                            "gPropertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumbe" +
                            "r=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp201, "transferBufferIndex of FastTransferSourceGetBuffer, state S146");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            true,
                                                            true,
                                                            false,
                                                            true}),
                                                60,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 10, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 11, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 12, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 13, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 14, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 15, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 16, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 17, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 18, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 19, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 20, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 21, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 22, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 23, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 24, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 25, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 26, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 27, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 28, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 29, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 30, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 31, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 32, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 33, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 34, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 35, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 36, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 37, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 38, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 39, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 40, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 41, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 42, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 43, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 44, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 45, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 46, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 47, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 48, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 49, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                            "Element"}, new object[] {
                                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 50, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                        "Element"}, new object[] {
                                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 51, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                    "Element"}, new object[] {
                                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 52, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                                "Element"}, new object[] {
                                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 53, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                            "Element"}, new object[] {
                                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 54, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                        "Element"}, new object[] {
                                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 55, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                    "Element"}, new object[] {
                                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 56, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                                "Element"}, new object[] {
                                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 57, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                            "Element"}, new object[] {
                                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 58, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                        "Element"}, new object[] {
                                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 59, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                    "Element"}, new object[] {
                                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 6, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                                "Element"}, new object[] {
                                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 60, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                            "Element"}, new object[] {
                                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 61, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                        "Element"}, new object[] {
                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 62, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 7, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 8, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 9, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp202, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S146");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp203, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S146");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp204, "return of FastTransferSourceGetBuffer, state S146");
                    this.Manager.Comment("reaching state \'S148\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp205;
                    this.Manager.Comment("executing step \'call Release(1,64)\'");
                    temp205 = this.IMS_OXCFXICSAdapterInstance.Release(1, 64);
                    this.Manager.Comment("reaching state \'S150\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp205, "return of Release, state S150");
                    this.Manager.Comment("reaching state \'S152\'");
                    goto label0;
                }
                throw new InvalidOperationException("never reached");
            label0:
;
                goto label1;
            }
            if ((temp207 == 1)) {
                this.Manager.Comment("reaching state \'S3\'");
                goto label1;
            }
            throw new InvalidOperationException("never reached");
        label1:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyStreamSplit_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyStreamSplit_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S134");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyStreamSplit_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S134");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyStreamSplit_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}