//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S05_SyncICSHierarchyChange_TestSuite : PtfTestClassBase {
        
        public S05_SyncICSHierarchyChange_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp42 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyChange_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_SyncICSHierarchyChange_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp42 == 0)) {
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S10\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S12");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S12");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S12");
                this.Manager.Comment("reaching state \'S14\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S16");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S16");
                this.Manager.Comment("reaching state \'S18\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S20");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S20");
                this.Manager.Comment("reaching state \'S22\'");
                int temp9;
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test2\",out _,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test2", out temp9, out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "folderIdIndex of CreateFolder, state S24");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "folderHandleIndex of CreateFolder, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of CreateFolder, state S24");
                this.Manager.Comment("reaching state \'S26\'");
                int temp12;
                int temp13;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp14;
                this.Manager.Comment("executing step \'call CreateFolder(1,4,\"test3\",out _,out _)\'");
                temp14 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 4, "test3", out temp12, out temp13);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 4,out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp12, "folderIdIndex of CreateFolder, state S28");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp13, "folderHandleIndex of CreateFolder, state S28");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp14, "return of CreateFolder, state S28");
                this.Manager.Comment("reaching state \'S30\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of GetLocalReplicaIds, state S32");
                this.Manager.Comment("reaching state \'S34\'");
                int temp16;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                temp17 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp16);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp16, "synchronizationHandleIndex of SynchronizationOpenCollector, state S36");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of SynchronizationOpenCollector, state S36");
                this.Manager.Comment("reaching state \'S38\'");
                int temp18;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChange(1,6,3,{\"PidTagFolderTyp" +
                        "e\"},0,out _)\'");
                temp19 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChange(1, 6, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                "Rep"}, new object[] {
                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                "Element"}, new object[] {
                                                Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp18);
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R816");
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp18, "folderIdIndex of SynchronizationImportHierarchyChange, state S40");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp19, "return of SynchronizationImportHierarchyChange, state S40");
                this.Manager.Comment("reaching state \'S42\'");
                int temp20;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                        "Unicode|NoDeletions|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)" +
                        "\'");
                temp21 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(259)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagAttachLongFilename",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp20);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp20, "downloadcontextHandleIndex of SynchronizationConfigure, state S44");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of SynchronizationConfigure, state S44");
                this.Manager.Comment("reaching state \'S46\'");
                bool temp22;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp22);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp22);
                this.Manager.Comment("reaching state \'S48\'");
                int temp41 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyChange_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S05_SyncICSHierarchyChange_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuiteCheckRequirementEnabledChecker1)));
                if ((temp41 == 0)) {
                    this.Manager.Comment("reaching state \'S50\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp23 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S54\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp23, "return of SynchronizationUploadState, state S54");
                    this.Manager.Comment("reaching state \'S58\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp24 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S62\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of SynchronizationUploadState, state S62");
                    this.Manager.Comment("reaching state \'S66\'");
                    int temp25;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp26;
                    bool temp27;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp28 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp25, out temp26, out temp27);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1129");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S70\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                            "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                            "False),FolderCount=3,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGi" +
                            "ven={3,4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                            "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeCh" +
                            "ild=True,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "{},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abs" +
                            "tractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=n" +
                            "ull,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null," +
                            "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadS" +
                            "tateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliver" +
                            "yTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFo" +
                            "lderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNew" +
                            "FXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsS" +
                            "ubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(I" +
                            "sFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(I" +
                            "sPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessag" +
                            "eContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChi" +
                            "ldren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPr" +
                            "op=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fals" +
                            "e,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder" +
                            "=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=F" +
                            "alse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentN" +
                            "otOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=" +
                            "False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXD" +
                            "elProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessa" +
                            "ge=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState" +
                            "(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fals" +
                            "e,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber" +
                            "=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                            "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                            "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                            "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                            "alse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarnin" +
                            "gOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPe" +
                            "rmissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachmen" +
                            "tPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Strin" +
                            "gPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropert" +
                            "iesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)" +
                            ",out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp25, "transferBufferIndex of FastTransferSourceGetBuffer, state S70");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            true,
                                                            true,
                                                            false,
                                                            false}),
                                                3,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp26, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S70");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp27, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S70");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of FastTransferSourceGetBuffer, state S70");
                    this.Manager.Comment("reaching state \'S74\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                    this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                    temp29 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                1,
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            2,
                                                            ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                    this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                    this.Manager.Checkpoint("MS-OXCFXICS_R940");
                    this.Manager.Comment("reaching state \'S78\'");
                    this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of SetLocalReplicaMidsetDeleted, state S78");
                    this.Manager.Comment("reaching state \'S82\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                    this.Manager.Comment("executing step \'call Release(1,7)\'");
                    temp30 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                    this.Manager.Comment("reaching state \'S86\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp30, "return of Release, state S86");
                    this.Manager.Comment("reaching state \'S90\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp31 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S94\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of Release, state S94");
                    this.Manager.Comment("reaching state \'S98\'");
                    goto label0;
                }
                if ((temp41 == 1)) {
                    this.Manager.Comment("reaching state \'S51\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp32 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S55\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of SynchronizationUploadState, state S55");
                    this.Manager.Comment("reaching state \'S59\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp33 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S63\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of SynchronizationUploadState, state S63");
                    this.Manager.Comment("reaching state \'S67\'");
                    int temp34;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp35;
                    bool temp36;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp37 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp34, out temp35, out temp36);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1129");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S71\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                            "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                            "False),FolderCount=3,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGi" +
                            "ven={3,4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                            "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeCh" +
                            "ild=True,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "{},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abs" +
                            "tractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=n" +
                            "ull,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null," +
                            "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadS" +
                            "tateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliver" +
                            "yTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFo" +
                            "lderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNew" +
                            "FXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsS" +
                            "ubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(I" +
                            "sFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(I" +
                            "sPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessag" +
                            "eContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChi" +
                            "ldren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPr" +
                            "op=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fals" +
                            "e,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder" +
                            "=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=F" +
                            "alse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentN" +
                            "otOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=" +
                            "False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXD" +
                            "elProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessa" +
                            "ge=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState" +
                            "(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fals" +
                            "e,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber" +
                            "=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                            "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                            "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                            "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                            "alse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarnin" +
                            "gOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPe" +
                            "rmissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachmen" +
                            "tPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Strin" +
                            "gPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropert" +
                            "iesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)" +
                            ",out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp34, "transferBufferIndex of FastTransferSourceGetBuffer, state S71");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            true,
                                                            true,
                                                            false,
                                                            false}),
                                                3,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp35, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S71");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp36, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S71");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp37, "return of FastTransferSourceGetBuffer, state S71");
                    this.Manager.Comment("reaching state \'S75\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                    this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                    temp38 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                1,
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            2,
                                                            ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                    this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                    this.Manager.Checkpoint("MS-OXCFXICS_R940");
                    this.Manager.Comment("reaching state \'S79\'");
                    this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp38, "return of SetLocalReplicaMidsetDeleted, state S79");
                    this.Manager.Comment("reaching state \'S83\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                    this.Manager.Comment("executing step \'call Release(1,7)\'");
                    temp39 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                    this.Manager.Comment("reaching state \'S87\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of Release, state S87");
                    this.Manager.Comment("reaching state \'S91\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp40;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp40 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S95\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp40, "return of Release, state S95");
                    this.Manager.Comment("reaching state \'S99\'");
                    goto label0;
                }
                throw new InvalidOperationException("never reached");
            label0:
;
                goto label1;
            }
            if ((temp42 == 1)) {
                this.Manager.Comment("reaching state \'S5\'");
                goto label1;
            }
            throw new InvalidOperationException("never reached");
        label1:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S48");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S48");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp43;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp43);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp43);
            this.Manager.Comment("reaching state \'S3\'");
            int temp85 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyChange_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_SyncICSHierarchyChange_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp85 == 0)) {
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S9\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S11\'");
                int temp44;
                int temp45;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp46 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp44, out temp45);
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp44, "logonHandleIndex of Logon, state S13");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp45, "inboxFolderIdIndex of Logon, state S13");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of Logon, state S13");
                this.Manager.Comment("reaching state \'S15\'");
                int temp47;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp48;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp48 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp47);
                this.Manager.Comment("reaching state \'S17\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp47, "folderHandleIndex of OpenFolder, state S17");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp48, "return of OpenFolder, state S17");
                this.Manager.Comment("reaching state \'S19\'");
                int temp49;
                int temp50;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp51 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp49, out temp50);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S21\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp49, "folderIdIndex of CreateFolder, state S21");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp50, "folderHandleIndex of CreateFolder, state S21");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of CreateFolder, state S21");
                this.Manager.Comment("reaching state \'S23\'");
                int temp52;
                int temp53;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test2\",out _,out _)\'");
                temp54 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test2", out temp52, out temp53);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp52, "folderIdIndex of CreateFolder, state S25");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp53, "folderHandleIndex of CreateFolder, state S25");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of CreateFolder, state S25");
                this.Manager.Comment("reaching state \'S27\'");
                int temp55;
                int temp56;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                this.Manager.Comment("executing step \'call CreateFolder(1,4,\"test3\",out _,out _)\'");
                temp57 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 4, "test3", out temp55, out temp56);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S29\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 4,out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp55, "folderIdIndex of CreateFolder, state S29");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp56, "folderHandleIndex of CreateFolder, state S29");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of CreateFolder, state S29");
                this.Manager.Comment("reaching state \'S31\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp58;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp58 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S33\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp58, "return of GetLocalReplicaIds, state S33");
                this.Manager.Comment("reaching state \'S35\'");
                int temp59;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp60;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                temp60 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp59);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp59, "synchronizationHandleIndex of SynchronizationOpenCollector, state S37");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp60, "return of SynchronizationOpenCollector, state S37");
                this.Manager.Comment("reaching state \'S39\'");
                int temp61;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChange(1,6,3,{\"PidTagFolderTyp" +
                        "e\"},0,out _)\'");
                temp62 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChange(1, 6, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                "Rep"}, new object[] {
                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                "Element"}, new object[] {
                                                Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp61);
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R816");
                this.Manager.Comment("reaching state \'S41\'");
                this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp61, "folderIdIndex of SynchronizationImportHierarchyChange, state S41");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp62, "return of SynchronizationImportHierarchyChange, state S41");
                this.Manager.Comment("reaching state \'S43\'");
                int temp63;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                        "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                temp64 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagAttachLongFilename",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp63);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S45\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp63, "downloadcontextHandleIndex of SynchronizationConfigure, state S45");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of SynchronizationConfigure, state S45");
                this.Manager.Comment("reaching state \'S47\'");
                bool temp65;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp65);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp65);
                this.Manager.Comment("reaching state \'S49\'");
                int temp84 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyChange_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S05_SyncICSHierarchyChange_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite1CheckRequirementEnabledChecker1)));
                if ((temp84 == 0)) {
                    this.Manager.Comment("reaching state \'S52\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp66 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S56\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp66, "return of SynchronizationUploadState, state S56");
                    this.Manager.Comment("reaching state \'S60\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp67 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S64\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp67, "return of SynchronizationUploadState, state S64");
                    this.Manager.Comment("reaching state \'S68\'");
                    int temp68;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp69;
                    bool temp70;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp71 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp68, out temp69, out temp70);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1129");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S72\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                            "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                            "False),FolderCount=3,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGi" +
                            "ven={3,4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                            "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeCh" +
                            "ild=True,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "{},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abs" +
                            "tractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=n" +
                            "ull,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null," +
                            "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadS" +
                            "tateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliver" +
                            "yTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFo" +
                            "lderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNew" +
                            "FXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsS" +
                            "ubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(I" +
                            "sFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(I" +
                            "sPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessag" +
                            "eContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChi" +
                            "ldren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPr" +
                            "op=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fals" +
                            "e,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder" +
                            "=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=F" +
                            "alse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentN" +
                            "otOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=" +
                            "False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXD" +
                            "elProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessa" +
                            "ge=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState" +
                            "(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fals" +
                            "e,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber" +
                            "=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                            "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                            "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                            "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                            "alse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarnin" +
                            "gOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPe" +
                            "rmissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachmen" +
                            "tPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Strin" +
                            "gPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropert" +
                            "iesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)" +
                            ",out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp68, "transferBufferIndex of FastTransferSourceGetBuffer, state S72");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            true,
                                                            true,
                                                            false,
                                                            false}),
                                                3,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp69, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S72");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp70, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S72");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of FastTransferSourceGetBuffer, state S72");
                    this.Manager.Comment("reaching state \'S76\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                    this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                    temp72 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                1,
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            2,
                                                            ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                    this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                    this.Manager.Checkpoint("MS-OXCFXICS_R940");
                    this.Manager.Comment("reaching state \'S80\'");
                    this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of SetLocalReplicaMidsetDeleted, state S80");
                    this.Manager.Comment("reaching state \'S84\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                    this.Manager.Comment("executing step \'call Release(1,7)\'");
                    temp73 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                    this.Manager.Comment("reaching state \'S88\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of Release, state S88");
                    this.Manager.Comment("reaching state \'S92\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp74 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S96\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of Release, state S96");
                    this.Manager.Comment("reaching state \'S100\'");
                    goto label2;
                }
                if ((temp84 == 1)) {
                    this.Manager.Comment("reaching state \'S53\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp75 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S57\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of SynchronizationUploadState, state S57");
                    this.Manager.Comment("reaching state \'S61\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp76;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp76 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S65\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp76, "return of SynchronizationUploadState, state S65");
                    this.Manager.Comment("reaching state \'S69\'");
                    int temp77;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp78;
                    bool temp79;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp80;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp80 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp77, out temp78, out temp79);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1129");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S73\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                            "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                            "False),FolderCount=3,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGi" +
                            "ven={3,4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                            "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeCh" +
                            "ild=True,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "{},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abs" +
                            "tractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=n" +
                            "ull,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null," +
                            "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadS" +
                            "tateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliver" +
                            "yTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFo" +
                            "lderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNew" +
                            "FXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsS" +
                            "ubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(I" +
                            "sFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(I" +
                            "sPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessag" +
                            "eContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChi" +
                            "ldren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPr" +
                            "op=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fals" +
                            "e,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder" +
                            "=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=F" +
                            "alse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentN" +
                            "otOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=" +
                            "False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXD" +
                            "elProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessa" +
                            "ge=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState" +
                            "(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fals" +
                            "e,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber" +
                            "=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                            "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                            "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                            "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                            "alse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarnin" +
                            "gOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPe" +
                            "rmissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachmen" +
                            "tPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Strin" +
                            "gPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropert" +
                            "iesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)" +
                            ",out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp77, "transferBufferIndex of FastTransferSourceGetBuffer, state S73");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            true,
                                                            true,
                                                            false,
                                                            false}),
                                                3,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp78, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S73");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp79, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S73");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp80, "return of FastTransferSourceGetBuffer, state S73");
                    this.Manager.Comment("reaching state \'S77\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                    this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                    temp81 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                1,
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            2,
                                                            ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                    this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                    this.Manager.Checkpoint("MS-OXCFXICS_R940");
                    this.Manager.Comment("reaching state \'S81\'");
                    this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of SetLocalReplicaMidsetDeleted, state S81");
                    this.Manager.Comment("reaching state \'S85\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp82;
                    this.Manager.Comment("executing step \'call Release(1,7)\'");
                    temp82 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                    this.Manager.Comment("reaching state \'S89\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp82, "return of Release, state S89");
                    this.Manager.Comment("reaching state \'S93\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp83 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S97\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of Release, state S97");
                    this.Manager.Comment("reaching state \'S101\'");
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp85 == 1)) {
                this.Manager.Comment("reaching state \'S7\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S49");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S49");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyChange_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
    }
}