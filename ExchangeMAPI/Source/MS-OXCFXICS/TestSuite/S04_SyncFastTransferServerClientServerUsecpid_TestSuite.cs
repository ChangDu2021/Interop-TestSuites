//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S04_SyncFastTransferServerClientServerUsecpid_TestSuite : PtfTestClassBase {
        
        public S04_SyncFastTransferServerClientServerUsecpid_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckSecondSUTOnlineDelegate1(bool isSecondSUTOnline);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckSecondSUTOnlineInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckSecondSUTOnline", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp73 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp73 == 0)) {
                this.Manager.Comment("reaching state \'S8\'");
                bool temp1;
                this.Manager.Comment("executing step \'call CheckSecondSUTOnline(out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckSecondSUTOnline(out temp1);
                this.Manager.AddReturn(CheckSecondSUTOnlineInfo, null, temp1);
                this.Manager.Comment("reaching state \'S16\'");
                int temp72 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckSecondSUTOnlineChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckSecondSUTOnlineChecker1)));
                if ((temp72 == 0)) {
                    this.Manager.Comment("reaching state \'S20\'");
                    this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                    this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                    this.Manager.Comment("reaching state \'S24\'");
                    this.Manager.Comment("checking step \'return Connect\'");
                    this.Manager.Comment("reaching state \'S28\'");
                    this.Manager.Comment("executing step \'call Connect(2,PrivateMailboxServer)\'");
                    this.IMS_OXCFXICSAdapterInstance.Connect(2, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                    this.Manager.Comment("reaching state \'S32\'");
                    this.Manager.Comment("checking step \'return Connect\'");
                    this.Manager.Comment("reaching state \'S36\'");
                    int temp2;
                    int temp3;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp4;
                    this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                    temp4 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2, out temp3);
                    this.Manager.Comment("reaching state \'S40\'");
                    this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "logonHandleIndex of Logon, state S40");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp3, "inboxFolderIdIndex of Logon, state S40");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp4, "return of Logon, state S40");
                    this.Manager.Comment("reaching state \'S44\'");
                    int temp5;
                    int temp6;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp7;
                    this.Manager.Comment("executing step \'call Logon(2,Private,out _,out _)\'");
                    temp7 = this.IMS_OXCFXICSAdapterInstance.Logon(2, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp5, out temp6);
                    this.Manager.Comment("reaching state \'S48\'");
                    this.Manager.Comment("checking step \'return Logon/[out 2,out 2]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp5, "logonHandleIndex of Logon, state S48");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "inboxFolderIdIndex of Logon, state S48");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp7, "return of Logon, state S48");
                    this.Manager.Comment("reaching state \'S52\'");
                    int temp8;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                    this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                    temp9 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp8);
                    this.Manager.Comment("reaching state \'S56\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp8, "folderHandleIndex of OpenFolder, state S56");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of OpenFolder, state S56");
                    this.Manager.Comment("reaching state \'S60\'");
                    int temp10;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                    this.Manager.Comment("executing step \'call OpenFolder(2,2,2,out _)\'");
                    temp11 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(2, 2, 2, out temp10);
                    this.Manager.Comment("reaching state \'S64\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "folderHandleIndex of OpenFolder, state S64");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of OpenFolder, state S64");
                    this.Manager.Comment("reaching state \'S68\'");
                    int temp12;
                    int temp13;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp14;
                    this.Manager.Comment("executing step \'call CreateFolder(1,3,\"TestFolderInServerA\",out _,out _)\'");
                    temp14 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "TestFolderInServerA", out temp12, out temp13);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S72\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 5]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp12, "folderIdIndex of CreateFolder, state S72");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp13, "folderHandleIndex of CreateFolder, state S72");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp14, "return of CreateFolder, state S72");
                    this.Manager.Comment("reaching state \'S76\'");
                    int temp15;
                    int temp16;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                    this.Manager.Comment("executing step \'call CreateFolder(1,5,\"SubFolderServerA\",out _,out _)\'");
                    temp17 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 5, "SubFolderServerA", out temp15, out temp16);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S80\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 4,out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp15, "folderIdIndex of CreateFolder, state S80");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp16, "folderHandleIndex of CreateFolder, state S80");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of CreateFolder, state S80");
                    this.Manager.Comment("reaching state \'S84\'");
                    int temp18;
                    int temp19;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                    this.Manager.Comment("executing step \'call CreateFolder(2,4,\"TestFolderInServerB\",out _,out _)\'");
                    temp20 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(2, 4, "TestFolderInServerB", out temp18, out temp19);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S88\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 5,out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp18, "folderIdIndex of CreateFolder, state S88");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp19, "folderHandleIndex of CreateFolder, state S88");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp20, "return of CreateFolder, state S88");
                    this.Manager.Comment("reaching state \'S92\'");
                    int temp21;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                    this.Manager.Comment("executing step \'call CreateMessage(1,5,3,False,out _)\'");
                    temp22 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 5, 3, false, out temp21);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                    this.Manager.Comment("reaching state \'S96\'");
                    this.Manager.Comment("checking step \'return CreateMessage/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp21, "messageHandleIndex of CreateMessage, state S96");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of CreateMessage, state S96");
                    this.Manager.Comment("reaching state \'S100\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                    this.Manager.Comment("executing step \'call SetProperties(1,8,[\"PidTagBody\"])\'");
                    temp23 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 8, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagBody",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S104\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of SetProperties, state S104");
                    this.Manager.Comment("reaching state \'S108\'");
                    int temp24;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,8,out _)\'");
                    temp25 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 8, out temp24);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S112\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp24, "messageIdIndex of SaveChangesMessage, state S112");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of SaveChangesMessage, state S112");
                    this.Manager.Comment("reaching state \'S116\'");
                    int temp26;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp27;
                    this.Manager.Comment("executing step \'call CreateMessage(2,7,5,False,out _)\'");
                    temp27 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(2, 7, 5, false, out temp26);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                    this.Manager.Comment("reaching state \'S120\'");
                    this.Manager.Comment("checking step \'return CreateMessage/[out 9]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp26, "messageHandleIndex of CreateMessage, state S120");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp27, "return of CreateMessage, state S120");
                    this.Manager.Comment("reaching state \'S124\'");
                    int temp28;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(2,9,out _)\'");
                    temp29 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(2, 9, out temp28);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S128\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp28, "messageIdIndex of SaveChangesMessage, state S128");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of SaveChangesMessage, state S128");
                    this.Manager.Comment("reaching state \'S132\'");
                    int temp30;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                    this.Manager.Comment("executing step \'call CreateAttachment(1,8,out _)\'");
                    temp31 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 8, out temp30);
                    this.Manager.Comment("reaching state \'S136\'");
                    this.Manager.Comment("checking step \'return CreateAttachment/[out 10]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp30, "attachmentHandleIndex of CreateAttachment, state S136");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of CreateAttachment, state S136");
                    this.Manager.Comment("reaching state \'S140\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                    this.Manager.Comment("executing step \'call SaveChangesAttachment(1,10)\'");
                    temp32 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 10);
                    this.Manager.Comment("reaching state \'S144\'");
                    this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of SaveChangesAttachment, state S144");
                    this.Manager.Comment("reaching state \'S148\'");
                    int temp33;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                    this.Manager.Comment("executing step \'call CreateAttachment(2,9,out _)\'");
                    temp34 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(2, 9, out temp33);
                    this.Manager.Comment("reaching state \'S152\'");
                    this.Manager.Comment("checking step \'return CreateAttachment/[out 11]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp33, "attachmentHandleIndex of CreateAttachment, state S152");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of CreateAttachment, state S152");
                    this.Manager.Comment("reaching state \'S156\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                    this.Manager.Comment("executing step \'call SaveChangesAttachment(2,11)\'");
                    temp35 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(2, 11);
                    this.Manager.Comment("reaching state \'S160\'");
                    this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of SaveChangesAttachment, state S160");
                    this.Manager.Comment("reaching state \'S164\'");
                    bool temp36;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3454,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3454, out temp36);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp36);
                    this.Manager.Comment("reaching state \'S168\'");
                    int temp71 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckRequirementEnabledChecker1)));
                    if ((temp71 == 0)) {
                        this.Manager.Comment("reaching state \'S172\'");
                        int temp37;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,8,MessageHandle,False,None,UseCpi" +
                                "d|ForceUnicode,[\"PidTagAccess\",\"PidTagBody\",\"PidTagCreationTime\"],out _)\'");
                        temp38 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(10)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagBody",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagCreationTime",
                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})}), out temp37);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S180\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 12]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp37, "copyToHandleIndex of FastTransferSourceCopyTo, state S180");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp38, "return of FastTransferSourceCopyTo, state S180");
                        this.Manager.Comment("reaching state \'S188\'");
                        int temp39;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp40;
                        this.Manager.Comment("executing step \'call FastTransferDestinationConfigure(2,9,CopyTo,Move,out _)\'");
                        temp40 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationConfigure(2, 9, ((Microsoft.Protocols.TestSuites.Common.SourceOperation)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferDestinationConfigureCopyFlags)(1)), out temp39);
                        this.Manager.Checkpoint("MS-OXCFXICS_R581");
                        this.Manager.Comment("reaching state \'S196\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationConfigure/[out 13]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 13, temp39, "configHandleIndex of FastTransferDestinationConfigure, state S196");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp40, "return of FastTransferDestinationConfigure, state S196");
                        this.Manager.Comment("reaching state \'S204\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                        this.Manager.Comment("executing step \'call TellVersion(1,12,2)\'");
                        temp41 = this.IMS_OXCFXICSAdapterInstance.TellVersion(1, 12, 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S212\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of TellVersion, state S212");
                        this.Manager.Comment("reaching state \'S220\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                        this.Manager.Comment("executing step \'call TellVersion(2,13,1)\'");
                        temp42 = this.IMS_OXCFXICSAdapterInstance.TellVersion(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S228\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp42, "return of TellVersion, state S228");
                        this.Manager.Comment("reaching state \'S236\'");
                        int temp43;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp44;
                        bool temp45;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                        temp46 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp43, out temp44, out temp45);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3326");
                        this.Manager.Checkpoint("MS-OXCFXICS_R599");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3782");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3304");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2276");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S244\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                                "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                                "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                                "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                                "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                                "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                                ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                                "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                                "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                                "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                                "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                                "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                                "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                                "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                                "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                                ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                                "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                                "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                                "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                                "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                                "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                                "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                                "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                                "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                                "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                                "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                                "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                                "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                                "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                                "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                                "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                                "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                                "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                                "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                                "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                                "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                                "gFXDelProp=True,RecipientPrecededByPidTagFXDelProp=True),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=True,StringPropertiesInOtherCodePage=" +
                                "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                                "),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp43, "transferBufferIndex of FastTransferSourceGetBuffer, state S244");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                true,
                                                                true}),
                                                    false,
                                                    true,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp44, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S244");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp45, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S244");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of FastTransferSourceGetBuffer, state S244");
                        this.Manager.Comment("reaching state \'S252\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                        this.Manager.Comment("executing step \'call FastTransferDestinationPutBuffer(2,13,1)\'");
                        temp47 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationPutBuffer(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R614");
                        this.Manager.Comment("reaching state \'S260\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationPutBuffer/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of FastTransferDestinationPutBuffer, state S260");
                        this.Manager.Comment("reaching state \'S268\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp48;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp48 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S276\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp48, "return of Release, state S276");
                        this.Manager.Comment("reaching state \'S284\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                        this.Manager.Comment("executing step \'call Release(2,9)\'");
                        temp49 = this.IMS_OXCFXICSAdapterInstance.Release(2, 9);
                        this.Manager.Comment("reaching state \'S292\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of Release, state S292");
                        this.Manager.Comment("reaching state \'S300\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp50 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S308\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of Release, state S308");
                        this.Manager.Comment("reaching state \'S316\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp51 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S324\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of Release, state S324");
                        this.Manager.Comment("reaching state \'S332\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                        this.Manager.Comment("executing step \'call Release(2,11)\'");
                        temp52 = this.IMS_OXCFXICSAdapterInstance.Release(2, 11);
                        this.Manager.Comment("reaching state \'S340\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of Release, state S340");
                        this.Manager.Comment("reaching state \'S348\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                        this.Manager.Comment("executing step \'call Release(2,13)\'");
                        temp53 = this.IMS_OXCFXICSAdapterInstance.Release(2, 13);
                        this.Manager.Comment("reaching state \'S356\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of Release, state S356");
                        this.Manager.Comment("reaching state \'S364\'");
                        goto label0;
                    }
                    if ((temp71 == 1)) {
                        this.Manager.Comment("reaching state \'S173\'");
                        int temp54;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp55;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,8,MessageHandle,False,None,UseCpi" +
                                "d|ForceUnicode,[\"PidTagAccess\",\"PidTagBody\",\"PidTagCreationTime\"],out _)\'");
                        temp55 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(10)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagBody",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagCreationTime",
                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})}), out temp54);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S181\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 12]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp54, "copyToHandleIndex of FastTransferSourceCopyTo, state S181");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp55, "return of FastTransferSourceCopyTo, state S181");
                        this.Manager.Comment("reaching state \'S189\'");
                        int temp56;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                        this.Manager.Comment("executing step \'call FastTransferDestinationConfigure(2,9,CopyTo,Move,out _)\'");
                        temp57 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationConfigure(2, 9, ((Microsoft.Protocols.TestSuites.Common.SourceOperation)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferDestinationConfigureCopyFlags)(1)), out temp56);
                        this.Manager.Checkpoint("MS-OXCFXICS_R581");
                        this.Manager.Comment("reaching state \'S197\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationConfigure/[out 13]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 13, temp56, "configHandleIndex of FastTransferDestinationConfigure, state S197");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of FastTransferDestinationConfigure, state S197");
                        this.Manager.Comment("reaching state \'S205\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp58;
                        this.Manager.Comment("executing step \'call TellVersion(1,12,2)\'");
                        temp58 = this.IMS_OXCFXICSAdapterInstance.TellVersion(1, 12, 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S213\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp58, "return of TellVersion, state S213");
                        this.Manager.Comment("reaching state \'S221\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp59;
                        this.Manager.Comment("executing step \'call TellVersion(2,13,1)\'");
                        temp59 = this.IMS_OXCFXICSAdapterInstance.TellVersion(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S229\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp59, "return of TellVersion, state S229");
                        this.Manager.Comment("reaching state \'S237\'");
                        int temp60;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp61;
                        bool temp62;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                        temp63 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp60, out temp61, out temp62);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3326");
                        this.Manager.Checkpoint("MS-OXCFXICS_R599");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3782");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3304");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2276");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S245\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                                "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                                "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                                "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                                "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                                "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                                ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                                "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                                "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                                "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                                "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                                "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                                "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                                "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                                "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                                ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                                "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                                "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                                "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                                "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                                "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                                "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                                "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                                "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                                "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                                "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                                "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                                "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                                "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                                "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                                "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                                "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                                "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                                "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                                "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                                "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                                "gFXDelProp=True,RecipientPrecededByPidTagFXDelProp=True),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=True,StringPropertiesInOtherCodePage=" +
                                "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                                "),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp60, "transferBufferIndex of FastTransferSourceGetBuffer, state S245");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                true,
                                                                true}),
                                                    false,
                                                    true,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp61, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S245");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp62, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S245");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of FastTransferSourceGetBuffer, state S245");
                        this.Manager.Comment("reaching state \'S253\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                        this.Manager.Comment("executing step \'call FastTransferDestinationPutBuffer(2,13,1)\'");
                        temp64 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationPutBuffer(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R614");
                        this.Manager.Comment("reaching state \'S261\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationPutBuffer/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of FastTransferDestinationPutBuffer, state S261");
                        this.Manager.Comment("reaching state \'S269\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp65 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S277\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of Release, state S277");
                        this.Manager.Comment("reaching state \'S285\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                        this.Manager.Comment("executing step \'call Release(2,9)\'");
                        temp66 = this.IMS_OXCFXICSAdapterInstance.Release(2, 9);
                        this.Manager.Comment("reaching state \'S293\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp66, "return of Release, state S293");
                        this.Manager.Comment("reaching state \'S301\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp67 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S309\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp67, "return of Release, state S309");
                        this.Manager.Comment("reaching state \'S317\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp68;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp68 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S325\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp68, "return of Release, state S325");
                        this.Manager.Comment("reaching state \'S333\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp69;
                        this.Manager.Comment("executing step \'call Release(2,11)\'");
                        temp69 = this.IMS_OXCFXICSAdapterInstance.Release(2, 11);
                        this.Manager.Comment("reaching state \'S341\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp69, "return of Release, state S341");
                        this.Manager.Comment("reaching state \'S349\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp70;
                        this.Manager.Comment("executing step \'call Release(2,13)\'");
                        temp70 = this.IMS_OXCFXICSAdapterInstance.Release(2, 13);
                        this.Manager.Comment("reaching state \'S357\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp70, "return of Release, state S357");
                        this.Manager.Comment("reaching state \'S365\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label1;
                }
                if ((temp72 == 1)) {
                    S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS9();
                    goto label1;
                }
                throw new InvalidOperationException("never reached");
            label1:
;
                goto label2;
            }
            if ((temp73 == 1)) {
                S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS9();
                goto label2;
            }
            throw new InvalidOperationException("never reached");
        label2:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckSecondSUTOnlineChecker(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S16");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S168");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S168");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckSecondSUTOnlineChecker1(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S16");
        }
        
        private void S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS9() {
            this.Manager.Comment("reaching state \'S9\'");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp74;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp74);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp74);
            this.Manager.Comment("reaching state \'S3\'");
            int temp147 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp147 == 0)) {
                this.Manager.Comment("reaching state \'S10\'");
                bool temp75;
                this.Manager.Comment("executing step \'call CheckSecondSUTOnline(out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckSecondSUTOnline(out temp75);
                this.Manager.AddReturn(CheckSecondSUTOnlineInfo, null, temp75);
                this.Manager.Comment("reaching state \'S17\'");
                int temp146 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckSecondSUTOnlineChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckSecondSUTOnlineChecker1)));
                if ((temp146 == 0)) {
                    S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS11();
                    goto label4;
                }
                if ((temp146 == 1)) {
                    this.Manager.Comment("reaching state \'S21\'");
                    this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                    this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                    this.Manager.Comment("reaching state \'S25\'");
                    this.Manager.Comment("checking step \'return Connect\'");
                    this.Manager.Comment("reaching state \'S29\'");
                    this.Manager.Comment("executing step \'call Connect(2,PrivateMailboxServer)\'");
                    this.IMS_OXCFXICSAdapterInstance.Connect(2, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                    this.Manager.Comment("reaching state \'S33\'");
                    this.Manager.Comment("checking step \'return Connect\'");
                    this.Manager.Comment("reaching state \'S37\'");
                    int temp76;
                    int temp77;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp78;
                    this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                    temp78 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp76, out temp77);
                    this.Manager.Comment("reaching state \'S41\'");
                    this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp76, "logonHandleIndex of Logon, state S41");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp77, "inboxFolderIdIndex of Logon, state S41");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp78, "return of Logon, state S41");
                    this.Manager.Comment("reaching state \'S45\'");
                    int temp79;
                    int temp80;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                    this.Manager.Comment("executing step \'call Logon(2,Private,out _,out _)\'");
                    temp81 = this.IMS_OXCFXICSAdapterInstance.Logon(2, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp79, out temp80);
                    this.Manager.Comment("reaching state \'S49\'");
                    this.Manager.Comment("checking step \'return Logon/[out 2,out 2]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp79, "logonHandleIndex of Logon, state S49");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp80, "inboxFolderIdIndex of Logon, state S49");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of Logon, state S49");
                    this.Manager.Comment("reaching state \'S53\'");
                    int temp82;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                    this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                    temp83 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp82);
                    this.Manager.Comment("reaching state \'S57\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp82, "folderHandleIndex of OpenFolder, state S57");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of OpenFolder, state S57");
                    this.Manager.Comment("reaching state \'S61\'");
                    int temp84;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp85;
                    this.Manager.Comment("executing step \'call OpenFolder(2,2,2,out _)\'");
                    temp85 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(2, 2, 2, out temp84);
                    this.Manager.Comment("reaching state \'S65\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp84, "folderHandleIndex of OpenFolder, state S65");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp85, "return of OpenFolder, state S65");
                    this.Manager.Comment("reaching state \'S69\'");
                    int temp86;
                    int temp87;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp88;
                    this.Manager.Comment("executing step \'call CreateFolder(1,3,\"TestFolderInServerA\",out _,out _)\'");
                    temp88 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "TestFolderInServerA", out temp86, out temp87);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S73\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 5]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp86, "folderIdIndex of CreateFolder, state S73");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp87, "folderHandleIndex of CreateFolder, state S73");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp88, "return of CreateFolder, state S73");
                    this.Manager.Comment("reaching state \'S77\'");
                    int temp89;
                    int temp90;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                    this.Manager.Comment("executing step \'call CreateFolder(1,5,\"SubFolderServerA\",out _,out _)\'");
                    temp91 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 5, "SubFolderServerA", out temp89, out temp90);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S81\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 4,out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp89, "folderIdIndex of CreateFolder, state S81");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp90, "folderHandleIndex of CreateFolder, state S81");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of CreateFolder, state S81");
                    this.Manager.Comment("reaching state \'S85\'");
                    int temp92;
                    int temp93;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp94;
                    this.Manager.Comment("executing step \'call CreateFolder(2,4,\"TestFolderInServerB\",out _,out _)\'");
                    temp94 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(2, 4, "TestFolderInServerB", out temp92, out temp93);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S89\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 5,out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp92, "folderIdIndex of CreateFolder, state S89");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp93, "folderHandleIndex of CreateFolder, state S89");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp94, "return of CreateFolder, state S89");
                    this.Manager.Comment("reaching state \'S93\'");
                    int temp95;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp96;
                    this.Manager.Comment("executing step \'call CreateMessage(1,5,3,False,out _)\'");
                    temp96 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 5, 3, false, out temp95);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                    this.Manager.Comment("reaching state \'S97\'");
                    this.Manager.Comment("checking step \'return CreateMessage/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp95, "messageHandleIndex of CreateMessage, state S97");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp96, "return of CreateMessage, state S97");
                    this.Manager.Comment("reaching state \'S101\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp97;
                    this.Manager.Comment("executing step \'call SetProperties(1,8,[\"PidTagBody\"])\'");
                    temp97 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 8, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagBody",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S105\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp97, "return of SetProperties, state S105");
                    this.Manager.Comment("reaching state \'S109\'");
                    int temp98;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,8,out _)\'");
                    temp99 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 8, out temp98);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S113\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp98, "messageIdIndex of SaveChangesMessage, state S113");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of SaveChangesMessage, state S113");
                    this.Manager.Comment("reaching state \'S117\'");
                    int temp100;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp101;
                    this.Manager.Comment("executing step \'call CreateMessage(2,7,5,False,out _)\'");
                    temp101 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(2, 7, 5, false, out temp100);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                    this.Manager.Comment("reaching state \'S121\'");
                    this.Manager.Comment("checking step \'return CreateMessage/[out 9]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp100, "messageHandleIndex of CreateMessage, state S121");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp101, "return of CreateMessage, state S121");
                    this.Manager.Comment("reaching state \'S125\'");
                    int temp102;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp103;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(2,9,out _)\'");
                    temp103 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(2, 9, out temp102);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S129\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp102, "messageIdIndex of SaveChangesMessage, state S129");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp103, "return of SaveChangesMessage, state S129");
                    this.Manager.Comment("reaching state \'S133\'");
                    int temp104;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp105;
                    this.Manager.Comment("executing step \'call CreateAttachment(1,8,out _)\'");
                    temp105 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 8, out temp104);
                    this.Manager.Comment("reaching state \'S137\'");
                    this.Manager.Comment("checking step \'return CreateAttachment/[out 10]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp104, "attachmentHandleIndex of CreateAttachment, state S137");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp105, "return of CreateAttachment, state S137");
                    this.Manager.Comment("reaching state \'S141\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                    this.Manager.Comment("executing step \'call SaveChangesAttachment(1,10)\'");
                    temp106 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 10);
                    this.Manager.Comment("reaching state \'S145\'");
                    this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of SaveChangesAttachment, state S145");
                    this.Manager.Comment("reaching state \'S149\'");
                    int temp107;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp108;
                    this.Manager.Comment("executing step \'call CreateAttachment(2,9,out _)\'");
                    temp108 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(2, 9, out temp107);
                    this.Manager.Comment("reaching state \'S153\'");
                    this.Manager.Comment("checking step \'return CreateAttachment/[out 11]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp107, "attachmentHandleIndex of CreateAttachment, state S153");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp108, "return of CreateAttachment, state S153");
                    this.Manager.Comment("reaching state \'S157\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp109;
                    this.Manager.Comment("executing step \'call SaveChangesAttachment(2,11)\'");
                    temp109 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(2, 11);
                    this.Manager.Comment("reaching state \'S161\'");
                    this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp109, "return of SaveChangesAttachment, state S161");
                    this.Manager.Comment("reaching state \'S165\'");
                    bool temp110;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3454,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3454, out temp110);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp110);
                    this.Manager.Comment("reaching state \'S169\'");
                    int temp145 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckRequirementEnabledChecker1)));
                    if ((temp145 == 0)) {
                        this.Manager.Comment("reaching state \'S174\'");
                        int temp111;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,8,MessageHandle,False,None,UseCpi" +
                                "d,[\"PidTagAccess\",\"PidTagBody\",\"PidTagCreationTime\"],out _)\'");
                        temp112 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.UseCpid, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagBody",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagCreationTime",
                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})}), out temp111);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S182\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 12]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp111, "copyToHandleIndex of FastTransferSourceCopyTo, state S182");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of FastTransferSourceCopyTo, state S182");
                        this.Manager.Comment("reaching state \'S190\'");
                        int temp113;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp114;
                        this.Manager.Comment("executing step \'call FastTransferDestinationConfigure(2,9,CopyTo,Move,out _)\'");
                        temp114 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationConfigure(2, 9, ((Microsoft.Protocols.TestSuites.Common.SourceOperation)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferDestinationConfigureCopyFlags)(1)), out temp113);
                        this.Manager.Checkpoint("MS-OXCFXICS_R581");
                        this.Manager.Comment("reaching state \'S198\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationConfigure/[out 13]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 13, temp113, "configHandleIndex of FastTransferDestinationConfigure, state S198");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp114, "return of FastTransferDestinationConfigure, state S198");
                        this.Manager.Comment("reaching state \'S206\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp115;
                        this.Manager.Comment("executing step \'call TellVersion(1,12,2)\'");
                        temp115 = this.IMS_OXCFXICSAdapterInstance.TellVersion(1, 12, 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S214\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp115, "return of TellVersion, state S214");
                        this.Manager.Comment("reaching state \'S222\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                        this.Manager.Comment("executing step \'call TellVersion(2,13,1)\'");
                        temp116 = this.IMS_OXCFXICSAdapterInstance.TellVersion(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S230\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of TellVersion, state S230");
                        this.Manager.Comment("reaching state \'S238\'");
                        int temp117;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp118;
                        bool temp119;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp120;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                        temp120 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp117, out temp118, out temp119);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3326");
                        this.Manager.Checkpoint("MS-OXCFXICS_R599");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3453");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3452");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3304");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2276");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S246\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                                "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                                "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                                "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                                "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                                "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                                ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                                "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                                "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                                "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                                "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                                "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                                "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                                "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                                "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                                ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                                "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                                "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                                "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                                "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                                "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                                "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                                "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                                "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                                "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                                "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                                "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                                "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                                "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                                "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                                "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                                "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                                "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                                "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                                "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                                "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                                "gFXDelProp=True,RecipientPrecededByPidTagFXDelProp=True),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=True,StringPropertiesInOtherCodePage=" +
                                "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                                "),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp117, "transferBufferIndex of FastTransferSourceGetBuffer, state S246");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                true,
                                                                true}),
                                                    false,
                                                    true,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp118, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S246");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp119, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S246");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp120, "return of FastTransferSourceGetBuffer, state S246");
                        this.Manager.Comment("reaching state \'S254\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp121;
                        this.Manager.Comment("executing step \'call FastTransferDestinationPutBuffer(2,13,1)\'");
                        temp121 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationPutBuffer(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R614");
                        this.Manager.Comment("reaching state \'S262\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationPutBuffer/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp121, "return of FastTransferDestinationPutBuffer, state S262");
                        this.Manager.Comment("reaching state \'S270\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp122;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp122 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S278\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp122, "return of Release, state S278");
                        this.Manager.Comment("reaching state \'S286\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp123;
                        this.Manager.Comment("executing step \'call Release(2,9)\'");
                        temp123 = this.IMS_OXCFXICSAdapterInstance.Release(2, 9);
                        this.Manager.Comment("reaching state \'S294\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp123, "return of Release, state S294");
                        this.Manager.Comment("reaching state \'S302\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp124;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp124 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S310\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp124, "return of Release, state S310");
                        this.Manager.Comment("reaching state \'S318\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp125;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp125 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S326\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp125, "return of Release, state S326");
                        this.Manager.Comment("reaching state \'S334\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp126;
                        this.Manager.Comment("executing step \'call Release(2,11)\'");
                        temp126 = this.IMS_OXCFXICSAdapterInstance.Release(2, 11);
                        this.Manager.Comment("reaching state \'S342\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp126, "return of Release, state S342");
                        this.Manager.Comment("reaching state \'S350\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp127;
                        this.Manager.Comment("executing step \'call Release(2,13)\'");
                        temp127 = this.IMS_OXCFXICSAdapterInstance.Release(2, 13);
                        this.Manager.Comment("reaching state \'S358\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp127, "return of Release, state S358");
                        this.Manager.Comment("reaching state \'S366\'");
                        goto label3;
                    }
                    if ((temp145 == 1)) {
                        this.Manager.Comment("reaching state \'S175\'");
                        int temp128;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp129;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,8,MessageHandle,False,None,UseCpi" +
                                "d,[\"PidTagAccess\",\"PidTagBody\",\"PidTagCreationTime\"],out _)\'");
                        temp129 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.UseCpid, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagBody",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagCreationTime",
                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})}), out temp128);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S183\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 12]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp128, "copyToHandleIndex of FastTransferSourceCopyTo, state S183");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp129, "return of FastTransferSourceCopyTo, state S183");
                        this.Manager.Comment("reaching state \'S191\'");
                        int temp130;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp131;
                        this.Manager.Comment("executing step \'call FastTransferDestinationConfigure(2,9,CopyTo,Move,out _)\'");
                        temp131 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationConfigure(2, 9, ((Microsoft.Protocols.TestSuites.Common.SourceOperation)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferDestinationConfigureCopyFlags)(1)), out temp130);
                        this.Manager.Checkpoint("MS-OXCFXICS_R581");
                        this.Manager.Comment("reaching state \'S199\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationConfigure/[out 13]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 13, temp130, "configHandleIndex of FastTransferDestinationConfigure, state S199");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp131, "return of FastTransferDestinationConfigure, state S199");
                        this.Manager.Comment("reaching state \'S207\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp132;
                        this.Manager.Comment("executing step \'call TellVersion(1,12,2)\'");
                        temp132 = this.IMS_OXCFXICSAdapterInstance.TellVersion(1, 12, 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S215\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp132, "return of TellVersion, state S215");
                        this.Manager.Comment("reaching state \'S223\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp133;
                        this.Manager.Comment("executing step \'call TellVersion(2,13,1)\'");
                        temp133 = this.IMS_OXCFXICSAdapterInstance.TellVersion(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S231\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp133, "return of TellVersion, state S231");
                        this.Manager.Comment("reaching state \'S239\'");
                        int temp134;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp135;
                        bool temp136;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp137;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                        temp137 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp134, out temp135, out temp136);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3326");
                        this.Manager.Checkpoint("MS-OXCFXICS_R599");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3453");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3454");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3452");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3304");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2276");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S247\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                                "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                                "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                                "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                                "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                                "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                                ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                                "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                                "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                                "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                                "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                                "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                                "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                                "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                                "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                                ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                                "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                                "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                                "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                                "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                                "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                                "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                                "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                                "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                                "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                                "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                                "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                                "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                                "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                                "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                                "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                                "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                                "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                                "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                                "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                                "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                                "gFXDelProp=True,RecipientPrecededByPidTagFXDelProp=True),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=True,StringPropertiesInOtherCodePage=" +
                                "True,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarnin" +
                                "gOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPe" +
                                "rmissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachmen" +
                                "tPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Strin" +
                                "gPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropert" +
                                "iesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)" +
                                ",out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp134, "transferBufferIndex of FastTransferSourceGetBuffer, state S247");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                true,
                                                                true}),
                                                    false,
                                                    true,
                                                    true,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp135, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S247");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp136, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S247");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp137, "return of FastTransferSourceGetBuffer, state S247");
                        this.Manager.Comment("reaching state \'S255\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp138;
                        this.Manager.Comment("executing step \'call FastTransferDestinationPutBuffer(2,13,1)\'");
                        temp138 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationPutBuffer(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R614");
                        this.Manager.Comment("reaching state \'S263\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationPutBuffer/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp138, "return of FastTransferDestinationPutBuffer, state S263");
                        this.Manager.Comment("reaching state \'S271\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp139;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp139 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S279\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp139, "return of Release, state S279");
                        this.Manager.Comment("reaching state \'S287\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp140;
                        this.Manager.Comment("executing step \'call Release(2,9)\'");
                        temp140 = this.IMS_OXCFXICSAdapterInstance.Release(2, 9);
                        this.Manager.Comment("reaching state \'S295\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp140, "return of Release, state S295");
                        this.Manager.Comment("reaching state \'S303\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp141;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp141 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S311\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp141, "return of Release, state S311");
                        this.Manager.Comment("reaching state \'S319\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp142;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp142 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S327\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp142, "return of Release, state S327");
                        this.Manager.Comment("reaching state \'S335\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp143;
                        this.Manager.Comment("executing step \'call Release(2,11)\'");
                        temp143 = this.IMS_OXCFXICSAdapterInstance.Release(2, 11);
                        this.Manager.Comment("reaching state \'S343\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp143, "return of Release, state S343");
                        this.Manager.Comment("reaching state \'S351\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp144;
                        this.Manager.Comment("executing step \'call Release(2,13)\'");
                        temp144 = this.IMS_OXCFXICSAdapterInstance.Release(2, 13);
                        this.Manager.Comment("reaching state \'S359\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp144, "return of Release, state S359");
                        this.Manager.Comment("reaching state \'S367\'");
                        goto label3;
                    }
                    throw new InvalidOperationException("never reached");
                label3:
;
                    goto label4;
                }
                throw new InvalidOperationException("never reached");
            label4:
;
                goto label5;
            }
            if ((temp147 == 1)) {
                S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS11();
                goto label5;
            }
            throw new InvalidOperationException("never reached");
        label5:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckSecondSUTOnlineChecker(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S17");
        }
        
        private void S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS11() {
            this.Manager.Comment("reaching state \'S11\'");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckSecondSUTOnlineChecker1(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S17");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S169");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S169");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2() {
            this.Manager.BeginTest("MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp148;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp148);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp148);
            this.Manager.Comment("reaching state \'S5\'");
            int temp221 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp221 == 0)) {
                this.Manager.Comment("reaching state \'S12\'");
                bool temp149;
                this.Manager.Comment("executing step \'call CheckSecondSUTOnline(out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckSecondSUTOnline(out temp149);
                this.Manager.AddReturn(CheckSecondSUTOnlineInfo, null, temp149);
                this.Manager.Comment("reaching state \'S18\'");
                int temp220 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckSecondSUTOnlineChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckSecondSUTOnlineChecker1)));
                if ((temp220 == 0)) {
                    S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS13();
                    goto label7;
                }
                if ((temp220 == 1)) {
                    this.Manager.Comment("reaching state \'S22\'");
                    this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                    this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                    this.Manager.Comment("reaching state \'S26\'");
                    this.Manager.Comment("checking step \'return Connect\'");
                    this.Manager.Comment("reaching state \'S30\'");
                    this.Manager.Comment("executing step \'call Connect(2,PrivateMailboxServer)\'");
                    this.IMS_OXCFXICSAdapterInstance.Connect(2, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                    this.Manager.Comment("reaching state \'S34\'");
                    this.Manager.Comment("checking step \'return Connect\'");
                    this.Manager.Comment("reaching state \'S38\'");
                    int temp150;
                    int temp151;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp152;
                    this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                    temp152 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp150, out temp151);
                    this.Manager.Comment("reaching state \'S42\'");
                    this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp150, "logonHandleIndex of Logon, state S42");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp151, "inboxFolderIdIndex of Logon, state S42");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp152, "return of Logon, state S42");
                    this.Manager.Comment("reaching state \'S46\'");
                    int temp153;
                    int temp154;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp155;
                    this.Manager.Comment("executing step \'call Logon(2,Private,out _,out _)\'");
                    temp155 = this.IMS_OXCFXICSAdapterInstance.Logon(2, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp153, out temp154);
                    this.Manager.Comment("reaching state \'S50\'");
                    this.Manager.Comment("checking step \'return Logon/[out 2,out 2]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp153, "logonHandleIndex of Logon, state S50");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp154, "inboxFolderIdIndex of Logon, state S50");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp155, "return of Logon, state S50");
                    this.Manager.Comment("reaching state \'S54\'");
                    int temp156;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp157;
                    this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                    temp157 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp156);
                    this.Manager.Comment("reaching state \'S58\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp156, "folderHandleIndex of OpenFolder, state S58");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp157, "return of OpenFolder, state S58");
                    this.Manager.Comment("reaching state \'S62\'");
                    int temp158;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp159;
                    this.Manager.Comment("executing step \'call OpenFolder(2,2,2,out _)\'");
                    temp159 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(2, 2, 2, out temp158);
                    this.Manager.Comment("reaching state \'S66\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp158, "folderHandleIndex of OpenFolder, state S66");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp159, "return of OpenFolder, state S66");
                    this.Manager.Comment("reaching state \'S70\'");
                    int temp160;
                    int temp161;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp162;
                    this.Manager.Comment("executing step \'call CreateFolder(1,3,\"TestFolderInServerA\",out _,out _)\'");
                    temp162 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "TestFolderInServerA", out temp160, out temp161);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S74\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 5]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp160, "folderIdIndex of CreateFolder, state S74");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp161, "folderHandleIndex of CreateFolder, state S74");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp162, "return of CreateFolder, state S74");
                    this.Manager.Comment("reaching state \'S78\'");
                    int temp163;
                    int temp164;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp165;
                    this.Manager.Comment("executing step \'call CreateFolder(1,5,\"SubFolderServerA\",out _,out _)\'");
                    temp165 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 5, "SubFolderServerA", out temp163, out temp164);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S82\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 4,out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp163, "folderIdIndex of CreateFolder, state S82");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp164, "folderHandleIndex of CreateFolder, state S82");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp165, "return of CreateFolder, state S82");
                    this.Manager.Comment("reaching state \'S86\'");
                    int temp166;
                    int temp167;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp168;
                    this.Manager.Comment("executing step \'call CreateFolder(2,4,\"TestFolderInServerB\",out _,out _)\'");
                    temp168 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(2, 4, "TestFolderInServerB", out temp166, out temp167);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S90\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 5,out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp166, "folderIdIndex of CreateFolder, state S90");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp167, "folderHandleIndex of CreateFolder, state S90");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp168, "return of CreateFolder, state S90");
                    this.Manager.Comment("reaching state \'S94\'");
                    int temp169;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp170;
                    this.Manager.Comment("executing step \'call CreateMessage(1,5,3,False,out _)\'");
                    temp170 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 5, 3, false, out temp169);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                    this.Manager.Comment("reaching state \'S98\'");
                    this.Manager.Comment("checking step \'return CreateMessage/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp169, "messageHandleIndex of CreateMessage, state S98");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp170, "return of CreateMessage, state S98");
                    this.Manager.Comment("reaching state \'S102\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp171;
                    this.Manager.Comment("executing step \'call SetProperties(1,8,[\"PidTagBody\"])\'");
                    temp171 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 8, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagBody",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S106\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp171, "return of SetProperties, state S106");
                    this.Manager.Comment("reaching state \'S110\'");
                    int temp172;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp173;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,8,out _)\'");
                    temp173 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 8, out temp172);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S114\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp172, "messageIdIndex of SaveChangesMessage, state S114");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp173, "return of SaveChangesMessage, state S114");
                    this.Manager.Comment("reaching state \'S118\'");
                    int temp174;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp175;
                    this.Manager.Comment("executing step \'call CreateMessage(2,7,5,False,out _)\'");
                    temp175 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(2, 7, 5, false, out temp174);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                    this.Manager.Comment("reaching state \'S122\'");
                    this.Manager.Comment("checking step \'return CreateMessage/[out 9]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp174, "messageHandleIndex of CreateMessage, state S122");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp175, "return of CreateMessage, state S122");
                    this.Manager.Comment("reaching state \'S126\'");
                    int temp176;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp177;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(2,9,out _)\'");
                    temp177 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(2, 9, out temp176);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S130\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp176, "messageIdIndex of SaveChangesMessage, state S130");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp177, "return of SaveChangesMessage, state S130");
                    this.Manager.Comment("reaching state \'S134\'");
                    int temp178;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp179;
                    this.Manager.Comment("executing step \'call CreateAttachment(1,8,out _)\'");
                    temp179 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 8, out temp178);
                    this.Manager.Comment("reaching state \'S138\'");
                    this.Manager.Comment("checking step \'return CreateAttachment/[out 10]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp178, "attachmentHandleIndex of CreateAttachment, state S138");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp179, "return of CreateAttachment, state S138");
                    this.Manager.Comment("reaching state \'S142\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp180;
                    this.Manager.Comment("executing step \'call SaveChangesAttachment(1,10)\'");
                    temp180 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 10);
                    this.Manager.Comment("reaching state \'S146\'");
                    this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp180, "return of SaveChangesAttachment, state S146");
                    this.Manager.Comment("reaching state \'S150\'");
                    int temp181;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp182;
                    this.Manager.Comment("executing step \'call CreateAttachment(2,9,out _)\'");
                    temp182 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(2, 9, out temp181);
                    this.Manager.Comment("reaching state \'S154\'");
                    this.Manager.Comment("checking step \'return CreateAttachment/[out 11]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp181, "attachmentHandleIndex of CreateAttachment, state S154");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp182, "return of CreateAttachment, state S154");
                    this.Manager.Comment("reaching state \'S158\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp183;
                    this.Manager.Comment("executing step \'call SaveChangesAttachment(2,11)\'");
                    temp183 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(2, 11);
                    this.Manager.Comment("reaching state \'S162\'");
                    this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp183, "return of SaveChangesAttachment, state S162");
                    this.Manager.Comment("reaching state \'S166\'");
                    bool temp184;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3454,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3454, out temp184);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp184);
                    this.Manager.Comment("reaching state \'S170\'");
                    int temp219 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckRequirementEnabledChecker1)));
                    if ((temp219 == 0)) {
                        this.Manager.Comment("reaching state \'S176\'");
                        int temp185;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp186;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,8,MessageHandle,False,None,ForUpl" +
                                "oad,[\"PidTagAccess\",\"PidTagBody\",\"PidTagCreationTime\"],out _)\'");
                        temp186 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.ForUpload, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagBody",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagCreationTime",
                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})}), out temp185);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S184\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 12]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp185, "copyToHandleIndex of FastTransferSourceCopyTo, state S184");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp186, "return of FastTransferSourceCopyTo, state S184");
                        this.Manager.Comment("reaching state \'S192\'");
                        int temp187;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp188;
                        this.Manager.Comment("executing step \'call FastTransferDestinationConfigure(2,9,CopyTo,Move,out _)\'");
                        temp188 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationConfigure(2, 9, ((Microsoft.Protocols.TestSuites.Common.SourceOperation)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferDestinationConfigureCopyFlags)(1)), out temp187);
                        this.Manager.Checkpoint("MS-OXCFXICS_R581");
                        this.Manager.Comment("reaching state \'S200\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationConfigure/[out 13]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 13, temp187, "configHandleIndex of FastTransferDestinationConfigure, state S200");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp188, "return of FastTransferDestinationConfigure, state S200");
                        this.Manager.Comment("reaching state \'S208\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp189;
                        this.Manager.Comment("executing step \'call TellVersion(1,12,2)\'");
                        temp189 = this.IMS_OXCFXICSAdapterInstance.TellVersion(1, 12, 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S216\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp189, "return of TellVersion, state S216");
                        this.Manager.Comment("reaching state \'S224\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp190;
                        this.Manager.Comment("executing step \'call TellVersion(2,13,1)\'");
                        temp190 = this.IMS_OXCFXICSAdapterInstance.TellVersion(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S232\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp190, "return of TellVersion, state S232");
                        this.Manager.Comment("reaching state \'S240\'");
                        int temp191;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp192;
                        bool temp193;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp194;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                        temp194 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp191, out temp192, out temp193);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3326");
                        this.Manager.Checkpoint("MS-OXCFXICS_R599");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3457");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3456");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3304");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2276");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S248\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                                "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                                "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                                "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                                "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                                "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                                ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                                "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                                "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                                "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                                "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                                "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                                "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                                "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                                "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                                ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                                "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                                "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                                "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                                "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                                "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                                "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                                "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                                "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                                "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                                "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                                "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                                "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                                "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                                "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                                "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                                "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                                "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                                "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                                "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                                "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                                "gFXDelProp=True,RecipientPrecededByPidTagFXDelProp=True),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=True,StringPropertiesInOtherCodePage=" +
                                "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                                "),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp191, "transferBufferIndex of FastTransferSourceGetBuffer, state S248");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                true,
                                                                true}),
                                                    false,
                                                    true,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp192, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S248");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp193, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S248");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp194, "return of FastTransferSourceGetBuffer, state S248");
                        this.Manager.Comment("reaching state \'S256\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp195;
                        this.Manager.Comment("executing step \'call FastTransferDestinationPutBuffer(2,13,1)\'");
                        temp195 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationPutBuffer(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R614");
                        this.Manager.Comment("reaching state \'S264\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationPutBuffer/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp195, "return of FastTransferDestinationPutBuffer, state S264");
                        this.Manager.Comment("reaching state \'S272\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp196;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp196 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S280\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp196, "return of Release, state S280");
                        this.Manager.Comment("reaching state \'S288\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp197;
                        this.Manager.Comment("executing step \'call Release(2,9)\'");
                        temp197 = this.IMS_OXCFXICSAdapterInstance.Release(2, 9);
                        this.Manager.Comment("reaching state \'S296\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp197, "return of Release, state S296");
                        this.Manager.Comment("reaching state \'S304\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp198;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp198 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S312\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp198, "return of Release, state S312");
                        this.Manager.Comment("reaching state \'S320\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp199;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp199 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S328\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp199, "return of Release, state S328");
                        this.Manager.Comment("reaching state \'S336\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp200;
                        this.Manager.Comment("executing step \'call Release(2,11)\'");
                        temp200 = this.IMS_OXCFXICSAdapterInstance.Release(2, 11);
                        this.Manager.Comment("reaching state \'S344\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp200, "return of Release, state S344");
                        this.Manager.Comment("reaching state \'S352\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp201;
                        this.Manager.Comment("executing step \'call Release(2,13)\'");
                        temp201 = this.IMS_OXCFXICSAdapterInstance.Release(2, 13);
                        this.Manager.Comment("reaching state \'S360\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp201, "return of Release, state S360");
                        this.Manager.Comment("reaching state \'S368\'");
                        goto label6;
                    }
                    if ((temp219 == 1)) {
                        this.Manager.Comment("reaching state \'S177\'");
                        int temp202;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp203;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,8,MessageHandle,False,None,ForUpl" +
                                "oad,[\"PidTagAccess\",\"PidTagBody\",\"PidTagCreationTime\"],out _)\'");
                        temp203 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.ForUpload, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagBody",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagCreationTime",
                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})}), out temp202);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S185\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 12]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp202, "copyToHandleIndex of FastTransferSourceCopyTo, state S185");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp203, "return of FastTransferSourceCopyTo, state S185");
                        this.Manager.Comment("reaching state \'S193\'");
                        int temp204;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp205;
                        this.Manager.Comment("executing step \'call FastTransferDestinationConfigure(2,9,CopyTo,Move,out _)\'");
                        temp205 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationConfigure(2, 9, ((Microsoft.Protocols.TestSuites.Common.SourceOperation)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferDestinationConfigureCopyFlags)(1)), out temp204);
                        this.Manager.Checkpoint("MS-OXCFXICS_R581");
                        this.Manager.Comment("reaching state \'S201\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationConfigure/[out 13]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 13, temp204, "configHandleIndex of FastTransferDestinationConfigure, state S201");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp205, "return of FastTransferDestinationConfigure, state S201");
                        this.Manager.Comment("reaching state \'S209\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp206;
                        this.Manager.Comment("executing step \'call TellVersion(1,12,2)\'");
                        temp206 = this.IMS_OXCFXICSAdapterInstance.TellVersion(1, 12, 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S217\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp206, "return of TellVersion, state S217");
                        this.Manager.Comment("reaching state \'S225\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp207;
                        this.Manager.Comment("executing step \'call TellVersion(2,13,1)\'");
                        temp207 = this.IMS_OXCFXICSAdapterInstance.TellVersion(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S233\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp207, "return of TellVersion, state S233");
                        this.Manager.Comment("reaching state \'S241\'");
                        int temp208;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp209;
                        bool temp210;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp211;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                        temp211 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp208, out temp209, out temp210);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3326");
                        this.Manager.Checkpoint("MS-OXCFXICS_R599");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3457");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3780");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3456");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3304");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2276");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S249\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                                "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                                "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                                "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                                "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                                "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                                ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                                "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                                "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                                "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                                "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                                "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                                "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                                "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                                "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                                ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                                "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                                "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                                "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                                "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                                "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                                "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                                "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                                "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                                "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                                "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                                "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                                "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                                "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                                "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                                "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                                "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                                "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                                "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                                "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                                "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                                "gFXDelProp=True,RecipientPrecededByPidTagFXDelProp=True),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=True,StringPropertiesInOtherCodePage=" +
                                "True,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarnin" +
                                "gOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPe" +
                                "rmissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachmen" +
                                "tPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Strin" +
                                "gPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropert" +
                                "iesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)" +
                                ",out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp208, "transferBufferIndex of FastTransferSourceGetBuffer, state S249");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                true,
                                                                true}),
                                                    false,
                                                    true,
                                                    true,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp209, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S249");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp210, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S249");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp211, "return of FastTransferSourceGetBuffer, state S249");
                        this.Manager.Comment("reaching state \'S257\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp212;
                        this.Manager.Comment("executing step \'call FastTransferDestinationPutBuffer(2,13,1)\'");
                        temp212 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationPutBuffer(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R614");
                        this.Manager.Comment("reaching state \'S265\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationPutBuffer/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp212, "return of FastTransferDestinationPutBuffer, state S265");
                        this.Manager.Comment("reaching state \'S273\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp213;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp213 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S281\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp213, "return of Release, state S281");
                        this.Manager.Comment("reaching state \'S289\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp214;
                        this.Manager.Comment("executing step \'call Release(2,9)\'");
                        temp214 = this.IMS_OXCFXICSAdapterInstance.Release(2, 9);
                        this.Manager.Comment("reaching state \'S297\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp214, "return of Release, state S297");
                        this.Manager.Comment("reaching state \'S305\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp215;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp215 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S313\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp215, "return of Release, state S313");
                        this.Manager.Comment("reaching state \'S321\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp216;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp216 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S329\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp216, "return of Release, state S329");
                        this.Manager.Comment("reaching state \'S337\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp217;
                        this.Manager.Comment("executing step \'call Release(2,11)\'");
                        temp217 = this.IMS_OXCFXICSAdapterInstance.Release(2, 11);
                        this.Manager.Comment("reaching state \'S345\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp217, "return of Release, state S345");
                        this.Manager.Comment("reaching state \'S353\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp218;
                        this.Manager.Comment("executing step \'call Release(2,13)\'");
                        temp218 = this.IMS_OXCFXICSAdapterInstance.Release(2, 13);
                        this.Manager.Comment("reaching state \'S361\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp218, "return of Release, state S361");
                        this.Manager.Comment("reaching state \'S369\'");
                        goto label6;
                    }
                    throw new InvalidOperationException("never reached");
                label6:
;
                    goto label7;
                }
                throw new InvalidOperationException("never reached");
            label7:
;
                goto label8;
            }
            if ((temp221 == 1)) {
                S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS13();
                goto label8;
            }
            throw new InvalidOperationException("never reached");
        label8:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckSecondSUTOnlineChecker(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S18");
        }
        
        private void S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS13() {
            this.Manager.Comment("reaching state \'S13\'");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckSecondSUTOnlineChecker1(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S18");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S170");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S170");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3() {
            this.Manager.BeginTest("MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp222;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp222);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp222);
            this.Manager.Comment("reaching state \'S7\'");
            int temp295 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp295 == 0)) {
                this.Manager.Comment("reaching state \'S14\'");
                bool temp223;
                this.Manager.Comment("executing step \'call CheckSecondSUTOnline(out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckSecondSUTOnline(out temp223);
                this.Manager.AddReturn(CheckSecondSUTOnlineInfo, null, temp223);
                this.Manager.Comment("reaching state \'S19\'");
                int temp294 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckSecondSUTOnlineChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckSecondSUTOnlineChecker1)));
                if ((temp294 == 0)) {
                    S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS15();
                    goto label10;
                }
                if ((temp294 == 1)) {
                    this.Manager.Comment("reaching state \'S23\'");
                    this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                    this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                    this.Manager.Comment("reaching state \'S27\'");
                    this.Manager.Comment("checking step \'return Connect\'");
                    this.Manager.Comment("reaching state \'S31\'");
                    this.Manager.Comment("executing step \'call Connect(2,PrivateMailboxServer)\'");
                    this.IMS_OXCFXICSAdapterInstance.Connect(2, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                    this.Manager.Comment("reaching state \'S35\'");
                    this.Manager.Comment("checking step \'return Connect\'");
                    this.Manager.Comment("reaching state \'S39\'");
                    int temp224;
                    int temp225;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp226;
                    this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                    temp226 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp224, out temp225);
                    this.Manager.Comment("reaching state \'S43\'");
                    this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp224, "logonHandleIndex of Logon, state S43");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp225, "inboxFolderIdIndex of Logon, state S43");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp226, "return of Logon, state S43");
                    this.Manager.Comment("reaching state \'S47\'");
                    int temp227;
                    int temp228;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp229;
                    this.Manager.Comment("executing step \'call Logon(2,Private,out _,out _)\'");
                    temp229 = this.IMS_OXCFXICSAdapterInstance.Logon(2, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp227, out temp228);
                    this.Manager.Comment("reaching state \'S51\'");
                    this.Manager.Comment("checking step \'return Logon/[out 2,out 2]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp227, "logonHandleIndex of Logon, state S51");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp228, "inboxFolderIdIndex of Logon, state S51");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp229, "return of Logon, state S51");
                    this.Manager.Comment("reaching state \'S55\'");
                    int temp230;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp231;
                    this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                    temp231 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp230);
                    this.Manager.Comment("reaching state \'S59\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp230, "folderHandleIndex of OpenFolder, state S59");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp231, "return of OpenFolder, state S59");
                    this.Manager.Comment("reaching state \'S63\'");
                    int temp232;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp233;
                    this.Manager.Comment("executing step \'call OpenFolder(2,2,2,out _)\'");
                    temp233 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(2, 2, 2, out temp232);
                    this.Manager.Comment("reaching state \'S67\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp232, "folderHandleIndex of OpenFolder, state S67");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp233, "return of OpenFolder, state S67");
                    this.Manager.Comment("reaching state \'S71\'");
                    int temp234;
                    int temp235;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp236;
                    this.Manager.Comment("executing step \'call CreateFolder(1,3,\"TestFolderInServerA\",out _,out _)\'");
                    temp236 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "TestFolderInServerA", out temp234, out temp235);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S75\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 5]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp234, "folderIdIndex of CreateFolder, state S75");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp235, "folderHandleIndex of CreateFolder, state S75");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp236, "return of CreateFolder, state S75");
                    this.Manager.Comment("reaching state \'S79\'");
                    int temp237;
                    int temp238;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp239;
                    this.Manager.Comment("executing step \'call CreateFolder(1,5,\"SubFolderServerA\",out _,out _)\'");
                    temp239 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 5, "SubFolderServerA", out temp237, out temp238);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S83\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 4,out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp237, "folderIdIndex of CreateFolder, state S83");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp238, "folderHandleIndex of CreateFolder, state S83");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp239, "return of CreateFolder, state S83");
                    this.Manager.Comment("reaching state \'S87\'");
                    int temp240;
                    int temp241;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp242;
                    this.Manager.Comment("executing step \'call CreateFolder(2,4,\"TestFolderInServerB\",out _,out _)\'");
                    temp242 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(2, 4, "TestFolderInServerB", out temp240, out temp241);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S91\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 5,out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp240, "folderIdIndex of CreateFolder, state S91");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp241, "folderHandleIndex of CreateFolder, state S91");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp242, "return of CreateFolder, state S91");
                    this.Manager.Comment("reaching state \'S95\'");
                    int temp243;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp244;
                    this.Manager.Comment("executing step \'call CreateMessage(1,5,3,False,out _)\'");
                    temp244 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 5, 3, false, out temp243);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                    this.Manager.Comment("reaching state \'S99\'");
                    this.Manager.Comment("checking step \'return CreateMessage/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp243, "messageHandleIndex of CreateMessage, state S99");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp244, "return of CreateMessage, state S99");
                    this.Manager.Comment("reaching state \'S103\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp245;
                    this.Manager.Comment("executing step \'call SetProperties(1,8,[\"PidTagBody\"])\'");
                    temp245 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 8, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagBody",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S107\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp245, "return of SetProperties, state S107");
                    this.Manager.Comment("reaching state \'S111\'");
                    int temp246;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp247;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,8,out _)\'");
                    temp247 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 8, out temp246);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S115\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp246, "messageIdIndex of SaveChangesMessage, state S115");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp247, "return of SaveChangesMessage, state S115");
                    this.Manager.Comment("reaching state \'S119\'");
                    int temp248;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp249;
                    this.Manager.Comment("executing step \'call CreateMessage(2,7,5,False,out _)\'");
                    temp249 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(2, 7, 5, false, out temp248);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                    this.Manager.Comment("reaching state \'S123\'");
                    this.Manager.Comment("checking step \'return CreateMessage/[out 9]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp248, "messageHandleIndex of CreateMessage, state S123");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp249, "return of CreateMessage, state S123");
                    this.Manager.Comment("reaching state \'S127\'");
                    int temp250;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp251;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(2,9,out _)\'");
                    temp251 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(2, 9, out temp250);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S131\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp250, "messageIdIndex of SaveChangesMessage, state S131");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp251, "return of SaveChangesMessage, state S131");
                    this.Manager.Comment("reaching state \'S135\'");
                    int temp252;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp253;
                    this.Manager.Comment("executing step \'call CreateAttachment(1,8,out _)\'");
                    temp253 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 8, out temp252);
                    this.Manager.Comment("reaching state \'S139\'");
                    this.Manager.Comment("checking step \'return CreateAttachment/[out 10]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp252, "attachmentHandleIndex of CreateAttachment, state S139");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp253, "return of CreateAttachment, state S139");
                    this.Manager.Comment("reaching state \'S143\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp254;
                    this.Manager.Comment("executing step \'call SaveChangesAttachment(1,10)\'");
                    temp254 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 10);
                    this.Manager.Comment("reaching state \'S147\'");
                    this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp254, "return of SaveChangesAttachment, state S147");
                    this.Manager.Comment("reaching state \'S151\'");
                    int temp255;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp256;
                    this.Manager.Comment("executing step \'call CreateAttachment(2,9,out _)\'");
                    temp256 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(2, 9, out temp255);
                    this.Manager.Comment("reaching state \'S155\'");
                    this.Manager.Comment("checking step \'return CreateAttachment/[out 11]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp255, "attachmentHandleIndex of CreateAttachment, state S155");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp256, "return of CreateAttachment, state S155");
                    this.Manager.Comment("reaching state \'S159\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp257;
                    this.Manager.Comment("executing step \'call SaveChangesAttachment(2,11)\'");
                    temp257 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(2, 11);
                    this.Manager.Comment("reaching state \'S163\'");
                    this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp257, "return of SaveChangesAttachment, state S163");
                    this.Manager.Comment("reaching state \'S167\'");
                    bool temp258;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3454,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3454, out temp258);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp258);
                    this.Manager.Comment("reaching state \'S171\'");
                    int temp293 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckRequirementEnabledChecker)), new ExpectedReturn(S04_SyncFastTransferServerClientServerUsecpid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckRequirementEnabledChecker1)));
                    if ((temp293 == 0)) {
                        this.Manager.Comment("reaching state \'S178\'");
                        int temp259;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp260;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,8,MessageHandle,False,None,ForUpl" +
                                "oad|ForceUnicode,[\"PidTagAccess\",\"PidTagBody\",\"PidTagCreationTime\"],out _)\'");
                        temp260 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(11)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagBody",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagCreationTime",
                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})}), out temp259);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S186\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 12]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp259, "copyToHandleIndex of FastTransferSourceCopyTo, state S186");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp260, "return of FastTransferSourceCopyTo, state S186");
                        this.Manager.Comment("reaching state \'S194\'");
                        int temp261;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp262;
                        this.Manager.Comment("executing step \'call FastTransferDestinationConfigure(2,9,CopyTo,Move,out _)\'");
                        temp262 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationConfigure(2, 9, ((Microsoft.Protocols.TestSuites.Common.SourceOperation)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferDestinationConfigureCopyFlags)(1)), out temp261);
                        this.Manager.Checkpoint("MS-OXCFXICS_R581");
                        this.Manager.Comment("reaching state \'S202\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationConfigure/[out 13]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 13, temp261, "configHandleIndex of FastTransferDestinationConfigure, state S202");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp262, "return of FastTransferDestinationConfigure, state S202");
                        this.Manager.Comment("reaching state \'S210\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp263;
                        this.Manager.Comment("executing step \'call TellVersion(1,12,2)\'");
                        temp263 = this.IMS_OXCFXICSAdapterInstance.TellVersion(1, 12, 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S218\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp263, "return of TellVersion, state S218");
                        this.Manager.Comment("reaching state \'S226\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp264;
                        this.Manager.Comment("executing step \'call TellVersion(2,13,1)\'");
                        temp264 = this.IMS_OXCFXICSAdapterInstance.TellVersion(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S234\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp264, "return of TellVersion, state S234");
                        this.Manager.Comment("reaching state \'S242\'");
                        int temp265;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp266;
                        bool temp267;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp268;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                        temp268 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp265, out temp266, out temp267);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3326");
                        this.Manager.Checkpoint("MS-OXCFXICS_R599");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3459");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3304");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2276");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S250\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                                "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                                "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                                "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                                "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                                "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                                ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                                "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                                "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                                "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                                "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                                "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                                "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                                "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                                "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                                ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                                "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                                "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                                "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                                "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                                "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                                "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                                "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                                "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                                "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                                "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                                "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                                "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                                "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                                "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                                "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                                "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                                "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                                "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                                "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                                "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                                "gFXDelProp=True,RecipientPrecededByPidTagFXDelProp=True),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=True,StringPropertiesInOtherCodePage=" +
                                "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                                "),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp265, "transferBufferIndex of FastTransferSourceGetBuffer, state S250");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                true,
                                                                true}),
                                                    false,
                                                    true,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp266, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S250");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp267, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S250");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp268, "return of FastTransferSourceGetBuffer, state S250");
                        this.Manager.Comment("reaching state \'S258\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp269;
                        this.Manager.Comment("executing step \'call FastTransferDestinationPutBuffer(2,13,1)\'");
                        temp269 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationPutBuffer(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R614");
                        this.Manager.Comment("reaching state \'S266\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationPutBuffer/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp269, "return of FastTransferDestinationPutBuffer, state S266");
                        this.Manager.Comment("reaching state \'S274\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp270;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp270 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S282\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp270, "return of Release, state S282");
                        this.Manager.Comment("reaching state \'S290\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp271;
                        this.Manager.Comment("executing step \'call Release(2,9)\'");
                        temp271 = this.IMS_OXCFXICSAdapterInstance.Release(2, 9);
                        this.Manager.Comment("reaching state \'S298\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp271, "return of Release, state S298");
                        this.Manager.Comment("reaching state \'S306\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp272;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp272 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S314\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp272, "return of Release, state S314");
                        this.Manager.Comment("reaching state \'S322\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp273;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp273 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S330\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp273, "return of Release, state S330");
                        this.Manager.Comment("reaching state \'S338\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp274;
                        this.Manager.Comment("executing step \'call Release(2,11)\'");
                        temp274 = this.IMS_OXCFXICSAdapterInstance.Release(2, 11);
                        this.Manager.Comment("reaching state \'S346\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp274, "return of Release, state S346");
                        this.Manager.Comment("reaching state \'S354\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp275;
                        this.Manager.Comment("executing step \'call Release(2,13)\'");
                        temp275 = this.IMS_OXCFXICSAdapterInstance.Release(2, 13);
                        this.Manager.Comment("reaching state \'S362\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp275, "return of Release, state S362");
                        this.Manager.Comment("reaching state \'S370\'");
                        goto label9;
                    }
                    if ((temp293 == 1)) {
                        this.Manager.Comment("reaching state \'S179\'");
                        int temp276;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp277;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,8,MessageHandle,False,None,ForUpl" +
                                "oad|ForceUnicode,[\"PidTagAccess\",\"PidTagBody\",\"PidTagCreationTime\"],out _)\'");
                        temp277 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(11)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagBody",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagCreationTime",
                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})}), out temp276);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S187\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 12]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp276, "copyToHandleIndex of FastTransferSourceCopyTo, state S187");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp277, "return of FastTransferSourceCopyTo, state S187");
                        this.Manager.Comment("reaching state \'S195\'");
                        int temp278;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp279;
                        this.Manager.Comment("executing step \'call FastTransferDestinationConfigure(2,9,CopyTo,Move,out _)\'");
                        temp279 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationConfigure(2, 9, ((Microsoft.Protocols.TestSuites.Common.SourceOperation)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferDestinationConfigureCopyFlags)(1)), out temp278);
                        this.Manager.Checkpoint("MS-OXCFXICS_R581");
                        this.Manager.Comment("reaching state \'S203\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationConfigure/[out 13]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 13, temp278, "configHandleIndex of FastTransferDestinationConfigure, state S203");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp279, "return of FastTransferDestinationConfigure, state S203");
                        this.Manager.Comment("reaching state \'S211\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp280;
                        this.Manager.Comment("executing step \'call TellVersion(1,12,2)\'");
                        temp280 = this.IMS_OXCFXICSAdapterInstance.TellVersion(1, 12, 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S219\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp280, "return of TellVersion, state S219");
                        this.Manager.Comment("reaching state \'S227\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp281;
                        this.Manager.Comment("executing step \'call TellVersion(2,13,1)\'");
                        temp281 = this.IMS_OXCFXICSAdapterInstance.TellVersion(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R572");
                        this.Manager.Comment("reaching state \'S235\'");
                        this.Manager.Comment("checking step \'return TellVersion/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp281, "return of TellVersion, state S235");
                        this.Manager.Comment("reaching state \'S243\'");
                        int temp282;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp283;
                        bool temp284;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp285;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                        temp285 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp282, out temp283, out temp284);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3326");
                        this.Manager.Checkpoint("MS-OXCFXICS_R599");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3459");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3304");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2276");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S251\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                                "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                                "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                                "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                                "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                                "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                                ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                                "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                                "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                                "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                                "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                                "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                                "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                                "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                                "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                                ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                                "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                                "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                                "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                                "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                                "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                                "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                                "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                                "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                                "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                                "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                                "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                                "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                                "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                                "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                                "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                                "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                                "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                                "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                                "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                                "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                                "gFXDelProp=True,RecipientPrecededByPidTagFXDelProp=True),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=True,StringPropertiesInOtherCodePage=" +
                                "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                                "),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp282, "transferBufferIndex of FastTransferSourceGetBuffer, state S251");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                true,
                                                                true}),
                                                    false,
                                                    true,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp283, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S251");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp284, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S251");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp285, "return of FastTransferSourceGetBuffer, state S251");
                        this.Manager.Comment("reaching state \'S259\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp286;
                        this.Manager.Comment("executing step \'call FastTransferDestinationPutBuffer(2,13,1)\'");
                        temp286 = this.IMS_OXCFXICSAdapterInstance.FastTransferDestinationPutBuffer(2, 13, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R614");
                        this.Manager.Comment("reaching state \'S267\'");
                        this.Manager.Comment("checking step \'return FastTransferDestinationPutBuffer/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp286, "return of FastTransferDestinationPutBuffer, state S267");
                        this.Manager.Comment("reaching state \'S275\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp287;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp287 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S283\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp287, "return of Release, state S283");
                        this.Manager.Comment("reaching state \'S291\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp288;
                        this.Manager.Comment("executing step \'call Release(2,9)\'");
                        temp288 = this.IMS_OXCFXICSAdapterInstance.Release(2, 9);
                        this.Manager.Comment("reaching state \'S299\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp288, "return of Release, state S299");
                        this.Manager.Comment("reaching state \'S307\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp289;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp289 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S315\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp289, "return of Release, state S315");
                        this.Manager.Comment("reaching state \'S323\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp290;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp290 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S331\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp290, "return of Release, state S331");
                        this.Manager.Comment("reaching state \'S339\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp291;
                        this.Manager.Comment("executing step \'call Release(2,11)\'");
                        temp291 = this.IMS_OXCFXICSAdapterInstance.Release(2, 11);
                        this.Manager.Comment("reaching state \'S347\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp291, "return of Release, state S347");
                        this.Manager.Comment("reaching state \'S355\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp292;
                        this.Manager.Comment("executing step \'call Release(2,13)\'");
                        temp292 = this.IMS_OXCFXICSAdapterInstance.Release(2, 13);
                        this.Manager.Comment("reaching state \'S363\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp292, "return of Release, state S363");
                        this.Manager.Comment("reaching state \'S371\'");
                        goto label9;
                    }
                    throw new InvalidOperationException("never reached");
                label9:
;
                    goto label10;
                }
                throw new InvalidOperationException("never reached");
            label10:
;
                goto label11;
            }
            if ((temp295 == 1)) {
                S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS15();
                goto label11;
            }
            throw new InvalidOperationException("never reached");
        label11:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckSecondSUTOnlineChecker(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S19");
        }
        
        private void S04_SyncFastTransferServerClientServerUsecpid_TestSuiteS15() {
            this.Manager.Comment("reaching state \'S15\'");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckSecondSUTOnlineChecker1(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S19");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S171");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S171");
        }
        
        private void MSOXCFXICS_S04_SyncFastTransferServerClientServerUsecpid_TestSuite3CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        #endregion
    }
}