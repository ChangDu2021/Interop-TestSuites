//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S06_SyncICSReadStatus_TestSuite : PtfTestClassBase {
        
        public S06_SyncICSReadStatus_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSReadStatus_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSReadStatus_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp61 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSReadStatus_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSReadStatus_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp61 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                bool temp1;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118002,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118002, out temp1);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1);
                this.Manager.Comment("reaching state \'S4\'");
                int temp60 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSReadStatus_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSReadStatus_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker3)));
                if ((temp60 == 0)) {
                    this.Manager.Comment("reaching state \'S5\'");
                    this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                    this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                    this.Manager.Comment("reaching state \'S7\'");
                    this.Manager.Comment("checking step \'return Connect\'");
                    this.Manager.Comment("reaching state \'S9\'");
                    int temp2;
                    int temp3;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp4;
                    this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                    temp4 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2, out temp3);
                    this.Manager.Comment("reaching state \'S11\'");
                    this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "logonHandleIndex of Logon, state S11");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp3, "inboxFolderIdIndex of Logon, state S11");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp4, "return of Logon, state S11");
                    this.Manager.Comment("reaching state \'S13\'");
                    int temp5;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp6;
                    this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                    temp6 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp5);
                    this.Manager.Comment("reaching state \'S15\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp5, "folderHandleIndex of OpenFolder, state S15");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp6, "return of OpenFolder, state S15");
                    this.Manager.Comment("reaching state \'S17\'");
                    int temp7;
                    int temp8;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                    this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                    temp9 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp7, out temp8);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S19\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp7, "folderIdIndex of CreateFolder, state S19");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp8, "folderHandleIndex of CreateFolder, state S19");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of CreateFolder, state S19");
                    this.Manager.Comment("reaching state \'S21\'");
                    int temp10;
                    int temp11;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp12;
                    this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                    temp12 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp10, out temp11);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S23\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp10, "folderIdIndex of CreateFolder, state S23");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp11, "folderHandleIndex of CreateFolder, state S23");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp12, "return of CreateFolder, state S23");
                    this.Manager.Comment("reaching state \'S25\'");
                    int temp13;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp14;
                    this.Manager.Comment("executing step \'call CreateMessage(1,4,3,True,out _)\'");
                    temp14 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 4, 3, true, out temp13);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                    this.Manager.Comment("reaching state \'S27\'");
                    this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp13, "messageHandleIndex of CreateMessage, state S27");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp14, "return of CreateMessage, state S27");
                    this.Manager.Comment("reaching state \'S29\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                    this.Manager.Comment("executing step \'call SetProperties(1,5,[\"PidTagBody\"])\'");
                    temp15 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 5, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagBody",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S31\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SetProperties, state S31");
                    this.Manager.Comment("reaching state \'S33\'");
                    int temp16;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                    temp17 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp16);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S35\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp16, "messageIdIndex of SaveChangesMessage, state S35");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of SaveChangesMessage, state S35");
                    this.Manager.Comment("reaching state \'S37\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                    this.Manager.Comment("executing step \'call ModifyPermissions(1,3,None)\'");
                    temp18 = this.IMS_OXCFXICSAdapterInstance.ModifyPermissions(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.PermissionLevels)(0)));
                    this.Manager.Comment("reaching state \'S39\'");
                    this.Manager.Comment("checking step \'return ModifyPermissions/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp18, "return of ModifyPermissions, state S39");
                    this.Manager.Comment("reaching state \'S41\'");
                    int temp19;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,4,Contents,out _)\'");
                    temp20 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 4, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp19);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S43\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp19, "synchronizationHandleIndex of SynchronizationOpenCollector, state S43");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp20, "return of SynchronizationOpenCollector, state S43");
                    this.Manager.Comment("reaching state \'S45\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                    this.Manager.Comment("executing step \'call SynchronizationImportReadStateChanges(1,6,5,False)\'");
                    temp21 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportReadStateChanges(1, 6, 5, false);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2260");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                    this.Manager.Checkpoint("MS-OXCFXICS_R905");
                    this.Manager.Comment("reaching state \'S47\'");
                    this.Manager.Comment("checking step \'return SynchronizationImportReadStateChanges/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of SynchronizationImportReadStateChanges, state S47");
                    this.Manager.Comment("reaching state \'S49\'");
                    bool temp22;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2813,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2813, out temp22);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp22);
                    this.Manager.Comment("reaching state \'S51\'");
                    int temp30 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSReadStatus_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSReadStatus_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker2)));
                    if ((temp30 == 0)) {
                        this.Manager.Comment("reaching state \'S53\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                        this.Manager.Comment("executing step \'call ModifyPermissions(1,3,Owner)\'");
                        temp23 = this.IMS_OXCFXICSAdapterInstance.ModifyPermissions(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.PermissionLevels.Owner);
                        this.Manager.Comment("reaching state \'S57\'");
                        this.Manager.Comment("checking step \'return ModifyPermissions/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of ModifyPermissions, state S57");
                        this.Manager.Comment("reaching state \'S61\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                        this.Manager.Comment("executing step \'call DeleteFolder(1,3,3)\'");
                        temp24 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 3, 3);
                        this.Manager.Comment("reaching state \'S65\'");
                        this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of DeleteFolder, state S65");
                        this.Manager.Comment("reaching state \'S69\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                        this.Manager.Comment("executing step \'call DeleteFolder(1,2,2)\'");
                        temp25 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 2, 2);
                        this.Manager.Comment("reaching state \'S73\'");
                        this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of DeleteFolder, state S73");
                        this.Manager.Comment("reaching state \'S77\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp26 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S81\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of Release, state S81");
                        this.Manager.Comment("reaching state \'S83\'");
                        goto label0;
                    }
                    if ((temp30 == 1)) {
                        this.Manager.Comment("reaching state \'S54\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp27;
                        this.Manager.Comment("executing step \'call DeleteFolder(1,3,3)\'");
                        temp27 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 3, 3);
                        this.Manager.Comment("reaching state \'S58\'");
                        this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp27, "return of DeleteFolder, state S58");
                        this.Manager.Comment("reaching state \'S62\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                        this.Manager.Comment("executing step \'call DeleteFolder(1,2,2)\'");
                        temp28 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 2, 2);
                        this.Manager.Comment("reaching state \'S66\'");
                        this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of DeleteFolder, state S66");
                        this.Manager.Comment("reaching state \'S70\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp29 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S74\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of Release, state S74");
                        this.Manager.Comment("reaching state \'S78\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label2;
                }
                if ((temp60 == 1)) {
                    this.Manager.Comment("reaching state \'S6\'");
                    this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                    this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                    this.Manager.Comment("reaching state \'S8\'");
                    this.Manager.Comment("checking step \'return Connect\'");
                    this.Manager.Comment("reaching state \'S10\'");
                    int temp31;
                    int temp32;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                    this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                    temp33 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp31, out temp32);
                    this.Manager.Comment("reaching state \'S12\'");
                    this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp31, "logonHandleIndex of Logon, state S12");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp32, "inboxFolderIdIndex of Logon, state S12");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of Logon, state S12");
                    this.Manager.Comment("reaching state \'S14\'");
                    int temp34;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                    this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                    temp35 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp34);
                    this.Manager.Comment("reaching state \'S16\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp34, "folderHandleIndex of OpenFolder, state S16");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of OpenFolder, state S16");
                    this.Manager.Comment("reaching state \'S18\'");
                    int temp36;
                    int temp37;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                    this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                    temp38 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp36, out temp37);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S20\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp36, "folderIdIndex of CreateFolder, state S20");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp37, "folderHandleIndex of CreateFolder, state S20");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp38, "return of CreateFolder, state S20");
                    this.Manager.Comment("reaching state \'S22\'");
                    int temp39;
                    int temp40;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                    this.Manager.Comment("executing step \'call CreateFolder(1,3,\"test\",out _,out _)\'");
                    temp41 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "test", out temp39, out temp40);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S24\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp39, "folderIdIndex of CreateFolder, state S24");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp40, "folderHandleIndex of CreateFolder, state S24");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of CreateFolder, state S24");
                    this.Manager.Comment("reaching state \'S26\'");
                    int temp42;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp43;
                    this.Manager.Comment("executing step \'call CreateMessage(1,4,3,True,out _)\'");
                    temp43 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 4, 3, true, out temp42);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                    this.Manager.Comment("reaching state \'S28\'");
                    this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp42, "messageHandleIndex of CreateMessage, state S28");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp43, "return of CreateMessage, state S28");
                    this.Manager.Comment("reaching state \'S30\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                    this.Manager.Comment("executing step \'call SetProperties(1,5,[\"PidTagBody\"])\'");
                    temp44 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 5, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagBody",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S32\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of SetProperties, state S32");
                    this.Manager.Comment("reaching state \'S34\'");
                    int temp45;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                    temp46 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp45);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S36\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp45, "messageIdIndex of SaveChangesMessage, state S36");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of SaveChangesMessage, state S36");
                    this.Manager.Comment("reaching state \'S38\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                    this.Manager.Comment("executing step \'call ModifyPermissions(1,3,None)\'");
                    temp47 = this.IMS_OXCFXICSAdapterInstance.ModifyPermissions(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.PermissionLevels)(0)));
                    this.Manager.Comment("reaching state \'S40\'");
                    this.Manager.Comment("checking step \'return ModifyPermissions/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of ModifyPermissions, state S40");
                    this.Manager.Comment("reaching state \'S42\'");
                    int temp48;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,4,Contents,out _)\'");
                    temp49 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 4, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp48);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S44\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp48, "synchronizationHandleIndex of SynchronizationOpenCollector, state S44");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of SynchronizationOpenCollector, state S44");
                    this.Manager.Comment("reaching state \'S46\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                    this.Manager.Comment("executing step \'call SynchronizationImportReadStateChanges(1,6,5,False)\'");
                    temp50 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportReadStateChanges(1, 6, 5, false);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2260");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                    this.Manager.Checkpoint("MS-OXCFXICS_R905");
                    this.Manager.Comment("reaching state \'S48\'");
                    this.Manager.Comment("checking step \'return SynchronizationImportReadStateChanges/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of SynchronizationImportReadStateChanges, state S48");
                    this.Manager.Comment("reaching state \'S50\'");
                    bool temp51;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2813,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2813, out temp51);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp51);
                    this.Manager.Comment("reaching state \'S52\'");
                    int temp59 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSReadStatus_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker4)), new ExpectedReturn(S06_SyncICSReadStatus_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker5)));
                    if ((temp59 == 0)) {
                        this.Manager.Comment("reaching state \'S55\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                        this.Manager.Comment("executing step \'call ModifyPermissions(1,3,Owner)\'");
                        temp52 = this.IMS_OXCFXICSAdapterInstance.ModifyPermissions(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.PermissionLevels.Owner);
                        this.Manager.Comment("reaching state \'S59\'");
                        this.Manager.Comment("checking step \'return ModifyPermissions/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of ModifyPermissions, state S59");
                        this.Manager.Comment("reaching state \'S63\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                        this.Manager.Comment("executing step \'call DeleteFolder(1,3,3)\'");
                        temp53 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 3, 3);
                        this.Manager.Comment("reaching state \'S67\'");
                        this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of DeleteFolder, state S67");
                        this.Manager.Comment("reaching state \'S71\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                        this.Manager.Comment("executing step \'call DeleteFolder(1,2,2)\'");
                        temp54 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 2, 2);
                        this.Manager.Comment("reaching state \'S75\'");
                        this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of DeleteFolder, state S75");
                        this.Manager.Comment("reaching state \'S79\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp55;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp55 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S82\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp55, "return of Release, state S82");
                        this.Manager.Comment("reaching state \'S84\'");
                        goto label1;
                    }
                    if ((temp59 == 1)) {
                        this.Manager.Comment("reaching state \'S56\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                        this.Manager.Comment("executing step \'call DeleteFolder(1,3,3)\'");
                        temp56 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 3, 3);
                        this.Manager.Comment("reaching state \'S60\'");
                        this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp56, "return of DeleteFolder, state S60");
                        this.Manager.Comment("reaching state \'S64\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                        this.Manager.Comment("executing step \'call DeleteFolder(1,2,2)\'");
                        temp57 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 2, 2);
                        this.Manager.Comment("reaching state \'S68\'");
                        this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of DeleteFolder, state S68");
                        this.Manager.Comment("reaching state \'S72\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp58;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp58 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S76\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp58, "return of Release, state S76");
                        this.Manager.Comment("reaching state \'S80\'");
                        goto label1;
                    }
                    throw new InvalidOperationException("never reached");
                label1:
;
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp61 == 1)) {
                this.Manager.Comment("reaching state \'S3\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S4");
        }
        
        private void MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S51");
        }
        
        private void MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S51");
        }
        
        private void MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S4");
        }
        
        private void MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S52");
        }
        
        private void MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S52");
        }
        
        private void MSOXCFXICS_S06_SyncICSReadStatus_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}