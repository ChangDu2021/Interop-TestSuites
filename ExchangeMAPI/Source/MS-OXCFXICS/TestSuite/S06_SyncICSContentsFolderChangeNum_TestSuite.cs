//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S06_SyncICSContentsFolderChangeNum_TestSuite : PtfTestClassBase {
        
        public S06_SyncICSContentsFolderChangeNum_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp291 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp291 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                bool temp1;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp1);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1);
                this.Manager.Comment("reaching state \'S4\'");
                int temp290 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker7)));
                if ((temp290 == 0)) {
                    this.Manager.Comment("reaching state \'S5\'");
                    bool temp2;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(1062,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1062, out temp2);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2);
                    this.Manager.Comment("reaching state \'S7\'");
                    int temp145 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker4)));
                    if ((temp145 == 0)) {
                        this.Manager.Comment("reaching state \'S10\'");
                        this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                        this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                        this.Manager.Comment("reaching state \'S14\'");
                        this.Manager.Comment("checking step \'return Connect\'");
                        this.Manager.Comment("reaching state \'S18\'");
                        int temp3;
                        int temp4;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                        this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                        temp5 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp3, out temp4);
                        this.Manager.Comment("reaching state \'S22\'");
                        this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp3, "logonHandleIndex of Logon, state S22");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp4, "inboxFolderIdIndex of Logon, state S22");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of Logon, state S22");
                        this.Manager.Comment("reaching state \'S26\'");
                        int temp6;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp7;
                        this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                        temp7 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp6);
                        this.Manager.Comment("reaching state \'S30\'");
                        this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderHandleIndex of OpenFolder, state S30");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp7, "return of OpenFolder, state S30");
                        this.Manager.Comment("reaching state \'S34\'");
                        int temp8;
                        int temp9;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp10;
                        this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                        temp10 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp8, out temp9);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                        this.Manager.Comment("reaching state \'S38\'");
                        this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp8, "folderIdIndex of CreateFolder, state S38");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "folderHandleIndex of CreateFolder, state S38");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp10, "return of CreateFolder, state S38");
                        this.Manager.Comment("reaching state \'S42\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                        this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                        temp11 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                        this.Manager.Checkpoint("MS-OXCFXICS_R925");
                        this.Manager.Comment("reaching state \'S46\'");
                        this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of GetLocalReplicaIds, state S46");
                        this.Manager.Comment("reaching state \'S50\'");
                        int temp12;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                        temp13 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp12);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S54\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp12, "synchronizationHandleIndex of SynchronizationOpenCollector, state S54");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of SynchronizationOpenCollector, state S54");
                        this.Manager.Comment("reaching state \'S58\'");
                        int temp14;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                        temp15 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp14);
                        this.Manager.Checkpoint("MS-OXCFXICS_R814");
                        this.Manager.Checkpoint("MS-OXCFXICS_R805");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R782");
                        this.Manager.Comment("reaching state \'S62\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp14, "importMessageHandleIndex of SynchronizationImportMessageChange, state S62");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SynchronizationImportMessageChange, state S62");
                        this.Manager.Comment("reaching state \'S66\'");
                        int temp16;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                        this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                        temp17 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp16);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                        this.Manager.Comment("reaching state \'S70\'");
                        this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp16, "messageIdIndex of SaveChangesMessage, state S70");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of SaveChangesMessage, state S70");
                        this.Manager.Comment("reaching state \'S74\'");
                        int temp18;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                        temp19 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp18);
                        this.Manager.Checkpoint("MS-OXCFXICS_R814");
                        this.Manager.Checkpoint("MS-OXCFXICS_R805");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R782");
                        this.Manager.Comment("reaching state \'S78\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp18, "importMessageHandleIndex of SynchronizationImportMessageChange, state S78");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp19, "return of SynchronizationImportMessageChange, state S78");
                        this.Manager.Comment("reaching state \'S82\'");
                        int temp20;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                        this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                        temp21 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp20);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                        this.Manager.Comment("reaching state \'S86\'");
                        this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp20, "messageIdIndex of SaveChangesMessage, state S86");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of SaveChangesMessage, state S86");
                        this.Manager.Comment("reaching state \'S90\'");
                        int temp22;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp23 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp22);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S94\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp22, "downloadcontextHandleIndex of SynchronizationConfigure, state S94");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of SynchronizationConfigure, state S94");
                        this.Manager.Comment("reaching state \'S98\'");
                        bool temp24;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp24);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp24);
                        this.Manager.Comment("reaching state \'S102\'");
                        int temp73 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker3)));
                        if ((temp73 == 0)) {
                            this.Manager.Comment("reaching state \'S107\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                            temp25 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                            this.Manager.Comment("reaching state \'S115\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp25, "return of SynchronizationUploadState, state S115");
                            this.Manager.Comment("reaching state \'S123\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                            temp26 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                            this.Manager.Comment("reaching state \'S131\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of SynchronizationUploadState, state S131");
                            this.Manager.Comment("reaching state \'S139\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp27;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                            temp27 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                            this.Manager.Comment("reaching state \'S147\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp27, "return of SynchronizationUploadState, state S147");
                            this.Manager.Comment("reaching state \'S155\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                            temp28 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                            this.Manager.Comment("reaching state \'S163\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of SynchronizationUploadState, state S163");
                            this.Manager.Comment("reaching state \'S171\'");
                            int temp29;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp30;
                            bool temp31;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp32 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp29, out temp30, out temp31);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S179\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                    "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                    "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                                    "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                                    "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                                    "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                                    "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                                    "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                                    "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                                    "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                                    "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                                    "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                                    "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                                    "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                                    "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                                    "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                                    "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                                    "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                                    "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                                    "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                                    "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                                    "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                                    "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                                    "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                                    "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                                    "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                                    "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                    "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                    "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                    "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                    "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                                    "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                                    "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                                    "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                                    "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                                    "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                                    "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                                    ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp29, "transferBufferIndex of FastTransferSourceGetBuffer, state S179");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                        "IsProgressPerMessagePresent",
                                                                                        "FollowedFAIMessage",
                                                                                        "IsMessageChangeFull",
                                                                                        "IsPidTagMidExist",
                                                                                        "IsPidTagMessageSizeExist",
                                                                                        "IsPidTagChangeNumberExist",
                                                                                        "MessageIdIndex",
                                                                                        "IsRTFformat"}, new object[] {
                                                                                        false,
                                                                                        false,
                                                                                        true,
                                                                                        true,
                                                                                        false,
                                                                                        false,
                                                                                        3,
                                                                                        false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    4,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    1,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        true,
                                                        true}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp30, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S179");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp31, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S179");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of FastTransferSourceGetBuffer, state S179");
                            this.Manager.Comment("reaching state \'S187\'");
                            int temp33;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                            this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                            temp34 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp33);
                            this.Manager.Checkpoint("MS-OXCFXICS_R778");
                            this.Manager.Checkpoint("MS-OXCFXICS_R769");
                            this.Manager.Comment("reaching state \'S195\'");
                            this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp33, "synchronizationHandleIndex of SynchronizationOpenCollector, state S195");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of SynchronizationOpenCollector, state S195");
                            this.Manager.Comment("reaching state \'S203\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                            temp35 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        3,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S211\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of SynchronizationImportDeletes, state S211");
                            this.Manager.Comment("reaching state \'S219\'");
                            int temp36;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                            temp37 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp36);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S227\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp36, "downloadcontextHandleIndex of SynchronizationConfigure, state S227");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp37, "return of SynchronizationConfigure, state S227");
                            this.Manager.Comment("reaching state \'S235\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                            temp38 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Comment("reaching state \'S243\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp38, "return of SynchronizationUploadState, state S243");
                            this.Manager.Comment("reaching state \'S251\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                            temp39 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S259\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of SynchronizationUploadState, state S259");
                            this.Manager.Comment("reaching state \'S267\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp40;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                            temp40 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S275\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp40, "return of SynchronizationUploadState, state S275");
                            this.Manager.Comment("reaching state \'S283\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                            temp41 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S291\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of SynchronizationUploadState, state S291");
                            this.Manager.Comment("reaching state \'S299\'");
                            int temp42;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp43;
                            bool temp44;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp45 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp42, out temp43, out temp44);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S307\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp42, "transferBufferIndex of FastTransferSourceGetBuffer, state S307");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp43, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S307");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp44, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S307");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of FastTransferSourceGetBuffer, state S307");
                            this.Manager.Comment("reaching state \'S315\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                            this.Manager.Comment("executing step \'call GetPropertiesSpecific(1,3,[\"PidTagChangeNumber\",\"PidTagDelet" +
                                    "edCountTotal\"])\'");
                            temp46 = this.IMS_OXCFXICSAdapterInstance.GetPropertiesSpecific(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagChangeNumber",
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagDeletedCountTotal",
                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                            this.Manager.Comment("reaching state \'S323\'");
                            this.Manager.Comment("checking step \'return GetPropertiesSpecific/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of GetPropertiesSpecific, state S323");
                            this.Manager.Comment("reaching state \'S331\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp47 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S339\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of Release, state S339");
                            this.Manager.Comment("reaching state \'S347\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp48;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp48 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S355\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp48, "return of Release, state S355");
                            this.Manager.Comment("reaching state \'S363\'");
                            goto label0;
                        }
                        if ((temp73 == 1)) {
                            this.Manager.Comment("reaching state \'S108\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                            temp49 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S116\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of SynchronizationUploadState, state S116");
                            this.Manager.Comment("reaching state \'S124\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                            temp50 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                            this.Manager.Comment("reaching state \'S132\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of SynchronizationUploadState, state S132");
                            this.Manager.Comment("reaching state \'S140\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                            temp51 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                            this.Manager.Comment("reaching state \'S148\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of SynchronizationUploadState, state S148");
                            this.Manager.Comment("reaching state \'S156\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                            temp52 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                            this.Manager.Comment("reaching state \'S164\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of SynchronizationUploadState, state S164");
                            this.Manager.Comment("reaching state \'S172\'");
                            int temp53;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp54;
                            bool temp55;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp56 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp53, out temp54, out temp55);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S180\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                    "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                    "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                                    "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                                    "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                                    "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                                    "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                                    "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                                    "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                                    "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                                    "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                                    "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                                    "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                                    "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                                    "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                                    "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                                    "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                                    "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                                    "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                                    "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                                    "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                                    "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                                    "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                                    "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                                    "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                                    "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                                    "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                    "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                    "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                    "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                    "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                                    "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                                    "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                                    "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                                    "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                                    "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                                    "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                                    ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp53, "transferBufferIndex of FastTransferSourceGetBuffer, state S180");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                        "IsProgressPerMessagePresent",
                                                                                        "FollowedFAIMessage",
                                                                                        "IsMessageChangeFull",
                                                                                        "IsPidTagMidExist",
                                                                                        "IsPidTagMessageSizeExist",
                                                                                        "IsPidTagChangeNumberExist",
                                                                                        "MessageIdIndex",
                                                                                        "IsRTFformat"}, new object[] {
                                                                                        false,
                                                                                        false,
                                                                                        true,
                                                                                        true,
                                                                                        false,
                                                                                        false,
                                                                                        3,
                                                                                        false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    4,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    1,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        true,
                                                        true}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp54, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S180");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp55, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S180");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp56, "return of FastTransferSourceGetBuffer, state S180");
                            this.Manager.Comment("reaching state \'S188\'");
                            int temp57;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp58;
                            this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                            temp58 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp57);
                            this.Manager.Checkpoint("MS-OXCFXICS_R778");
                            this.Manager.Checkpoint("MS-OXCFXICS_R769");
                            this.Manager.Comment("reaching state \'S196\'");
                            this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp57, "synchronizationHandleIndex of SynchronizationOpenCollector, state S196");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp58, "return of SynchronizationOpenCollector, state S196");
                            this.Manager.Comment("reaching state \'S204\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp59;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                            temp59 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        3,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S212\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp59, "return of SynchronizationImportDeletes, state S212");
                            this.Manager.Comment("reaching state \'S220\'");
                            int temp60;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                            temp61 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp60);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S228\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp60, "downloadcontextHandleIndex of SynchronizationConfigure, state S228");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp61, "return of SynchronizationConfigure, state S228");
                            this.Manager.Comment("reaching state \'S236\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                            temp62 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S244\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp62, "return of SynchronizationUploadState, state S244");
                            this.Manager.Comment("reaching state \'S252\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                            temp63 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S260\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of SynchronizationUploadState, state S260");
                            this.Manager.Comment("reaching state \'S268\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                            temp64 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S276\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of SynchronizationUploadState, state S276");
                            this.Manager.Comment("reaching state \'S284\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                            temp65 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S292\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of SynchronizationUploadState, state S292");
                            this.Manager.Comment("reaching state \'S300\'");
                            int temp66;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp67;
                            bool temp68;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp69;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp69 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp66, out temp67, out temp68);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S308\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp66, "transferBufferIndex of FastTransferSourceGetBuffer, state S308");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp67, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S308");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp68, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S308");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp69, "return of FastTransferSourceGetBuffer, state S308");
                            this.Manager.Comment("reaching state \'S316\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp70;
                            this.Manager.Comment("executing step \'call GetPropertiesSpecific(1,3,[\"PidTagChangeNumber\",\"PidTagDelet" +
                                    "edCountTotal\"])\'");
                            temp70 = this.IMS_OXCFXICSAdapterInstance.GetPropertiesSpecific(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagChangeNumber",
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagDeletedCountTotal",
                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                            this.Manager.Comment("reaching state \'S324\'");
                            this.Manager.Comment("checking step \'return GetPropertiesSpecific/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp70, "return of GetPropertiesSpecific, state S324");
                            this.Manager.Comment("reaching state \'S332\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp71 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S340\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of Release, state S340");
                            this.Manager.Comment("reaching state \'S348\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp72 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S356\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of Release, state S356");
                            this.Manager.Comment("reaching state \'S364\'");
                            goto label0;
                        }
                        throw new InvalidOperationException("never reached");
                    label0:
;
                        goto label2;
                    }
                    if ((temp145 == 1)) {
                        this.Manager.Comment("reaching state \'S9\'");
                        this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                        this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                        this.Manager.Comment("reaching state \'S13\'");
                        this.Manager.Comment("checking step \'return Connect\'");
                        this.Manager.Comment("reaching state \'S17\'");
                        int temp74;
                        int temp75;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp76;
                        this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                        temp76 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp74, out temp75);
                        this.Manager.Comment("reaching state \'S21\'");
                        this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp74, "logonHandleIndex of Logon, state S21");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp75, "inboxFolderIdIndex of Logon, state S21");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp76, "return of Logon, state S21");
                        this.Manager.Comment("reaching state \'S25\'");
                        int temp77;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp78;
                        this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                        temp78 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp77);
                        this.Manager.Comment("reaching state \'S29\'");
                        this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp77, "folderHandleIndex of OpenFolder, state S29");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp78, "return of OpenFolder, state S29");
                        this.Manager.Comment("reaching state \'S33\'");
                        int temp79;
                        int temp80;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                        this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                        temp81 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp79, out temp80);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                        this.Manager.Comment("reaching state \'S37\'");
                        this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp79, "folderIdIndex of CreateFolder, state S37");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp80, "folderHandleIndex of CreateFolder, state S37");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of CreateFolder, state S37");
                        this.Manager.Comment("reaching state \'S41\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp82;
                        this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                        temp82 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                        this.Manager.Checkpoint("MS-OXCFXICS_R925");
                        this.Manager.Comment("reaching state \'S45\'");
                        this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp82, "return of GetLocalReplicaIds, state S45");
                        this.Manager.Comment("reaching state \'S49\'");
                        int temp83;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp84;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                        temp84 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp83);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S53\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp83, "synchronizationHandleIndex of SynchronizationOpenCollector, state S53");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp84, "return of SynchronizationOpenCollector, state S53");
                        this.Manager.Comment("reaching state \'S57\'");
                        int temp85;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp86;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                        temp86 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp85);
                        this.Manager.Checkpoint("MS-OXCFXICS_R814");
                        this.Manager.Checkpoint("MS-OXCFXICS_R805");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R782");
                        this.Manager.Comment("reaching state \'S61\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp85, "importMessageHandleIndex of SynchronizationImportMessageChange, state S61");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp86, "return of SynchronizationImportMessageChange, state S61");
                        this.Manager.Comment("reaching state \'S65\'");
                        int temp87;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp88;
                        this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                        temp88 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp87);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                        this.Manager.Comment("reaching state \'S69\'");
                        this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp87, "messageIdIndex of SaveChangesMessage, state S69");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp88, "return of SaveChangesMessage, state S69");
                        this.Manager.Comment("reaching state \'S73\'");
                        int temp89;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp90;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                        temp90 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp89);
                        this.Manager.Checkpoint("MS-OXCFXICS_R814");
                        this.Manager.Checkpoint("MS-OXCFXICS_R805");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R782");
                        this.Manager.Comment("reaching state \'S77\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp89, "importMessageHandleIndex of SynchronizationImportMessageChange, state S77");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp90, "return of SynchronizationImportMessageChange, state S77");
                        this.Manager.Comment("reaching state \'S81\'");
                        int temp91;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp92;
                        this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                        temp92 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp91);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                        this.Manager.Comment("reaching state \'S85\'");
                        this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp91, "messageIdIndex of SaveChangesMessage, state S85");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp92, "return of SaveChangesMessage, state S85");
                        this.Manager.Comment("reaching state \'S89\'");
                        int temp93;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp94;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp94 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp93);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S93\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp93, "downloadcontextHandleIndex of SynchronizationConfigure, state S93");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp94, "return of SynchronizationConfigure, state S93");
                        this.Manager.Comment("reaching state \'S97\'");
                        bool temp95;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp95);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp95);
                        this.Manager.Comment("reaching state \'S101\'");
                        int temp144 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker6)));
                        if ((temp144 == 0)) {
                            this.Manager.Comment("reaching state \'S105\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp96;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                            temp96 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                            this.Manager.Comment("reaching state \'S113\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp96, "return of SynchronizationUploadState, state S113");
                            this.Manager.Comment("reaching state \'S121\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp97;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                            temp97 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                            this.Manager.Comment("reaching state \'S129\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp97, "return of SynchronizationUploadState, state S129");
                            this.Manager.Comment("reaching state \'S137\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp98;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                            temp98 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                            this.Manager.Comment("reaching state \'S145\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp98, "return of SynchronizationUploadState, state S145");
                            this.Manager.Comment("reaching state \'S153\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                            temp99 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                            this.Manager.Comment("reaching state \'S161\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of SynchronizationUploadState, state S161");
                            this.Manager.Comment("reaching state \'S169\'");
                            int temp100;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp101;
                            bool temp102;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp103;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp103 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp100, out temp101, out temp102);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S177\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                    "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                    "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                                    "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                                    "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                                    "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                                    "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                                    "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                                    "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                                    "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                                    "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                                    "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                                    "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                                    "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                                    "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                                    "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                                    "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                                    "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                                    "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                                    "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                                    "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                                    "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                                    "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                                    "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                                    "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                                    "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                                    "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                    "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                    "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                    "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                    "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                                    "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                                    "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                                    "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                                    "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                                    "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                                    "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                                    ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp100, "transferBufferIndex of FastTransferSourceGetBuffer, state S177");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                        "IsProgressPerMessagePresent",
                                                                                        "FollowedFAIMessage",
                                                                                        "IsMessageChangeFull",
                                                                                        "IsPidTagMidExist",
                                                                                        "IsPidTagMessageSizeExist",
                                                                                        "IsPidTagChangeNumberExist",
                                                                                        "MessageIdIndex",
                                                                                        "IsRTFformat"}, new object[] {
                                                                                        false,
                                                                                        false,
                                                                                        true,
                                                                                        true,
                                                                                        false,
                                                                                        false,
                                                                                        3,
                                                                                        false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    4,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    1,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        true,
                                                        true}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp101, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S177");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp102, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S177");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp103, "return of FastTransferSourceGetBuffer, state S177");
                            this.Manager.Comment("reaching state \'S185\'");
                            int temp104;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp105;
                            this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                            temp105 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp104);
                            this.Manager.Checkpoint("MS-OXCFXICS_R778");
                            this.Manager.Checkpoint("MS-OXCFXICS_R769");
                            this.Manager.Comment("reaching state \'S193\'");
                            this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp104, "synchronizationHandleIndex of SynchronizationOpenCollector, state S193");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp105, "return of SynchronizationOpenCollector, state S193");
                            this.Manager.Comment("reaching state \'S201\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                            temp106 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        3,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S209\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of SynchronizationImportDeletes, state S209");
                            this.Manager.Comment("reaching state \'S217\'");
                            int temp107;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp108;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                            temp108 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp107);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S225\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp107, "downloadcontextHandleIndex of SynchronizationConfigure, state S225");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp108, "return of SynchronizationConfigure, state S225");
                            this.Manager.Comment("reaching state \'S233\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp109;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                            temp109 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Comment("reaching state \'S241\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp109, "return of SynchronizationUploadState, state S241");
                            this.Manager.Comment("reaching state \'S249\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp110;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                            temp110 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S257\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp110, "return of SynchronizationUploadState, state S257");
                            this.Manager.Comment("reaching state \'S265\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp111;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                            temp111 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S273\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp111, "return of SynchronizationUploadState, state S273");
                            this.Manager.Comment("reaching state \'S281\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                            temp112 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S289\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of SynchronizationUploadState, state S289");
                            this.Manager.Comment("reaching state \'S297\'");
                            int temp113;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp114;
                            bool temp115;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp116 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp113, out temp114, out temp115);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S305\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp113, "transferBufferIndex of FastTransferSourceGetBuffer, state S305");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp114, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S305");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp115, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S305");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of FastTransferSourceGetBuffer, state S305");
                            this.Manager.Comment("reaching state \'S313\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp117;
                            this.Manager.Comment("executing step \'call GetPropertiesSpecific(1,3,[\"PidTagChangeNumber\",\"PidTagDelet" +
                                    "edCountTotal\"])\'");
                            temp117 = this.IMS_OXCFXICSAdapterInstance.GetPropertiesSpecific(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagChangeNumber",
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagDeletedCountTotal",
                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                            this.Manager.Comment("reaching state \'S321\'");
                            this.Manager.Comment("checking step \'return GetPropertiesSpecific/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp117, "return of GetPropertiesSpecific, state S321");
                            this.Manager.Comment("reaching state \'S329\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp118;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp118 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S337\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp118, "return of Release, state S337");
                            this.Manager.Comment("reaching state \'S345\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp119;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp119 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S353\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp119, "return of Release, state S353");
                            this.Manager.Comment("reaching state \'S361\'");
                            goto label1;
                        }
                        if ((temp144 == 1)) {
                            this.Manager.Comment("reaching state \'S106\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp120;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                            temp120 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S114\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp120, "return of SynchronizationUploadState, state S114");
                            this.Manager.Comment("reaching state \'S122\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp121;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                            temp121 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                            this.Manager.Comment("reaching state \'S130\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp121, "return of SynchronizationUploadState, state S130");
                            this.Manager.Comment("reaching state \'S138\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp122;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                            temp122 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                            this.Manager.Comment("reaching state \'S146\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp122, "return of SynchronizationUploadState, state S146");
                            this.Manager.Comment("reaching state \'S154\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp123;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                            temp123 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                            this.Manager.Comment("reaching state \'S162\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp123, "return of SynchronizationUploadState, state S162");
                            this.Manager.Comment("reaching state \'S170\'");
                            int temp124;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp125;
                            bool temp126;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp127;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp127 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp124, out temp125, out temp126);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S178\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                    "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                    "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                                    "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                                    "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                                    "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                                    "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                                    "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                                    "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                                    "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                                    "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                                    "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                                    "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                                    "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                                    "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                                    "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                                    "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                                    "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                                    "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                                    "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                                    "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                                    "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                                    "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                                    "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                                    "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                                    "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                                    "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                    "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                    "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                    "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                    "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                                    "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                                    "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                                    "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                                    "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                                    "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                                    "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                                    ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp124, "transferBufferIndex of FastTransferSourceGetBuffer, state S178");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                        "IsProgressPerMessagePresent",
                                                                                        "FollowedFAIMessage",
                                                                                        "IsMessageChangeFull",
                                                                                        "IsPidTagMidExist",
                                                                                        "IsPidTagMessageSizeExist",
                                                                                        "IsPidTagChangeNumberExist",
                                                                                        "MessageIdIndex",
                                                                                        "IsRTFformat"}, new object[] {
                                                                                        false,
                                                                                        false,
                                                                                        true,
                                                                                        true,
                                                                                        false,
                                                                                        false,
                                                                                        3,
                                                                                        false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    4,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    1,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        true,
                                                        true}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp125, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S178");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp126, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S178");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp127, "return of FastTransferSourceGetBuffer, state S178");
                            this.Manager.Comment("reaching state \'S186\'");
                            int temp128;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp129;
                            this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                            temp129 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp128);
                            this.Manager.Checkpoint("MS-OXCFXICS_R778");
                            this.Manager.Checkpoint("MS-OXCFXICS_R769");
                            this.Manager.Comment("reaching state \'S194\'");
                            this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp128, "synchronizationHandleIndex of SynchronizationOpenCollector, state S194");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp129, "return of SynchronizationOpenCollector, state S194");
                            this.Manager.Comment("reaching state \'S202\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp130;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                            temp130 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        3,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S210\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp130, "return of SynchronizationImportDeletes, state S210");
                            this.Manager.Comment("reaching state \'S218\'");
                            int temp131;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp132;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                            temp132 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp131);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S226\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp131, "downloadcontextHandleIndex of SynchronizationConfigure, state S226");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp132, "return of SynchronizationConfigure, state S226");
                            this.Manager.Comment("reaching state \'S234\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp133;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                            temp133 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S242\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp133, "return of SynchronizationUploadState, state S242");
                            this.Manager.Comment("reaching state \'S250\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp134;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                            temp134 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S258\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp134, "return of SynchronizationUploadState, state S258");
                            this.Manager.Comment("reaching state \'S266\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp135;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                            temp135 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S274\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp135, "return of SynchronizationUploadState, state S274");
                            this.Manager.Comment("reaching state \'S282\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp136;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                            temp136 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S290\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp136, "return of SynchronizationUploadState, state S290");
                            this.Manager.Comment("reaching state \'S298\'");
                            int temp137;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp138;
                            bool temp139;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp140;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp140 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp137, out temp138, out temp139);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S306\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp137, "transferBufferIndex of FastTransferSourceGetBuffer, state S306");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp138, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S306");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp139, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S306");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp140, "return of FastTransferSourceGetBuffer, state S306");
                            this.Manager.Comment("reaching state \'S314\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp141;
                            this.Manager.Comment("executing step \'call GetPropertiesSpecific(1,3,[\"PidTagChangeNumber\",\"PidTagDelet" +
                                    "edCountTotal\"])\'");
                            temp141 = this.IMS_OXCFXICSAdapterInstance.GetPropertiesSpecific(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagChangeNumber",
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagDeletedCountTotal",
                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                            this.Manager.Comment("reaching state \'S322\'");
                            this.Manager.Comment("checking step \'return GetPropertiesSpecific/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp141, "return of GetPropertiesSpecific, state S322");
                            this.Manager.Comment("reaching state \'S330\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp142;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp142 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S338\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp142, "return of Release, state S338");
                            this.Manager.Comment("reaching state \'S346\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp143;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp143 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S354\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp143, "return of Release, state S354");
                            this.Manager.Comment("reaching state \'S362\'");
                            goto label1;
                        }
                        throw new InvalidOperationException("never reached");
                    label1:
;
                        goto label2;
                    }
                    throw new InvalidOperationException("never reached");
                label2:
;
                    goto label6;
                }
                if ((temp290 == 1)) {
                    this.Manager.Comment("reaching state \'S6\'");
                    bool temp146;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(1062,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1062, out temp146);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp146);
                    this.Manager.Comment("reaching state \'S8\'");
                    int temp289 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker11)));
                    if ((temp289 == 0)) {
                        this.Manager.Comment("reaching state \'S11\'");
                        this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                        this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                        this.Manager.Comment("reaching state \'S15\'");
                        this.Manager.Comment("checking step \'return Connect\'");
                        this.Manager.Comment("reaching state \'S19\'");
                        int temp147;
                        int temp148;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp149;
                        this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                        temp149 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp147, out temp148);
                        this.Manager.Comment("reaching state \'S23\'");
                        this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp147, "logonHandleIndex of Logon, state S23");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp148, "inboxFolderIdIndex of Logon, state S23");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp149, "return of Logon, state S23");
                        this.Manager.Comment("reaching state \'S27\'");
                        int temp150;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp151;
                        this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                        temp151 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp150);
                        this.Manager.Comment("reaching state \'S31\'");
                        this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp150, "folderHandleIndex of OpenFolder, state S31");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp151, "return of OpenFolder, state S31");
                        this.Manager.Comment("reaching state \'S35\'");
                        int temp152;
                        int temp153;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp154;
                        this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                        temp154 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp152, out temp153);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                        this.Manager.Comment("reaching state \'S39\'");
                        this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp152, "folderIdIndex of CreateFolder, state S39");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp153, "folderHandleIndex of CreateFolder, state S39");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp154, "return of CreateFolder, state S39");
                        this.Manager.Comment("reaching state \'S43\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp155;
                        this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                        temp155 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                        this.Manager.Checkpoint("MS-OXCFXICS_R925");
                        this.Manager.Comment("reaching state \'S47\'");
                        this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp155, "return of GetLocalReplicaIds, state S47");
                        this.Manager.Comment("reaching state \'S51\'");
                        int temp156;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp157;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                        temp157 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp156);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S55\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp156, "synchronizationHandleIndex of SynchronizationOpenCollector, state S55");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp157, "return of SynchronizationOpenCollector, state S55");
                        this.Manager.Comment("reaching state \'S59\'");
                        int temp158;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp159;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                        temp159 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp158);
                        this.Manager.Checkpoint("MS-OXCFXICS_R814");
                        this.Manager.Checkpoint("MS-OXCFXICS_R805");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R782");
                        this.Manager.Comment("reaching state \'S63\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp158, "importMessageHandleIndex of SynchronizationImportMessageChange, state S63");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp159, "return of SynchronizationImportMessageChange, state S63");
                        this.Manager.Comment("reaching state \'S67\'");
                        int temp160;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp161;
                        this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                        temp161 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp160);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                        this.Manager.Comment("reaching state \'S71\'");
                        this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp160, "messageIdIndex of SaveChangesMessage, state S71");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp161, "return of SaveChangesMessage, state S71");
                        this.Manager.Comment("reaching state \'S75\'");
                        int temp162;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp163;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                        temp163 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp162);
                        this.Manager.Checkpoint("MS-OXCFXICS_R814");
                        this.Manager.Checkpoint("MS-OXCFXICS_R805");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R782");
                        this.Manager.Comment("reaching state \'S79\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp162, "importMessageHandleIndex of SynchronizationImportMessageChange, state S79");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp163, "return of SynchronizationImportMessageChange, state S79");
                        this.Manager.Comment("reaching state \'S83\'");
                        int temp164;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp165;
                        this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                        temp165 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp164);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                        this.Manager.Comment("reaching state \'S87\'");
                        this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp164, "messageIdIndex of SaveChangesMessage, state S87");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp165, "return of SaveChangesMessage, state S87");
                        this.Manager.Comment("reaching state \'S91\'");
                        int temp166;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp167 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp166);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S95\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp166, "downloadcontextHandleIndex of SynchronizationConfigure, state S95");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of SynchronizationConfigure, state S95");
                        this.Manager.Comment("reaching state \'S99\'");
                        bool temp168;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp168);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp168);
                        this.Manager.Comment("reaching state \'S103\'");
                        int temp217 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker10)));
                        if ((temp217 == 0)) {
                            this.Manager.Comment("reaching state \'S109\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp169;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                            temp169 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                            this.Manager.Comment("reaching state \'S117\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp169, "return of SynchronizationUploadState, state S117");
                            this.Manager.Comment("reaching state \'S125\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp170;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                            temp170 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                            this.Manager.Comment("reaching state \'S133\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp170, "return of SynchronizationUploadState, state S133");
                            this.Manager.Comment("reaching state \'S141\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp171;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                            temp171 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                            this.Manager.Comment("reaching state \'S149\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp171, "return of SynchronizationUploadState, state S149");
                            this.Manager.Comment("reaching state \'S157\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp172;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                            temp172 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                            this.Manager.Comment("reaching state \'S165\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp172, "return of SynchronizationUploadState, state S165");
                            this.Manager.Comment("reaching state \'S173\'");
                            int temp173;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp174;
                            bool temp175;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp176;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp176 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp173, out temp174, out temp175);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S181\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                    "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                    "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                                    "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                                    "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                                    "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                                    "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                                    "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                                    "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                                    "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                                    "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                                    "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                                    "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                                    "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                                    "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                                    "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                                    "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                                    "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                                    "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                                    "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                                    "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                                    "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                                    "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                                    "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                                    "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                                    "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                                    "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                    "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                    "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                    "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                    "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                                    "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                                    "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                                    "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                                    "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                                    "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                                    "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                                    ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp173, "transferBufferIndex of FastTransferSourceGetBuffer, state S181");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                        "IsProgressPerMessagePresent",
                                                                                        "FollowedFAIMessage",
                                                                                        "IsMessageChangeFull",
                                                                                        "IsPidTagMidExist",
                                                                                        "IsPidTagMessageSizeExist",
                                                                                        "IsPidTagChangeNumberExist",
                                                                                        "MessageIdIndex",
                                                                                        "IsRTFformat"}, new object[] {
                                                                                        false,
                                                                                        false,
                                                                                        true,
                                                                                        true,
                                                                                        false,
                                                                                        false,
                                                                                        3,
                                                                                        false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    4,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    1,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        true,
                                                        true}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp174, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S181");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp175, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S181");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp176, "return of FastTransferSourceGetBuffer, state S181");
                            this.Manager.Comment("reaching state \'S189\'");
                            int temp177;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp178;
                            this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                            temp178 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp177);
                            this.Manager.Checkpoint("MS-OXCFXICS_R778");
                            this.Manager.Checkpoint("MS-OXCFXICS_R769");
                            this.Manager.Comment("reaching state \'S197\'");
                            this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp177, "synchronizationHandleIndex of SynchronizationOpenCollector, state S197");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp178, "return of SynchronizationOpenCollector, state S197");
                            this.Manager.Comment("reaching state \'S205\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp179;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                            temp179 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        3,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S213\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp179, "return of SynchronizationImportDeletes, state S213");
                            this.Manager.Comment("reaching state \'S221\'");
                            int temp180;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp181;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                            temp181 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp180);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S229\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp180, "downloadcontextHandleIndex of SynchronizationConfigure, state S229");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp181, "return of SynchronizationConfigure, state S229");
                            this.Manager.Comment("reaching state \'S237\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp182;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                            temp182 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Comment("reaching state \'S245\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp182, "return of SynchronizationUploadState, state S245");
                            this.Manager.Comment("reaching state \'S253\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp183;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                            temp183 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S261\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp183, "return of SynchronizationUploadState, state S261");
                            this.Manager.Comment("reaching state \'S269\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp184;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                            temp184 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S277\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp184, "return of SynchronizationUploadState, state S277");
                            this.Manager.Comment("reaching state \'S285\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp185;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                            temp185 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S293\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp185, "return of SynchronizationUploadState, state S293");
                            this.Manager.Comment("reaching state \'S301\'");
                            int temp186;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp187;
                            bool temp188;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp189;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp189 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp186, out temp187, out temp188);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S309\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp186, "transferBufferIndex of FastTransferSourceGetBuffer, state S309");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp187, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S309");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp188, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S309");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp189, "return of FastTransferSourceGetBuffer, state S309");
                            this.Manager.Comment("reaching state \'S317\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp190;
                            this.Manager.Comment("executing step \'call GetPropertiesSpecific(1,3,[\"PidTagChangeNumber\",\"PidTagDelet" +
                                    "edCountTotal\"])\'");
                            temp190 = this.IMS_OXCFXICSAdapterInstance.GetPropertiesSpecific(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagChangeNumber",
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagDeletedCountTotal",
                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                            this.Manager.Comment("reaching state \'S325\'");
                            this.Manager.Comment("checking step \'return GetPropertiesSpecific/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp190, "return of GetPropertiesSpecific, state S325");
                            this.Manager.Comment("reaching state \'S333\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp191;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp191 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S341\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp191, "return of Release, state S341");
                            this.Manager.Comment("reaching state \'S349\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp192;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp192 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S357\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp192, "return of Release, state S357");
                            this.Manager.Comment("reaching state \'S365\'");
                            goto label3;
                        }
                        if ((temp217 == 1)) {
                            this.Manager.Comment("reaching state \'S110\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp193;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                            temp193 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S118\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp193, "return of SynchronizationUploadState, state S118");
                            this.Manager.Comment("reaching state \'S126\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp194;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                            temp194 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                            this.Manager.Comment("reaching state \'S134\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp194, "return of SynchronizationUploadState, state S134");
                            this.Manager.Comment("reaching state \'S142\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp195;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                            temp195 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                            this.Manager.Comment("reaching state \'S150\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp195, "return of SynchronizationUploadState, state S150");
                            this.Manager.Comment("reaching state \'S158\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp196;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                            temp196 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                            this.Manager.Comment("reaching state \'S166\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp196, "return of SynchronizationUploadState, state S166");
                            this.Manager.Comment("reaching state \'S174\'");
                            int temp197;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp198;
                            bool temp199;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp200;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp200 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp197, out temp198, out temp199);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S182\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                    "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                    "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                                    "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                                    "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                                    "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                                    "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                                    "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                                    "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                                    "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                                    "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                                    "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                                    "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                                    "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                                    "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                                    "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                                    "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                                    "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                                    "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                                    "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                                    "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                                    "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                                    "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                                    "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                                    "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                                    "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                                    "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                    "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                    "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                    "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                    "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                                    "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                                    "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                                    "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                                    "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                                    "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                                    "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                                    ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp197, "transferBufferIndex of FastTransferSourceGetBuffer, state S182");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                        "IsProgressPerMessagePresent",
                                                                                        "FollowedFAIMessage",
                                                                                        "IsMessageChangeFull",
                                                                                        "IsPidTagMidExist",
                                                                                        "IsPidTagMessageSizeExist",
                                                                                        "IsPidTagChangeNumberExist",
                                                                                        "MessageIdIndex",
                                                                                        "IsRTFformat"}, new object[] {
                                                                                        false,
                                                                                        false,
                                                                                        true,
                                                                                        true,
                                                                                        false,
                                                                                        false,
                                                                                        3,
                                                                                        false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    4,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    1,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        true,
                                                        true}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp198, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S182");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp199, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S182");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp200, "return of FastTransferSourceGetBuffer, state S182");
                            this.Manager.Comment("reaching state \'S190\'");
                            int temp201;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp202;
                            this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                            temp202 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp201);
                            this.Manager.Checkpoint("MS-OXCFXICS_R778");
                            this.Manager.Checkpoint("MS-OXCFXICS_R769");
                            this.Manager.Comment("reaching state \'S198\'");
                            this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp201, "synchronizationHandleIndex of SynchronizationOpenCollector, state S198");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp202, "return of SynchronizationOpenCollector, state S198");
                            this.Manager.Comment("reaching state \'S206\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp203;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                            temp203 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        3,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S214\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp203, "return of SynchronizationImportDeletes, state S214");
                            this.Manager.Comment("reaching state \'S222\'");
                            int temp204;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp205;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                            temp205 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp204);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S230\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp204, "downloadcontextHandleIndex of SynchronizationConfigure, state S230");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp205, "return of SynchronizationConfigure, state S230");
                            this.Manager.Comment("reaching state \'S238\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp206;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                            temp206 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S246\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp206, "return of SynchronizationUploadState, state S246");
                            this.Manager.Comment("reaching state \'S254\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp207;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                            temp207 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S262\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp207, "return of SynchronizationUploadState, state S262");
                            this.Manager.Comment("reaching state \'S270\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp208;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                            temp208 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S278\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp208, "return of SynchronizationUploadState, state S278");
                            this.Manager.Comment("reaching state \'S286\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp209;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                            temp209 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S294\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp209, "return of SynchronizationUploadState, state S294");
                            this.Manager.Comment("reaching state \'S302\'");
                            int temp210;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp211;
                            bool temp212;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp213;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp213 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp210, out temp211, out temp212);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S310\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp210, "transferBufferIndex of FastTransferSourceGetBuffer, state S310");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp211, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S310");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp212, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S310");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp213, "return of FastTransferSourceGetBuffer, state S310");
                            this.Manager.Comment("reaching state \'S318\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp214;
                            this.Manager.Comment("executing step \'call GetPropertiesSpecific(1,3,[\"PidTagChangeNumber\",\"PidTagDelet" +
                                    "edCountTotal\"])\'");
                            temp214 = this.IMS_OXCFXICSAdapterInstance.GetPropertiesSpecific(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagChangeNumber",
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagDeletedCountTotal",
                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                            this.Manager.Comment("reaching state \'S326\'");
                            this.Manager.Comment("checking step \'return GetPropertiesSpecific/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp214, "return of GetPropertiesSpecific, state S326");
                            this.Manager.Comment("reaching state \'S334\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp215;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp215 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S342\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp215, "return of Release, state S342");
                            this.Manager.Comment("reaching state \'S350\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp216;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp216 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S358\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp216, "return of Release, state S358");
                            this.Manager.Comment("reaching state \'S366\'");
                            goto label3;
                        }
                        throw new InvalidOperationException("never reached");
                    label3:
;
                        goto label5;
                    }
                    if ((temp289 == 1)) {
                        this.Manager.Comment("reaching state \'S12\'");
                        this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                        this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                        this.Manager.Comment("reaching state \'S16\'");
                        this.Manager.Comment("checking step \'return Connect\'");
                        this.Manager.Comment("reaching state \'S20\'");
                        int temp218;
                        int temp219;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp220;
                        this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                        temp220 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp218, out temp219);
                        this.Manager.Comment("reaching state \'S24\'");
                        this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp218, "logonHandleIndex of Logon, state S24");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp219, "inboxFolderIdIndex of Logon, state S24");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp220, "return of Logon, state S24");
                        this.Manager.Comment("reaching state \'S28\'");
                        int temp221;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp222;
                        this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                        temp222 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp221);
                        this.Manager.Comment("reaching state \'S32\'");
                        this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp221, "folderHandleIndex of OpenFolder, state S32");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp222, "return of OpenFolder, state S32");
                        this.Manager.Comment("reaching state \'S36\'");
                        int temp223;
                        int temp224;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp225;
                        this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                        temp225 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp223, out temp224);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                        this.Manager.Comment("reaching state \'S40\'");
                        this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp223, "folderIdIndex of CreateFolder, state S40");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp224, "folderHandleIndex of CreateFolder, state S40");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp225, "return of CreateFolder, state S40");
                        this.Manager.Comment("reaching state \'S44\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp226;
                        this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                        temp226 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                        this.Manager.Checkpoint("MS-OXCFXICS_R925");
                        this.Manager.Comment("reaching state \'S48\'");
                        this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp226, "return of GetLocalReplicaIds, state S48");
                        this.Manager.Comment("reaching state \'S52\'");
                        int temp227;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp228;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                        temp228 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp227);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S56\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp227, "synchronizationHandleIndex of SynchronizationOpenCollector, state S56");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp228, "return of SynchronizationOpenCollector, state S56");
                        this.Manager.Comment("reaching state \'S60\'");
                        int temp229;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp230;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                        temp230 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp229);
                        this.Manager.Checkpoint("MS-OXCFXICS_R814");
                        this.Manager.Checkpoint("MS-OXCFXICS_R805");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R782");
                        this.Manager.Comment("reaching state \'S64\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp229, "importMessageHandleIndex of SynchronizationImportMessageChange, state S64");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp230, "return of SynchronizationImportMessageChange, state S64");
                        this.Manager.Comment("reaching state \'S68\'");
                        int temp231;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp232;
                        this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                        temp232 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp231);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                        this.Manager.Comment("reaching state \'S72\'");
                        this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp231, "messageIdIndex of SaveChangesMessage, state S72");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp232, "return of SaveChangesMessage, state S72");
                        this.Manager.Comment("reaching state \'S76\'");
                        int temp233;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp234;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                        temp234 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp233);
                        this.Manager.Checkpoint("MS-OXCFXICS_R814");
                        this.Manager.Checkpoint("MS-OXCFXICS_R805");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R782");
                        this.Manager.Comment("reaching state \'S80\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp233, "importMessageHandleIndex of SynchronizationImportMessageChange, state S80");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp234, "return of SynchronizationImportMessageChange, state S80");
                        this.Manager.Comment("reaching state \'S84\'");
                        int temp235;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp236;
                        this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                        temp236 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp235);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                        this.Manager.Comment("reaching state \'S88\'");
                        this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp235, "messageIdIndex of SaveChangesMessage, state S88");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp236, "return of SaveChangesMessage, state S88");
                        this.Manager.Comment("reaching state \'S92\'");
                        int temp237;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp238;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp238 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp237);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S96\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp237, "downloadcontextHandleIndex of SynchronizationConfigure, state S96");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp238, "return of SynchronizationConfigure, state S96");
                        this.Manager.Comment("reaching state \'S100\'");
                        bool temp239;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp239);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp239);
                        this.Manager.Comment("reaching state \'S104\'");
                        int temp288 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsFolderChangeNum_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker13)));
                        if ((temp288 == 0)) {
                            this.Manager.Comment("reaching state \'S111\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp240;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                            temp240 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                            this.Manager.Comment("reaching state \'S119\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp240, "return of SynchronizationUploadState, state S119");
                            this.Manager.Comment("reaching state \'S127\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp241;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                            temp241 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                            this.Manager.Comment("reaching state \'S135\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp241, "return of SynchronizationUploadState, state S135");
                            this.Manager.Comment("reaching state \'S143\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp242;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                            temp242 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                            this.Manager.Comment("reaching state \'S151\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp242, "return of SynchronizationUploadState, state S151");
                            this.Manager.Comment("reaching state \'S159\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp243;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                            temp243 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                            this.Manager.Comment("reaching state \'S167\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp243, "return of SynchronizationUploadState, state S167");
                            this.Manager.Comment("reaching state \'S175\'");
                            int temp244;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp245;
                            bool temp246;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp247;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp247 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp244, out temp245, out temp246);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S183\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                    "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                    "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                                    "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                                    "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                                    "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                                    "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                                    "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                                    "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                                    "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                                    "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                                    "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                                    "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                                    "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                                    "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                                    "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                                    "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                                    "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                                    "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                                    "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                                    "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                                    "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                                    "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                                    "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                                    "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                                    "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                                    "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                    "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                    "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                    "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                    "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                                    "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                                    "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                                    "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                                    "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                                    "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                                    "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                                    ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp244, "transferBufferIndex of FastTransferSourceGetBuffer, state S183");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                        "IsProgressPerMessagePresent",
                                                                                        "FollowedFAIMessage",
                                                                                        "IsMessageChangeFull",
                                                                                        "IsPidTagMidExist",
                                                                                        "IsPidTagMessageSizeExist",
                                                                                        "IsPidTagChangeNumberExist",
                                                                                        "MessageIdIndex",
                                                                                        "IsRTFformat"}, new object[] {
                                                                                        false,
                                                                                        false,
                                                                                        true,
                                                                                        true,
                                                                                        false,
                                                                                        false,
                                                                                        3,
                                                                                        false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    4,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    1,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        true,
                                                        true}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp245, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S183");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp246, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S183");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp247, "return of FastTransferSourceGetBuffer, state S183");
                            this.Manager.Comment("reaching state \'S191\'");
                            int temp248;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp249;
                            this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                            temp249 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp248);
                            this.Manager.Checkpoint("MS-OXCFXICS_R778");
                            this.Manager.Checkpoint("MS-OXCFXICS_R769");
                            this.Manager.Comment("reaching state \'S199\'");
                            this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp248, "synchronizationHandleIndex of SynchronizationOpenCollector, state S199");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp249, "return of SynchronizationOpenCollector, state S199");
                            this.Manager.Comment("reaching state \'S207\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp250;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                            temp250 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        3,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S215\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp250, "return of SynchronizationImportDeletes, state S215");
                            this.Manager.Comment("reaching state \'S223\'");
                            int temp251;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp252;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                            temp252 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp251);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S231\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp251, "downloadcontextHandleIndex of SynchronizationConfigure, state S231");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp252, "return of SynchronizationConfigure, state S231");
                            this.Manager.Comment("reaching state \'S239\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp253;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                            temp253 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Comment("reaching state \'S247\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp253, "return of SynchronizationUploadState, state S247");
                            this.Manager.Comment("reaching state \'S255\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp254;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                            temp254 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S263\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp254, "return of SynchronizationUploadState, state S263");
                            this.Manager.Comment("reaching state \'S271\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp255;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                            temp255 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S279\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp255, "return of SynchronizationUploadState, state S279");
                            this.Manager.Comment("reaching state \'S287\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp256;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                            temp256 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S295\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp256, "return of SynchronizationUploadState, state S295");
                            this.Manager.Comment("reaching state \'S303\'");
                            int temp257;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp258;
                            bool temp259;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp260;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp260 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp257, out temp258, out temp259);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S311\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp257, "transferBufferIndex of FastTransferSourceGetBuffer, state S311");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp258, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S311");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp259, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S311");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp260, "return of FastTransferSourceGetBuffer, state S311");
                            this.Manager.Comment("reaching state \'S319\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp261;
                            this.Manager.Comment("executing step \'call GetPropertiesSpecific(1,3,[\"PidTagChangeNumber\",\"PidTagDelet" +
                                    "edCountTotal\"])\'");
                            temp261 = this.IMS_OXCFXICSAdapterInstance.GetPropertiesSpecific(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagChangeNumber",
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagDeletedCountTotal",
                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                            this.Manager.Comment("reaching state \'S327\'");
                            this.Manager.Comment("checking step \'return GetPropertiesSpecific/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp261, "return of GetPropertiesSpecific, state S327");
                            this.Manager.Comment("reaching state \'S335\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp262;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp262 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S343\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp262, "return of Release, state S343");
                            this.Manager.Comment("reaching state \'S351\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp263;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp263 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S359\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp263, "return of Release, state S359");
                            this.Manager.Comment("reaching state \'S367\'");
                            goto label4;
                        }
                        if ((temp288 == 1)) {
                            this.Manager.Comment("reaching state \'S112\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp264;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                            temp264 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S120\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp264, "return of SynchronizationUploadState, state S120");
                            this.Manager.Comment("reaching state \'S128\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp265;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                            temp265 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                            this.Manager.Comment("reaching state \'S136\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp265, "return of SynchronizationUploadState, state S136");
                            this.Manager.Comment("reaching state \'S144\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp266;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                            temp266 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                            this.Manager.Comment("reaching state \'S152\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp266, "return of SynchronizationUploadState, state S152");
                            this.Manager.Comment("reaching state \'S160\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp267;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                            temp267 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                            this.Manager.Comment("reaching state \'S168\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp267, "return of SynchronizationUploadState, state S168");
                            this.Manager.Comment("reaching state \'S176\'");
                            int temp268;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp269;
                            bool temp270;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp271;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp271 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp268, out temp269, out temp270);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                            this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S184\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                    "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                    "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                                    "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                                    "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                                    "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                                    "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                                    "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                                    "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                                    "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                                    "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                                    "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                                    "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                                    "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                                    "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                                    "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                                    "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                                    "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                                    "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                                    "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                                    "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                                    "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                                    "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                                    "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                                    "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                                    "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                                    "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                    "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                    "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                    "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                    "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                                    "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                                    "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                                    "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                                    "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                                    "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                                    "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                                    ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp268, "transferBufferIndex of FastTransferSourceGetBuffer, state S184");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                        "IsProgressPerMessagePresent",
                                                                                        "FollowedFAIMessage",
                                                                                        "IsMessageChangeFull",
                                                                                        "IsPidTagMidExist",
                                                                                        "IsPidTagMessageSizeExist",
                                                                                        "IsPidTagChangeNumberExist",
                                                                                        "MessageIdIndex",
                                                                                        "IsRTFformat"}, new object[] {
                                                                                        false,
                                                                                        false,
                                                                                        true,
                                                                                        true,
                                                                                        false,
                                                                                        false,
                                                                                        3,
                                                                                        false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    4,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    1,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        true,
                                                        true}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp269, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S184");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp270, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S184");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp271, "return of FastTransferSourceGetBuffer, state S184");
                            this.Manager.Comment("reaching state \'S192\'");
                            int temp272;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp273;
                            this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                            temp273 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp272);
                            this.Manager.Checkpoint("MS-OXCFXICS_R778");
                            this.Manager.Checkpoint("MS-OXCFXICS_R769");
                            this.Manager.Comment("reaching state \'S200\'");
                            this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp272, "synchronizationHandleIndex of SynchronizationOpenCollector, state S200");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp273, "return of SynchronizationOpenCollector, state S200");
                            this.Manager.Comment("reaching state \'S208\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp274;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                            temp274 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        3,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S216\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp274, "return of SynchronizationImportDeletes, state S216");
                            this.Manager.Comment("reaching state \'S224\'");
                            int temp275;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp276;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                            temp276 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp275);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S232\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp275, "downloadcontextHandleIndex of SynchronizationConfigure, state S232");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp276, "return of SynchronizationConfigure, state S232");
                            this.Manager.Comment("reaching state \'S240\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp277;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                            temp277 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S248\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp277, "return of SynchronizationUploadState, state S248");
                            this.Manager.Comment("reaching state \'S256\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp278;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                            temp278 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S264\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp278, "return of SynchronizationUploadState, state S264");
                            this.Manager.Comment("reaching state \'S272\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp279;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                            temp279 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S280\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp279, "return of SynchronizationUploadState, state S280");
                            this.Manager.Comment("reaching state \'S288\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp280;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                            temp280 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S296\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp280, "return of SynchronizationUploadState, state S296");
                            this.Manager.Comment("reaching state \'S304\'");
                            int temp281;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp282;
                            bool temp283;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp284;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp284 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp281, out temp282, out temp283);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S312\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp281, "transferBufferIndex of FastTransferSourceGetBuffer, state S312");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp282, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S312");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp283, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S312");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp284, "return of FastTransferSourceGetBuffer, state S312");
                            this.Manager.Comment("reaching state \'S320\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp285;
                            this.Manager.Comment("executing step \'call GetPropertiesSpecific(1,3,[\"PidTagChangeNumber\",\"PidTagDelet" +
                                    "edCountTotal\"])\'");
                            temp285 = this.IMS_OXCFXICSAdapterInstance.GetPropertiesSpecific(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagChangeNumber",
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagDeletedCountTotal",
                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                            this.Manager.Comment("reaching state \'S328\'");
                            this.Manager.Comment("checking step \'return GetPropertiesSpecific/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp285, "return of GetPropertiesSpecific, state S328");
                            this.Manager.Comment("reaching state \'S336\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp286;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp286 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S344\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp286, "return of Release, state S344");
                            this.Manager.Comment("reaching state \'S352\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp287;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp287 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S360\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp287, "return of Release, state S360");
                            this.Manager.Comment("reaching state \'S368\'");
                            goto label4;
                        }
                        throw new InvalidOperationException("never reached");
                    label4:
;
                        goto label5;
                    }
                    throw new InvalidOperationException("never reached");
                label5:
;
                    goto label6;
                }
                throw new InvalidOperationException("never reached");
            label6:
;
                goto label7;
            }
            if ((temp291 == 1)) {
                this.Manager.Comment("reaching state \'S3\'");
                goto label7;
            }
            throw new InvalidOperationException("never reached");
        label7:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S4");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S7");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S102");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S102");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S7");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S101");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S101");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S4");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S8");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S103");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S103");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S8");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S104");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S104");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFolderChangeNum_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}