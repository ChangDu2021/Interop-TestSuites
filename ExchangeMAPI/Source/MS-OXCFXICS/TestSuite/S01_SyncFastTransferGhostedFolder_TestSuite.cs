//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S01_SyncFastTransferGhostedFolder_TestSuite : PtfTestClassBase {
        
        public S01_SyncFastTransferGhostedFolder_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckSecondSUTOnlineDelegate1(bool isSecondSUTOnline);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckSecondSUTOnlineInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckSecondSUTOnline", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp37 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferGhostedFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferGhostedFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp37 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                bool temp1;
                this.Manager.Comment("executing step \'call CheckSecondSUTOnline(out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckSecondSUTOnline(out temp1);
                this.Manager.AddReturn(CheckSecondSUTOnlineInfo, null, temp1);
                this.Manager.Comment("reaching state \'S4\'");
                int temp36 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferGhostedFolder_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckSecondSUTOnlineChecker)), new ExpectedReturn(S01_SyncFastTransferGhostedFolder_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckSecondSUTOnlineChecker1)));
                if ((temp36 == 0)) {
                    S01_SyncFastTransferGhostedFolder_TestSuiteS3();
                    goto label1;
                }
                if ((temp36 == 1)) {
                    this.Manager.Comment("reaching state \'S5\'");
                    bool temp2;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(1111,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1111, out temp2);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2);
                    this.Manager.Comment("reaching state \'S6\'");
                    int temp35 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferGhostedFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferGhostedFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckRequirementEnabledChecker1)));
                    if ((temp35 == 0)) {
                        this.Manager.Comment("reaching state \'S7\'");
                        this.Manager.Comment("executing step \'call Connect(1,PublicFolderServer)\'");
                        this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(0)));
                        this.Manager.Comment("reaching state \'S9\'");
                        this.Manager.Comment("checking step \'return Connect\'");
                        this.Manager.Comment("reaching state \'S11\'");
                        int temp3;
                        int temp4;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                        this.Manager.Comment("executing step \'call Logon(1,Ghosted,out _,out _)\'");
                        temp5 = this.IMS_OXCFXICSAdapterInstance.Logon(1, Microsoft.Protocols.TestSuites.Common.LogonFlags.Ghosted, out temp3, out temp4);
                        this.Manager.Comment("reaching state \'S13\'");
                        this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp3, "logonHandleIndex of Logon, state S13");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp4, "inboxFolderIdIndex of Logon, state S13");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of Logon, state S13");
                        this.Manager.Comment("reaching state \'S15\'");
                        int temp6;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp7;
                        this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                        temp7 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp6);
                        this.Manager.Comment("reaching state \'S17\'");
                        this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderHandleIndex of OpenFolder, state S17");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp7, "return of OpenFolder, state S17");
                        this.Manager.Comment("reaching state \'S19\'");
                        int temp8;
                        int temp9;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp10;
                        this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                        temp10 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp8, out temp9);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                        this.Manager.Comment("reaching state \'S21\'");
                        this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp8, "folderIdIndex of CreateFolder, state S21");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "folderHandleIndex of CreateFolder, state S21");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp10, "return of CreateFolder, state S21");
                        this.Manager.Comment("reaching state \'S23\'");
                        int temp11;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp12;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,CopySubfolders,Unicode,out " +
                                "_)\'");
                        temp12 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), out temp11);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S25\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp11, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S25");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp12, "return of FastTransferSourceCopyFolder, state S25");
                        this.Manager.Comment("reaching state \'S27\'");
                        int temp13;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp14;
                        bool temp15;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp16;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Normal,out _,out _,out _)\'");
                        temp16 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp13, out temp14, out temp15);
                        this.Manager.Checkpoint("MS-OXCFXICS_R511");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S29\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                                "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                                "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                                "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                                "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                                "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                                "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                                "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                                "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                                "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                                "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                                "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                                "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                                "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                                "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                                "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                                "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                                "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                                "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                                "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                                ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                                "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                                "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNo" +
                                "tOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=F" +
                                "alse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDe" +
                                "lProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessag" +
                                "e=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                                "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                                "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                                "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                                "alse,IsRTFFormat=False))))),SubFolderInScope=True),AbstractState=AbstractState(A" +
                                "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                "ut False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp13, "transferBufferIndex of FastTransferSourceGetBuffer, state S29");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    true}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp14, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S29");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp15, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S29");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp16, "return of FastTransferSourceGetBuffer, state S29");
                        this.Manager.Comment("reaching state \'S31\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                        this.Manager.Comment("executing step \'call DeleteFolder(1,2,2)\'");
                        temp17 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 2, 2);
                        this.Manager.Comment("reaching state \'S33\'");
                        this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of DeleteFolder, state S33");
                        this.Manager.Comment("reaching state \'S35\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp18 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S37\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp18, "return of Release, state S37");
                        this.Manager.Comment("reaching state \'S39\'");
                        goto label0;
                    }
                    if ((temp35 == 1)) {
                        this.Manager.Comment("reaching state \'S8\'");
                        this.Manager.Comment("executing step \'call Connect(1,PublicFolderServer)\'");
                        this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(0)));
                        this.Manager.Comment("reaching state \'S10\'");
                        this.Manager.Comment("checking step \'return Connect\'");
                        this.Manager.Comment("reaching state \'S12\'");
                        int temp19;
                        int temp20;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                        this.Manager.Comment("executing step \'call Logon(1,Ghosted,out _,out _)\'");
                        temp21 = this.IMS_OXCFXICSAdapterInstance.Logon(1, Microsoft.Protocols.TestSuites.Common.LogonFlags.Ghosted, out temp19, out temp20);
                        this.Manager.Comment("reaching state \'S14\'");
                        this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp19, "logonHandleIndex of Logon, state S14");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp20, "inboxFolderIdIndex of Logon, state S14");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of Logon, state S14");
                        this.Manager.Comment("reaching state \'S16\'");
                        int temp22;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                        this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                        temp23 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp22);
                        this.Manager.Comment("reaching state \'S18\'");
                        this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp22, "folderHandleIndex of OpenFolder, state S18");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of OpenFolder, state S18");
                        this.Manager.Comment("reaching state \'S20\'");
                        int temp24;
                        int temp25;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                        this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                        temp26 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp24, out temp25);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                        this.Manager.Comment("reaching state \'S22\'");
                        this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp24, "folderIdIndex of CreateFolder, state S22");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp25, "folderHandleIndex of CreateFolder, state S22");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of CreateFolder, state S22");
                        this.Manager.Comment("reaching state \'S24\'");
                        int temp27;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,CopySubfolders,Unicode,out " +
                                "_)\'");
                        temp28 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), out temp27);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S26\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp27, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S26");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of FastTransferSourceCopyFolder, state S26");
                        this.Manager.Comment("reaching state \'S28\'");
                        int temp29;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp30;
                        bool temp31;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Normal,out _,out _,out _)\'");
                        temp32 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp29, out temp30, out temp31);
                        this.Manager.Checkpoint("MS-OXCFXICS_R511");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1111");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S30\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                                "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                                "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                                "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                                "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                                "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                                "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                                "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                                "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                                "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                                "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                                "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                                "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                                "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                                "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                                "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                                "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                                "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                                "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                                "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                                ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                                "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                                "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=True,IsFolderContentNot" +
                                "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))))),SubFolderInScope=True),AbstractState=AbstractState(Ab" +
                                "stractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,I" +
                                "sNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fa" +
                                "lse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                "e,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOu" +
                                "t=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermi" +
                                "ssionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPr" +
                                "ecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPr" +
                                "opertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperties" +
                                "InOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),ou" +
                                "t False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp29, "transferBufferIndex of FastTransferSourceGetBuffer, state S30");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                true,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    true}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp30, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S30");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp31, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S30");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of FastTransferSourceGetBuffer, state S30");
                        this.Manager.Comment("reaching state \'S32\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                        this.Manager.Comment("executing step \'call DeleteFolder(1,2,2)\'");
                        temp33 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 2, 2);
                        this.Manager.Comment("reaching state \'S34\'");
                        this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of DeleteFolder, state S34");
                        this.Manager.Comment("reaching state \'S36\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp34 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S38\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of Release, state S38");
                        this.Manager.Comment("reaching state \'S40\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label1;
                }
                throw new InvalidOperationException("never reached");
            label1:
;
                goto label2;
            }
            if ((temp37 == 1)) {
                S01_SyncFastTransferGhostedFolder_TestSuiteS3();
                goto label2;
            }
            throw new InvalidOperationException("never reached");
        label2:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckSecondSUTOnlineChecker(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S4");
        }
        
        private void S01_SyncFastTransferGhostedFolder_TestSuiteS3() {
            this.Manager.Comment("reaching state \'S3\'");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckSecondSUTOnlineChecker1(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S4");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S6");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S6");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferGhostedFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}