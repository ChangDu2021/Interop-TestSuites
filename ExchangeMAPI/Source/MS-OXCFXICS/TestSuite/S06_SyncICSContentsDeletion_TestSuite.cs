//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S06_SyncICSContentsDeletion_TestSuite : PtfTestClassBase {
        
        public S06_SyncICSContentsDeletion_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp132 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp132 == 0)) {
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S40\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S48");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S48");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S48");
                this.Manager.Comment("reaching state \'S56\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S64\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S64");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S64");
                this.Manager.Comment("reaching state \'S72\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S80");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S80");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S80");
                this.Manager.Comment("reaching state \'S88\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp9 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S96\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of GetLocalReplicaIds, state S96");
                this.Manager.Comment("reaching state \'S104\'");
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S112\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "synchronizationHandleIndex of SynchronizationOpenCollector, state S112");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of SynchronizationOpenCollector, state S112");
                this.Manager.Comment("reaching state \'S120\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S128\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp12, "importMessageHandleIndex of SynchronizationImportMessageChange, state S128");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of SynchronizationImportMessageChange, state S128");
                this.Manager.Comment("reaching state \'S136\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S144\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp14, "messageIdIndex of SaveChangesMessage, state S144");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SaveChangesMessage, state S144");
                this.Manager.Comment("reaching state \'S152\'");
                int temp16;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp17 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp16);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S160\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp16, "importMessageHandleIndex of SynchronizationImportMessageChange, state S160");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of SynchronizationImportMessageChange, state S160");
                this.Manager.Comment("reaching state \'S168\'");
                int temp18;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp19 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp18);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S176\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp18, "messageIdIndex of SaveChangesMessage, state S176");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp19, "return of SaveChangesMessage, state S176");
                this.Manager.Comment("reaching state \'S184\'");
                int temp20;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                        "CreationTime\"],out _)\'");
                temp21 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp20);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S192\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp20, "downloadcontextHandleIndex of SynchronizationConfigure, state S192");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of SynchronizationConfigure, state S192");
                this.Manager.Comment("reaching state \'S200\'");
                bool temp22;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp22);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp22);
                this.Manager.Comment("reaching state \'S208\'");
                int temp131 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker7)));
                if ((temp131 == 0)) {
                    this.Manager.Comment("reaching state \'S216\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp23 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S232\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp23, "return of SynchronizationUploadState, state S232");
                    this.Manager.Comment("reaching state \'S248\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp24 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S264\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of SynchronizationUploadState, state S264");
                    this.Manager.Comment("reaching state \'S280\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp25 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S296\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of SynchronizationUploadState, state S296");
                    this.Manager.Comment("reaching state \'S312\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp26 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S328\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of SynchronizationUploadState, state S328");
                    this.Manager.Comment("reaching state \'S344\'");
                    int temp27;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp28;
                    bool temp29;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp30 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp27, out temp28, out temp29);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S360\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp27, "transferBufferIndex of FastTransferSourceGetBuffer, state S360");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp28, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S360");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp29, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S360");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp30, "return of FastTransferSourceGetBuffer, state S360");
                    this.Manager.Comment("reaching state \'S376\'");
                    int temp31;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp32 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp31);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S392\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp31, "synchronizationHandleIndex of SynchronizationOpenCollector, state S392");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of SynchronizationOpenCollector, state S392");
                    this.Manager.Comment("reaching state \'S408\'");
                    bool temp33;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp33);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp33);
                    this.Manager.Comment("reaching state \'S424\'");
                    int temp76 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker4)));
                    if ((temp76 == 0)) {
                        this.Manager.Comment("reaching state \'S440\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp34 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S472\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of SynchronizationImportDeletes, state S472");
                        this.Manager.Comment("reaching state \'S504\'");
                        int temp35;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp36;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp36 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp35);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S536\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp35, "downloadcontextHandleIndex of SynchronizationConfigure, state S536");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp36, "return of SynchronizationConfigure, state S536");
                        this.Manager.Comment("reaching state \'S568\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp37 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S600\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp37, "return of SynchronizationUploadState, state S600");
                        this.Manager.Comment("reaching state \'S632\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp38 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S664\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp38, "return of SynchronizationUploadState, state S664");
                        this.Manager.Comment("reaching state \'S696\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp39 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S728\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of SynchronizationUploadState, state S728");
                        this.Manager.Comment("reaching state \'S760\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp40;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp40 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S792\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp40, "return of SynchronizationUploadState, state S792");
                        this.Manager.Comment("reaching state \'S824\'");
                        bool temp41;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp41);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp41);
                        this.Manager.Comment("reaching state \'S856\'");
                        int temp54 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker3)));
                        if ((temp54 == 0)) {
                            this.Manager.Comment("reaching state \'S888\'");
                            int temp42;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp43;
                            bool temp44;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp45 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp42, out temp43, out temp44);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S952\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp42, "transferBufferIndex of FastTransferSourceGetBuffer, state S952");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp43, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S952");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp44, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S952");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of FastTransferSourceGetBuffer, state S952");
                            this.Manager.Comment("reaching state \'S1016\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp46 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1080\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of Release, state S1080");
                            this.Manager.Comment("reaching state \'S1144\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp47 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1208\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of Release, state S1208");
                            this.Manager.Comment("reaching state \'S1272\'");
                            goto label0;
                        }
                        if ((temp54 == 1)) {
                            this.Manager.Comment("reaching state \'S889\'");
                            int temp48;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp49;
                            bool temp50;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp51 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp48, out temp49, out temp50);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S953\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp48, "transferBufferIndex of FastTransferSourceGetBuffer, state S953");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp49, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S953");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp50, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S953");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of FastTransferSourceGetBuffer, state S953");
                            this.Manager.Comment("reaching state \'S1017\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp52 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1081\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of Release, state S1081");
                            this.Manager.Comment("reaching state \'S1145\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp53 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1209\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of Release, state S1209");
                            this.Manager.Comment("reaching state \'S1273\'");
                            goto label0;
                        }
                        throw new InvalidOperationException("never reached");
                    label0:
;
                        goto label2;
                    }
                    if ((temp76 == 1)) {
                        this.Manager.Comment("reaching state \'S441\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp55;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp55 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                        this.Manager.Comment("reaching state \'S473\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp55, "return of SynchronizationImportDeletes, state S473");
                        this.Manager.Comment("reaching state \'S505\'");
                        int temp56;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp57 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp56);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S537\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp56, "downloadcontextHandleIndex of SynchronizationConfigure, state S537");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of SynchronizationConfigure, state S537");
                        this.Manager.Comment("reaching state \'S569\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp58;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp58 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S601\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp58, "return of SynchronizationUploadState, state S601");
                        this.Manager.Comment("reaching state \'S633\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp59;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp59 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S665\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp59, "return of SynchronizationUploadState, state S665");
                        this.Manager.Comment("reaching state \'S697\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp60;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp60 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S729\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp60, "return of SynchronizationUploadState, state S729");
                        this.Manager.Comment("reaching state \'S761\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp61 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S793\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp61, "return of SynchronizationUploadState, state S793");
                        this.Manager.Comment("reaching state \'S825\'");
                        bool temp62;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp62);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp62);
                        this.Manager.Comment("reaching state \'S857\'");
                        int temp75 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker6)));
                        if ((temp75 == 0)) {
                            this.Manager.Comment("reaching state \'S890\'");
                            int temp63;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp64;
                            bool temp65;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp66 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp63, out temp64, out temp65);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S954\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp63, "transferBufferIndex of FastTransferSourceGetBuffer, state S954");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp64, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S954");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp65, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S954");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp66, "return of FastTransferSourceGetBuffer, state S954");
                            this.Manager.Comment("reaching state \'S1018\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp67 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1082\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp67, "return of Release, state S1082");
                            this.Manager.Comment("reaching state \'S1146\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp68;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp68 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1210\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp68, "return of Release, state S1210");
                            this.Manager.Comment("reaching state \'S1274\'");
                            goto label1;
                        }
                        if ((temp75 == 1)) {
                            this.Manager.Comment("reaching state \'S891\'");
                            int temp69;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp70;
                            bool temp71;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp72 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp69, out temp70, out temp71);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S955\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp69, "transferBufferIndex of FastTransferSourceGetBuffer, state S955");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp70, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S955");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp71, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S955");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of FastTransferSourceGetBuffer, state S955");
                            this.Manager.Comment("reaching state \'S1019\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp73 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1083\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of Release, state S1083");
                            this.Manager.Comment("reaching state \'S1147\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp74 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1211\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of Release, state S1211");
                            this.Manager.Comment("reaching state \'S1275\'");
                            goto label1;
                        }
                        throw new InvalidOperationException("never reached");
                    label1:
;
                        goto label2;
                    }
                    throw new InvalidOperationException("never reached");
                label2:
;
                    goto label6;
                }
                if ((temp131 == 1)) {
                    this.Manager.Comment("reaching state \'S217\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp77;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp77 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S233\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp77, "return of SynchronizationUploadState, state S233");
                    this.Manager.Comment("reaching state \'S249\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp78;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp78 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S265\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp78, "return of SynchronizationUploadState, state S265");
                    this.Manager.Comment("reaching state \'S281\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp79;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp79 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S297\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp79, "return of SynchronizationUploadState, state S297");
                    this.Manager.Comment("reaching state \'S313\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp80;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp80 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S329\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp80, "return of SynchronizationUploadState, state S329");
                    this.Manager.Comment("reaching state \'S345\'");
                    int temp81;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp82;
                    bool temp83;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp84;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp84 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp81, out temp82, out temp83);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S361\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp81, "transferBufferIndex of FastTransferSourceGetBuffer, state S361");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp82, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S361");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp83, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S361");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp84, "return of FastTransferSourceGetBuffer, state S361");
                    this.Manager.Comment("reaching state \'S377\'");
                    int temp85;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp86;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp86 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp85);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S393\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp85, "synchronizationHandleIndex of SynchronizationOpenCollector, state S393");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp86, "return of SynchronizationOpenCollector, state S393");
                    this.Manager.Comment("reaching state \'S409\'");
                    bool temp87;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp87);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp87);
                    this.Manager.Comment("reaching state \'S425\'");
                    int temp130 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker11)));
                    if ((temp130 == 0)) {
                        this.Manager.Comment("reaching state \'S442\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp88;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp88 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S474\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp88, "return of SynchronizationImportDeletes, state S474");
                        this.Manager.Comment("reaching state \'S506\'");
                        int temp89;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp90;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp90 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp89);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S538\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp89, "downloadcontextHandleIndex of SynchronizationConfigure, state S538");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp90, "return of SynchronizationConfigure, state S538");
                        this.Manager.Comment("reaching state \'S570\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp91 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S602\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of SynchronizationUploadState, state S602");
                        this.Manager.Comment("reaching state \'S634\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp92;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp92 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S666\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp92, "return of SynchronizationUploadState, state S666");
                        this.Manager.Comment("reaching state \'S698\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp93;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp93 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S730\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp93, "return of SynchronizationUploadState, state S730");
                        this.Manager.Comment("reaching state \'S762\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp94;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp94 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S794\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp94, "return of SynchronizationUploadState, state S794");
                        this.Manager.Comment("reaching state \'S826\'");
                        bool temp95;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp95);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp95);
                        this.Manager.Comment("reaching state \'S858\'");
                        int temp108 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker10)));
                        if ((temp108 == 0)) {
                            this.Manager.Comment("reaching state \'S892\'");
                            int temp96;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp97;
                            bool temp98;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp99 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp96, out temp97, out temp98);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S956\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp96, "transferBufferIndex of FastTransferSourceGetBuffer, state S956");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp97, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S956");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp98, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S956");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of FastTransferSourceGetBuffer, state S956");
                            this.Manager.Comment("reaching state \'S1020\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp100;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp100 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1084\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp100, "return of Release, state S1084");
                            this.Manager.Comment("reaching state \'S1148\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp101;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp101 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1212\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp101, "return of Release, state S1212");
                            this.Manager.Comment("reaching state \'S1276\'");
                            goto label3;
                        }
                        if ((temp108 == 1)) {
                            this.Manager.Comment("reaching state \'S893\'");
                            int temp102;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp103;
                            bool temp104;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp105;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp105 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp102, out temp103, out temp104);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S957\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp102, "transferBufferIndex of FastTransferSourceGetBuffer, state S957");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp103, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S957");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp104, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S957");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp105, "return of FastTransferSourceGetBuffer, state S957");
                            this.Manager.Comment("reaching state \'S1021\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp106 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1085\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of Release, state S1085");
                            this.Manager.Comment("reaching state \'S1149\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp107;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp107 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1213\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp107, "return of Release, state S1213");
                            this.Manager.Comment("reaching state \'S1277\'");
                            goto label3;
                        }
                        throw new InvalidOperationException("never reached");
                    label3:
;
                        goto label5;
                    }
                    if ((temp130 == 1)) {
                        this.Manager.Comment("reaching state \'S443\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp109;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp109 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                        this.Manager.Comment("reaching state \'S475\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp109, "return of SynchronizationImportDeletes, state S475");
                        this.Manager.Comment("reaching state \'S507\'");
                        int temp110;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp111;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp111 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp110);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S539\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp110, "downloadcontextHandleIndex of SynchronizationConfigure, state S539");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp111, "return of SynchronizationConfigure, state S539");
                        this.Manager.Comment("reaching state \'S571\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp112 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S603\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of SynchronizationUploadState, state S603");
                        this.Manager.Comment("reaching state \'S635\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp113 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S667\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp113, "return of SynchronizationUploadState, state S667");
                        this.Manager.Comment("reaching state \'S699\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp114;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp114 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S731\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp114, "return of SynchronizationUploadState, state S731");
                        this.Manager.Comment("reaching state \'S763\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp115;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp115 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S795\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp115, "return of SynchronizationUploadState, state S795");
                        this.Manager.Comment("reaching state \'S827\'");
                        bool temp116;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp116);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp116);
                        this.Manager.Comment("reaching state \'S859\'");
                        int temp129 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker13)));
                        if ((temp129 == 0)) {
                            this.Manager.Comment("reaching state \'S894\'");
                            int temp117;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp118;
                            bool temp119;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp120;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp120 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp117, out temp118, out temp119);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S958\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp117, "transferBufferIndex of FastTransferSourceGetBuffer, state S958");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp118, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S958");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp119, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S958");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp120, "return of FastTransferSourceGetBuffer, state S958");
                            this.Manager.Comment("reaching state \'S1022\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp121;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp121 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1086\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp121, "return of Release, state S1086");
                            this.Manager.Comment("reaching state \'S1150\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp122;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp122 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1214\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp122, "return of Release, state S1214");
                            this.Manager.Comment("reaching state \'S1278\'");
                            goto label4;
                        }
                        if ((temp129 == 1)) {
                            this.Manager.Comment("reaching state \'S895\'");
                            int temp123;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp124;
                            bool temp125;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp126;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp126 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp123, out temp124, out temp125);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S959\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp123, "transferBufferIndex of FastTransferSourceGetBuffer, state S959");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp124, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S959");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp125, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S959");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp126, "return of FastTransferSourceGetBuffer, state S959");
                            this.Manager.Comment("reaching state \'S1023\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp127;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp127 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1087\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp127, "return of Release, state S1087");
                            this.Manager.Comment("reaching state \'S1151\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp128;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp128 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1215\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp128, "return of Release, state S1215");
                            this.Manager.Comment("reaching state \'S1279\'");
                            goto label4;
                        }
                        throw new InvalidOperationException("never reached");
                    label4:
;
                        goto label5;
                    }
                    throw new InvalidOperationException("never reached");
                label5:
;
                    goto label6;
                }
                throw new InvalidOperationException("never reached");
            label6:
;
                goto label7;
            }
            if ((temp132 == 1)) {
                this.Manager.Comment("reaching state \'S17\'");
                goto label7;
            }
            throw new InvalidOperationException("never reached");
        label7:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S208");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S424");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S856");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S856");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S424");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S857");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S857");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S208");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S425");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S858");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S858");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S425");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S859");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S859");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S10
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1");
            this.Manager.Comment("reaching state \'S10\'");
            bool temp133;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp133);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp133);
            this.Manager.Comment("reaching state \'S11\'");
            int temp265 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp265 == 0)) {
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S45\'");
                int temp134;
                int temp135;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp136;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp136 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp134, out temp135);
                this.Manager.Comment("reaching state \'S53\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp134, "logonHandleIndex of Logon, state S53");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp135, "inboxFolderIdIndex of Logon, state S53");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp136, "return of Logon, state S53");
                this.Manager.Comment("reaching state \'S61\'");
                int temp137;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp138;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp138 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp137);
                this.Manager.Comment("reaching state \'S69\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp137, "folderHandleIndex of OpenFolder, state S69");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp138, "return of OpenFolder, state S69");
                this.Manager.Comment("reaching state \'S77\'");
                int temp139;
                int temp140;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp141;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp141 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp139, out temp140);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S85\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp139, "folderIdIndex of CreateFolder, state S85");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp140, "folderHandleIndex of CreateFolder, state S85");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp141, "return of CreateFolder, state S85");
                this.Manager.Comment("reaching state \'S93\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp142;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp142 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S101\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp142, "return of GetLocalReplicaIds, state S101");
                this.Manager.Comment("reaching state \'S109\'");
                int temp143;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp144;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp144 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp143);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S117\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp143, "synchronizationHandleIndex of SynchronizationOpenCollector, state S117");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp144, "return of SynchronizationOpenCollector, state S117");
                this.Manager.Comment("reaching state \'S125\'");
                int temp145;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp146;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp146 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp145);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S133\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp145, "importMessageHandleIndex of SynchronizationImportMessageChange, state S133");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp146, "return of SynchronizationImportMessageChange, state S133");
                this.Manager.Comment("reaching state \'S141\'");
                int temp147;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp148;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp148 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp147);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S149\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp147, "messageIdIndex of SaveChangesMessage, state S149");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp148, "return of SaveChangesMessage, state S149");
                this.Manager.Comment("reaching state \'S157\'");
                int temp149;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp150;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp150 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp149);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S165\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp149, "importMessageHandleIndex of SynchronizationImportMessageChange, state S165");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp150, "return of SynchronizationImportMessageChange, state S165");
                this.Manager.Comment("reaching state \'S173\'");
                int temp151;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp152;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp152 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp151);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S181\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp151, "messageIdIndex of SaveChangesMessage, state S181");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp152, "return of SaveChangesMessage, state S181");
                this.Manager.Comment("reaching state \'S189\'");
                int temp153;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp154;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                temp154 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp153);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S197\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp153, "downloadcontextHandleIndex of SynchronizationConfigure, state S197");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp154, "return of SynchronizationConfigure, state S197");
                this.Manager.Comment("reaching state \'S205\'");
                bool temp155;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp155);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp155);
                this.Manager.Comment("reaching state \'S213\'");
                int temp264 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker7)));
                if ((temp264 == 0)) {
                    this.Manager.Comment("reaching state \'S226\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp156;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp156 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S242\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp156, "return of SynchronizationUploadState, state S242");
                    this.Manager.Comment("reaching state \'S258\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp157;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp157 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S274\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp157, "return of SynchronizationUploadState, state S274");
                    this.Manager.Comment("reaching state \'S290\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp158;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp158 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S306\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp158, "return of SynchronizationUploadState, state S306");
                    this.Manager.Comment("reaching state \'S322\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp159;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp159 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S338\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp159, "return of SynchronizationUploadState, state S338");
                    this.Manager.Comment("reaching state \'S354\'");
                    int temp160;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp161;
                    bool temp162;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp163;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp163 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp160, out temp161, out temp162);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S370\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp160, "transferBufferIndex of FastTransferSourceGetBuffer, state S370");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp161, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S370");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp162, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S370");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp163, "return of FastTransferSourceGetBuffer, state S370");
                    this.Manager.Comment("reaching state \'S386\'");
                    int temp164;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp165;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp165 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp164);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S402\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp164, "synchronizationHandleIndex of SynchronizationOpenCollector, state S402");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp165, "return of SynchronizationOpenCollector, state S402");
                    this.Manager.Comment("reaching state \'S418\'");
                    bool temp166;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp166);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp166);
                    this.Manager.Comment("reaching state \'S434\'");
                    int temp209 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker4)));
                    if ((temp209 == 0)) {
                        this.Manager.Comment("reaching state \'S460\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp167 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S492\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of SynchronizationImportDeletes, state S492");
                        this.Manager.Comment("reaching state \'S524\'");
                        int temp168;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp169;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp169 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp168);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S556\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp168, "downloadcontextHandleIndex of SynchronizationConfigure, state S556");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp169, "return of SynchronizationConfigure, state S556");
                        this.Manager.Comment("reaching state \'S588\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp170;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp170 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S620\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp170, "return of SynchronizationUploadState, state S620");
                        this.Manager.Comment("reaching state \'S652\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp171;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp171 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S684\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp171, "return of SynchronizationUploadState, state S684");
                        this.Manager.Comment("reaching state \'S716\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp172;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp172 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S748\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp172, "return of SynchronizationUploadState, state S748");
                        this.Manager.Comment("reaching state \'S780\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp173;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp173 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S812\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp173, "return of SynchronizationUploadState, state S812");
                        this.Manager.Comment("reaching state \'S844\'");
                        bool temp174;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp174);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp174);
                        this.Manager.Comment("reaching state \'S876\'");
                        int temp187 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker3)));
                        if ((temp187 == 0)) {
                            this.Manager.Comment("reaching state \'S928\'");
                            int temp175;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp176;
                            bool temp177;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp178;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp178 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp175, out temp176, out temp177);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S992\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp175, "transferBufferIndex of FastTransferSourceGetBuffer, state S992");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp176, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S992");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp177, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S992");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp178, "return of FastTransferSourceGetBuffer, state S992");
                            this.Manager.Comment("reaching state \'S1056\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp179;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp179 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1120\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp179, "return of Release, state S1120");
                            this.Manager.Comment("reaching state \'S1184\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp180;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp180 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1248\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp180, "return of Release, state S1248");
                            this.Manager.Comment("reaching state \'S1312\'");
                            goto label8;
                        }
                        if ((temp187 == 1)) {
                            this.Manager.Comment("reaching state \'S929\'");
                            int temp181;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp182;
                            bool temp183;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp184;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp184 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp181, out temp182, out temp183);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S993\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp181, "transferBufferIndex of FastTransferSourceGetBuffer, state S993");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp182, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S993");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp183, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S993");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp184, "return of FastTransferSourceGetBuffer, state S993");
                            this.Manager.Comment("reaching state \'S1057\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp185;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp185 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1121\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp185, "return of Release, state S1121");
                            this.Manager.Comment("reaching state \'S1185\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp186;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp186 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1249\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp186, "return of Release, state S1249");
                            this.Manager.Comment("reaching state \'S1313\'");
                            goto label8;
                        }
                        throw new InvalidOperationException("never reached");
                    label8:
;
                        goto label10;
                    }
                    if ((temp209 == 1)) {
                        this.Manager.Comment("reaching state \'S461\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp188;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp188 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                        this.Manager.Comment("reaching state \'S493\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp188, "return of SynchronizationImportDeletes, state S493");
                        this.Manager.Comment("reaching state \'S525\'");
                        int temp189;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp190;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp190 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp189);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S557\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp189, "downloadcontextHandleIndex of SynchronizationConfigure, state S557");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp190, "return of SynchronizationConfigure, state S557");
                        this.Manager.Comment("reaching state \'S589\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp191;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp191 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S621\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp191, "return of SynchronizationUploadState, state S621");
                        this.Manager.Comment("reaching state \'S653\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp192;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp192 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S685\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp192, "return of SynchronizationUploadState, state S685");
                        this.Manager.Comment("reaching state \'S717\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp193;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp193 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S749\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp193, "return of SynchronizationUploadState, state S749");
                        this.Manager.Comment("reaching state \'S781\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp194;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp194 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S813\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp194, "return of SynchronizationUploadState, state S813");
                        this.Manager.Comment("reaching state \'S845\'");
                        bool temp195;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp195);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp195);
                        this.Manager.Comment("reaching state \'S877\'");
                        int temp208 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker6)));
                        if ((temp208 == 0)) {
                            this.Manager.Comment("reaching state \'S930\'");
                            int temp196;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp197;
                            bool temp198;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp199;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp199 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp196, out temp197, out temp198);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S994\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp196, "transferBufferIndex of FastTransferSourceGetBuffer, state S994");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp197, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S994");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp198, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S994");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp199, "return of FastTransferSourceGetBuffer, state S994");
                            this.Manager.Comment("reaching state \'S1058\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp200;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp200 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1122\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp200, "return of Release, state S1122");
                            this.Manager.Comment("reaching state \'S1186\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp201;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp201 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1250\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp201, "return of Release, state S1250");
                            this.Manager.Comment("reaching state \'S1314\'");
                            goto label9;
                        }
                        if ((temp208 == 1)) {
                            this.Manager.Comment("reaching state \'S931\'");
                            int temp202;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp203;
                            bool temp204;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp205;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp205 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp202, out temp203, out temp204);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S995\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp202, "transferBufferIndex of FastTransferSourceGetBuffer, state S995");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp203, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S995");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp204, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S995");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp205, "return of FastTransferSourceGetBuffer, state S995");
                            this.Manager.Comment("reaching state \'S1059\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp206;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp206 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1123\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp206, "return of Release, state S1123");
                            this.Manager.Comment("reaching state \'S1187\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp207;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp207 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1251\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp207, "return of Release, state S1251");
                            this.Manager.Comment("reaching state \'S1315\'");
                            goto label9;
                        }
                        throw new InvalidOperationException("never reached");
                    label9:
;
                        goto label10;
                    }
                    throw new InvalidOperationException("never reached");
                label10:
;
                    goto label14;
                }
                if ((temp264 == 1)) {
                    this.Manager.Comment("reaching state \'S227\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp210;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp210 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S243\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp210, "return of SynchronizationUploadState, state S243");
                    this.Manager.Comment("reaching state \'S259\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp211;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp211 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S275\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp211, "return of SynchronizationUploadState, state S275");
                    this.Manager.Comment("reaching state \'S291\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp212;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp212 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S307\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp212, "return of SynchronizationUploadState, state S307");
                    this.Manager.Comment("reaching state \'S323\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp213;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp213 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S339\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp213, "return of SynchronizationUploadState, state S339");
                    this.Manager.Comment("reaching state \'S355\'");
                    int temp214;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp215;
                    bool temp216;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp217;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp217 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp214, out temp215, out temp216);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S371\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp214, "transferBufferIndex of FastTransferSourceGetBuffer, state S371");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp215, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S371");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp216, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S371");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp217, "return of FastTransferSourceGetBuffer, state S371");
                    this.Manager.Comment("reaching state \'S387\'");
                    int temp218;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp219;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp219 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp218);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S403\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp218, "synchronizationHandleIndex of SynchronizationOpenCollector, state S403");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp219, "return of SynchronizationOpenCollector, state S403");
                    this.Manager.Comment("reaching state \'S419\'");
                    bool temp220;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp220);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp220);
                    this.Manager.Comment("reaching state \'S435\'");
                    int temp263 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker11)));
                    if ((temp263 == 0)) {
                        this.Manager.Comment("reaching state \'S462\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp221;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp221 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S494\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp221, "return of SynchronizationImportDeletes, state S494");
                        this.Manager.Comment("reaching state \'S526\'");
                        int temp222;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp223;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp223 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp222);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S558\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp222, "downloadcontextHandleIndex of SynchronizationConfigure, state S558");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp223, "return of SynchronizationConfigure, state S558");
                        this.Manager.Comment("reaching state \'S590\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp224;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp224 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S622\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp224, "return of SynchronizationUploadState, state S622");
                        this.Manager.Comment("reaching state \'S654\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp225;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp225 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S686\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp225, "return of SynchronizationUploadState, state S686");
                        this.Manager.Comment("reaching state \'S718\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp226;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp226 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S750\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp226, "return of SynchronizationUploadState, state S750");
                        this.Manager.Comment("reaching state \'S782\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp227;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp227 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S814\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp227, "return of SynchronizationUploadState, state S814");
                        this.Manager.Comment("reaching state \'S846\'");
                        bool temp228;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp228);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp228);
                        this.Manager.Comment("reaching state \'S878\'");
                        int temp241 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker10)));
                        if ((temp241 == 0)) {
                            this.Manager.Comment("reaching state \'S932\'");
                            int temp229;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp230;
                            bool temp231;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp232;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp232 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp229, out temp230, out temp231);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S996\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp229, "transferBufferIndex of FastTransferSourceGetBuffer, state S996");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp230, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S996");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp231, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S996");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp232, "return of FastTransferSourceGetBuffer, state S996");
                            this.Manager.Comment("reaching state \'S1060\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp233;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp233 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1124\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp233, "return of Release, state S1124");
                            this.Manager.Comment("reaching state \'S1188\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp234;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp234 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1252\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp234, "return of Release, state S1252");
                            this.Manager.Comment("reaching state \'S1316\'");
                            goto label11;
                        }
                        if ((temp241 == 1)) {
                            this.Manager.Comment("reaching state \'S933\'");
                            int temp235;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp236;
                            bool temp237;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp238;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp238 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp235, out temp236, out temp237);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S997\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp235, "transferBufferIndex of FastTransferSourceGetBuffer, state S997");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp236, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S997");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp237, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S997");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp238, "return of FastTransferSourceGetBuffer, state S997");
                            this.Manager.Comment("reaching state \'S1061\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp239;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp239 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1125\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp239, "return of Release, state S1125");
                            this.Manager.Comment("reaching state \'S1189\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp240;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp240 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1253\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp240, "return of Release, state S1253");
                            this.Manager.Comment("reaching state \'S1317\'");
                            goto label11;
                        }
                        throw new InvalidOperationException("never reached");
                    label11:
;
                        goto label13;
                    }
                    if ((temp263 == 1)) {
                        this.Manager.Comment("reaching state \'S463\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp242;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp242 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                        this.Manager.Comment("reaching state \'S495\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp242, "return of SynchronizationImportDeletes, state S495");
                        this.Manager.Comment("reaching state \'S527\'");
                        int temp243;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp244;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp244 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp243);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S559\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp243, "downloadcontextHandleIndex of SynchronizationConfigure, state S559");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp244, "return of SynchronizationConfigure, state S559");
                        this.Manager.Comment("reaching state \'S591\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp245;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp245 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S623\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp245, "return of SynchronizationUploadState, state S623");
                        this.Manager.Comment("reaching state \'S655\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp246;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp246 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S687\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp246, "return of SynchronizationUploadState, state S687");
                        this.Manager.Comment("reaching state \'S719\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp247;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp247 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S751\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp247, "return of SynchronizationUploadState, state S751");
                        this.Manager.Comment("reaching state \'S783\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp248;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp248 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S815\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp248, "return of SynchronizationUploadState, state S815");
                        this.Manager.Comment("reaching state \'S847\'");
                        bool temp249;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp249);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp249);
                        this.Manager.Comment("reaching state \'S879\'");
                        int temp262 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker13)));
                        if ((temp262 == 0)) {
                            this.Manager.Comment("reaching state \'S934\'");
                            int temp250;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp251;
                            bool temp252;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp253;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp253 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp250, out temp251, out temp252);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S998\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp250, "transferBufferIndex of FastTransferSourceGetBuffer, state S998");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp251, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S998");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp252, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S998");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp253, "return of FastTransferSourceGetBuffer, state S998");
                            this.Manager.Comment("reaching state \'S1062\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp254;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp254 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1126\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp254, "return of Release, state S1126");
                            this.Manager.Comment("reaching state \'S1190\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp255;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp255 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1254\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp255, "return of Release, state S1254");
                            this.Manager.Comment("reaching state \'S1318\'");
                            goto label12;
                        }
                        if ((temp262 == 1)) {
                            this.Manager.Comment("reaching state \'S935\'");
                            int temp256;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp257;
                            bool temp258;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp259;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp259 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp256, out temp257, out temp258);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S999\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp256, "transferBufferIndex of FastTransferSourceGetBuffer, state S999");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp257, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S999");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp258, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S999");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp259, "return of FastTransferSourceGetBuffer, state S999");
                            this.Manager.Comment("reaching state \'S1063\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp260;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp260 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1127\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp260, "return of Release, state S1127");
                            this.Manager.Comment("reaching state \'S1191\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp261;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp261 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1255\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp261, "return of Release, state S1255");
                            this.Manager.Comment("reaching state \'S1319\'");
                            goto label12;
                        }
                        throw new InvalidOperationException("never reached");
                    label12:
;
                        goto label13;
                    }
                    throw new InvalidOperationException("never reached");
                label13:
;
                    goto label14;
                }
                throw new InvalidOperationException("never reached");
            label14:
;
                goto label15;
            }
            if ((temp265 == 1)) {
                this.Manager.Comment("reaching state \'S27\'");
                goto label15;
            }
            throw new InvalidOperationException("never reached");
        label15:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S213");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S434");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S876");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S876");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S434");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S877");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S877");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S213");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S435");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S878");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S878");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S435");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S879");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S879");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        #endregion
        
        #region Test Starting in S12
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2");
            this.Manager.Comment("reaching state \'S12\'");
            bool temp266;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp266);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp266);
            this.Manager.Comment("reaching state \'S13\'");
            int temp398 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp398 == 0)) {
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S46\'");
                int temp267;
                int temp268;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp269;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp269 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp267, out temp268);
                this.Manager.Comment("reaching state \'S54\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp267, "logonHandleIndex of Logon, state S54");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp268, "inboxFolderIdIndex of Logon, state S54");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp269, "return of Logon, state S54");
                this.Manager.Comment("reaching state \'S62\'");
                int temp270;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp271;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp271 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp270);
                this.Manager.Comment("reaching state \'S70\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp270, "folderHandleIndex of OpenFolder, state S70");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp271, "return of OpenFolder, state S70");
                this.Manager.Comment("reaching state \'S78\'");
                int temp272;
                int temp273;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp274;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp274 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp272, out temp273);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S86\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp272, "folderIdIndex of CreateFolder, state S86");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp273, "folderHandleIndex of CreateFolder, state S86");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp274, "return of CreateFolder, state S86");
                this.Manager.Comment("reaching state \'S94\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp275;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp275 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S102\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp275, "return of GetLocalReplicaIds, state S102");
                this.Manager.Comment("reaching state \'S110\'");
                int temp276;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp277;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp277 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp276);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S118\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp276, "synchronizationHandleIndex of SynchronizationOpenCollector, state S118");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp277, "return of SynchronizationOpenCollector, state S118");
                this.Manager.Comment("reaching state \'S126\'");
                int temp278;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp279;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp279 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp278);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S134\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp278, "importMessageHandleIndex of SynchronizationImportMessageChange, state S134");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp279, "return of SynchronizationImportMessageChange, state S134");
                this.Manager.Comment("reaching state \'S142\'");
                int temp280;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp281;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp281 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp280);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S150\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp280, "messageIdIndex of SaveChangesMessage, state S150");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp281, "return of SaveChangesMessage, state S150");
                this.Manager.Comment("reaching state \'S158\'");
                int temp282;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp283;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp283 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp282);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S166\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp282, "importMessageHandleIndex of SynchronizationImportMessageChange, state S166");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp283, "return of SynchronizationImportMessageChange, state S166");
                this.Manager.Comment("reaching state \'S174\'");
                int temp284;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp285;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp285 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp284);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S182\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp284, "messageIdIndex of SaveChangesMessage, state S182");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp285, "return of SaveChangesMessage, state S182");
                this.Manager.Comment("reaching state \'S190\'");
                int temp286;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp287;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                temp287 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp286);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S198\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp286, "downloadcontextHandleIndex of SynchronizationConfigure, state S198");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp287, "return of SynchronizationConfigure, state S198");
                this.Manager.Comment("reaching state \'S206\'");
                bool temp288;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp288);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp288);
                this.Manager.Comment("reaching state \'S214\'");
                int temp397 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker7)));
                if ((temp397 == 0)) {
                    this.Manager.Comment("reaching state \'S228\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp289;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp289 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S244\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp289, "return of SynchronizationUploadState, state S244");
                    this.Manager.Comment("reaching state \'S260\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp290;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp290 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S276\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp290, "return of SynchronizationUploadState, state S276");
                    this.Manager.Comment("reaching state \'S292\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp291;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp291 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S308\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp291, "return of SynchronizationUploadState, state S308");
                    this.Manager.Comment("reaching state \'S324\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp292;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp292 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S340\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp292, "return of SynchronizationUploadState, state S340");
                    this.Manager.Comment("reaching state \'S356\'");
                    int temp293;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp294;
                    bool temp295;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp296;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp296 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp293, out temp294, out temp295);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S372\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp293, "transferBufferIndex of FastTransferSourceGetBuffer, state S372");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp294, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S372");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp295, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S372");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp296, "return of FastTransferSourceGetBuffer, state S372");
                    this.Manager.Comment("reaching state \'S388\'");
                    int temp297;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp298;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp298 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp297);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S404\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp297, "synchronizationHandleIndex of SynchronizationOpenCollector, state S404");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp298, "return of SynchronizationOpenCollector, state S404");
                    this.Manager.Comment("reaching state \'S420\'");
                    bool temp299;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp299);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp299);
                    this.Manager.Comment("reaching state \'S436\'");
                    int temp342 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker4)));
                    if ((temp342 == 0)) {
                        this.Manager.Comment("reaching state \'S464\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp300;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp300 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S496\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp300, "return of SynchronizationImportDeletes, state S496");
                        this.Manager.Comment("reaching state \'S528\'");
                        int temp301;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp302;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp302 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp301);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S560\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp301, "downloadcontextHandleIndex of SynchronizationConfigure, state S560");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp302, "return of SynchronizationConfigure, state S560");
                        this.Manager.Comment("reaching state \'S592\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp303;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp303 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S624\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp303, "return of SynchronizationUploadState, state S624");
                        this.Manager.Comment("reaching state \'S656\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp304;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp304 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S688\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp304, "return of SynchronizationUploadState, state S688");
                        this.Manager.Comment("reaching state \'S720\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp305;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp305 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S752\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp305, "return of SynchronizationUploadState, state S752");
                        this.Manager.Comment("reaching state \'S784\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp306;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp306 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S816\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp306, "return of SynchronizationUploadState, state S816");
                        this.Manager.Comment("reaching state \'S848\'");
                        bool temp307;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp307);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp307);
                        this.Manager.Comment("reaching state \'S880\'");
                        int temp320 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker3)));
                        if ((temp320 == 0)) {
                            this.Manager.Comment("reaching state \'S936\'");
                            int temp308;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp309;
                            bool temp310;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp311;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp311 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp308, out temp309, out temp310);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1000\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp308, "transferBufferIndex of FastTransferSourceGetBuffer, state S1000");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp309, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1000");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp310, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1000");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp311, "return of FastTransferSourceGetBuffer, state S1000");
                            this.Manager.Comment("reaching state \'S1064\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp312;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp312 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1128\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp312, "return of Release, state S1128");
                            this.Manager.Comment("reaching state \'S1192\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp313;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp313 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1256\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp313, "return of Release, state S1256");
                            this.Manager.Comment("reaching state \'S1320\'");
                            goto label16;
                        }
                        if ((temp320 == 1)) {
                            this.Manager.Comment("reaching state \'S937\'");
                            int temp314;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp315;
                            bool temp316;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp317;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp317 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp314, out temp315, out temp316);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1001\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp314, "transferBufferIndex of FastTransferSourceGetBuffer, state S1001");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp315, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1001");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp316, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1001");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp317, "return of FastTransferSourceGetBuffer, state S1001");
                            this.Manager.Comment("reaching state \'S1065\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp318;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp318 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1129\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp318, "return of Release, state S1129");
                            this.Manager.Comment("reaching state \'S1193\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp319;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp319 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1257\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp319, "return of Release, state S1257");
                            this.Manager.Comment("reaching state \'S1321\'");
                            goto label16;
                        }
                        throw new InvalidOperationException("never reached");
                    label16:
;
                        goto label18;
                    }
                    if ((temp342 == 1)) {
                        this.Manager.Comment("reaching state \'S465\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp321;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp321 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S497\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp321, "return of SynchronizationImportDeletes, state S497");
                        this.Manager.Comment("reaching state \'S529\'");
                        int temp322;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp323;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp323 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp322);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S561\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp322, "downloadcontextHandleIndex of SynchronizationConfigure, state S561");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp323, "return of SynchronizationConfigure, state S561");
                        this.Manager.Comment("reaching state \'S593\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp324;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp324 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S625\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp324, "return of SynchronizationUploadState, state S625");
                        this.Manager.Comment("reaching state \'S657\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp325;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp325 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S689\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp325, "return of SynchronizationUploadState, state S689");
                        this.Manager.Comment("reaching state \'S721\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp326;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp326 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S753\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp326, "return of SynchronizationUploadState, state S753");
                        this.Manager.Comment("reaching state \'S785\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp327;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp327 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S817\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp327, "return of SynchronizationUploadState, state S817");
                        this.Manager.Comment("reaching state \'S849\'");
                        bool temp328;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp328);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp328);
                        this.Manager.Comment("reaching state \'S881\'");
                        int temp341 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker6)));
                        if ((temp341 == 0)) {
                            this.Manager.Comment("reaching state \'S938\'");
                            int temp329;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp330;
                            bool temp331;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp332;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp332 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp329, out temp330, out temp331);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1002\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp329, "transferBufferIndex of FastTransferSourceGetBuffer, state S1002");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp330, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1002");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp331, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1002");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp332, "return of FastTransferSourceGetBuffer, state S1002");
                            this.Manager.Comment("reaching state \'S1066\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp333;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp333 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1130\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp333, "return of Release, state S1130");
                            this.Manager.Comment("reaching state \'S1194\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp334;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp334 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1258\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp334, "return of Release, state S1258");
                            this.Manager.Comment("reaching state \'S1322\'");
                            goto label17;
                        }
                        if ((temp341 == 1)) {
                            this.Manager.Comment("reaching state \'S939\'");
                            int temp335;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp336;
                            bool temp337;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp338;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp338 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp335, out temp336, out temp337);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1003\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp335, "transferBufferIndex of FastTransferSourceGetBuffer, state S1003");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp336, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1003");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp337, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1003");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp338, "return of FastTransferSourceGetBuffer, state S1003");
                            this.Manager.Comment("reaching state \'S1067\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp339;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp339 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1131\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp339, "return of Release, state S1131");
                            this.Manager.Comment("reaching state \'S1195\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp340;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp340 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1259\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp340, "return of Release, state S1259");
                            this.Manager.Comment("reaching state \'S1323\'");
                            goto label17;
                        }
                        throw new InvalidOperationException("never reached");
                    label17:
;
                        goto label18;
                    }
                    throw new InvalidOperationException("never reached");
                label18:
;
                    goto label22;
                }
                if ((temp397 == 1)) {
                    this.Manager.Comment("reaching state \'S229\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp343;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp343 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S245\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp343, "return of SynchronizationUploadState, state S245");
                    this.Manager.Comment("reaching state \'S261\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp344;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp344 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S277\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp344, "return of SynchronizationUploadState, state S277");
                    this.Manager.Comment("reaching state \'S293\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp345;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp345 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S309\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp345, "return of SynchronizationUploadState, state S309");
                    this.Manager.Comment("reaching state \'S325\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp346;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp346 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S341\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp346, "return of SynchronizationUploadState, state S341");
                    this.Manager.Comment("reaching state \'S357\'");
                    int temp347;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp348;
                    bool temp349;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp350;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp350 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp347, out temp348, out temp349);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S373\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp347, "transferBufferIndex of FastTransferSourceGetBuffer, state S373");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp348, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S373");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp349, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S373");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp350, "return of FastTransferSourceGetBuffer, state S373");
                    this.Manager.Comment("reaching state \'S389\'");
                    int temp351;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp352;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp352 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp351);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S405\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp351, "synchronizationHandleIndex of SynchronizationOpenCollector, state S405");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp352, "return of SynchronizationOpenCollector, state S405");
                    this.Manager.Comment("reaching state \'S421\'");
                    bool temp353;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp353);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp353);
                    this.Manager.Comment("reaching state \'S437\'");
                    int temp396 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker11)));
                    if ((temp396 == 0)) {
                        this.Manager.Comment("reaching state \'S466\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp354;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp354 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S498\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp354, "return of SynchronizationImportDeletes, state S498");
                        this.Manager.Comment("reaching state \'S530\'");
                        int temp355;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp356;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp356 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp355);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S562\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp355, "downloadcontextHandleIndex of SynchronizationConfigure, state S562");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp356, "return of SynchronizationConfigure, state S562");
                        this.Manager.Comment("reaching state \'S594\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp357;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp357 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S626\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp357, "return of SynchronizationUploadState, state S626");
                        this.Manager.Comment("reaching state \'S658\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp358;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp358 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S690\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp358, "return of SynchronizationUploadState, state S690");
                        this.Manager.Comment("reaching state \'S722\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp359;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp359 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S754\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp359, "return of SynchronizationUploadState, state S754");
                        this.Manager.Comment("reaching state \'S786\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp360;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp360 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S818\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp360, "return of SynchronizationUploadState, state S818");
                        this.Manager.Comment("reaching state \'S850\'");
                        bool temp361;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp361);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp361);
                        this.Manager.Comment("reaching state \'S882\'");
                        int temp374 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker10)));
                        if ((temp374 == 0)) {
                            this.Manager.Comment("reaching state \'S940\'");
                            int temp362;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp363;
                            bool temp364;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp365;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp365 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp362, out temp363, out temp364);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1004\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp362, "transferBufferIndex of FastTransferSourceGetBuffer, state S1004");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp363, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1004");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp364, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1004");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp365, "return of FastTransferSourceGetBuffer, state S1004");
                            this.Manager.Comment("reaching state \'S1068\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp366;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp366 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1132\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp366, "return of Release, state S1132");
                            this.Manager.Comment("reaching state \'S1196\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp367;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp367 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1260\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp367, "return of Release, state S1260");
                            this.Manager.Comment("reaching state \'S1324\'");
                            goto label19;
                        }
                        if ((temp374 == 1)) {
                            this.Manager.Comment("reaching state \'S941\'");
                            int temp368;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp369;
                            bool temp370;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp371;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp371 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp368, out temp369, out temp370);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1005\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp368, "transferBufferIndex of FastTransferSourceGetBuffer, state S1005");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp369, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1005");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp370, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1005");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp371, "return of FastTransferSourceGetBuffer, state S1005");
                            this.Manager.Comment("reaching state \'S1069\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp372;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp372 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1133\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp372, "return of Release, state S1133");
                            this.Manager.Comment("reaching state \'S1197\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp373;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp373 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1261\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp373, "return of Release, state S1261");
                            this.Manager.Comment("reaching state \'S1325\'");
                            goto label19;
                        }
                        throw new InvalidOperationException("never reached");
                    label19:
;
                        goto label21;
                    }
                    if ((temp396 == 1)) {
                        this.Manager.Comment("reaching state \'S467\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp375;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp375 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S499\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp375, "return of SynchronizationImportDeletes, state S499");
                        this.Manager.Comment("reaching state \'S531\'");
                        int temp376;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp377;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp377 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp376);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S563\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp376, "downloadcontextHandleIndex of SynchronizationConfigure, state S563");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp377, "return of SynchronizationConfigure, state S563");
                        this.Manager.Comment("reaching state \'S595\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp378;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp378 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S627\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp378, "return of SynchronizationUploadState, state S627");
                        this.Manager.Comment("reaching state \'S659\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp379;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp379 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S691\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp379, "return of SynchronizationUploadState, state S691");
                        this.Manager.Comment("reaching state \'S723\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp380;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp380 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S755\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp380, "return of SynchronizationUploadState, state S755");
                        this.Manager.Comment("reaching state \'S787\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp381;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp381 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S819\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp381, "return of SynchronizationUploadState, state S819");
                        this.Manager.Comment("reaching state \'S851\'");
                        bool temp382;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp382);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp382);
                        this.Manager.Comment("reaching state \'S883\'");
                        int temp395 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker13)));
                        if ((temp395 == 0)) {
                            this.Manager.Comment("reaching state \'S942\'");
                            int temp383;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp384;
                            bool temp385;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp386;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp386 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp383, out temp384, out temp385);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1006\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp383, "transferBufferIndex of FastTransferSourceGetBuffer, state S1006");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp384, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1006");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp385, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1006");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp386, "return of FastTransferSourceGetBuffer, state S1006");
                            this.Manager.Comment("reaching state \'S1070\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp387;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp387 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1134\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp387, "return of Release, state S1134");
                            this.Manager.Comment("reaching state \'S1198\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp388;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp388 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1262\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp388, "return of Release, state S1262");
                            this.Manager.Comment("reaching state \'S1326\'");
                            goto label20;
                        }
                        if ((temp395 == 1)) {
                            this.Manager.Comment("reaching state \'S943\'");
                            int temp389;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp390;
                            bool temp391;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp392;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp392 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp389, out temp390, out temp391);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1007\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp389, "transferBufferIndex of FastTransferSourceGetBuffer, state S1007");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp390, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1007");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp391, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1007");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp392, "return of FastTransferSourceGetBuffer, state S1007");
                            this.Manager.Comment("reaching state \'S1071\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp393;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp393 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1135\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp393, "return of Release, state S1135");
                            this.Manager.Comment("reaching state \'S1199\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp394;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp394 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1263\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp394, "return of Release, state S1263");
                            this.Manager.Comment("reaching state \'S1327\'");
                            goto label20;
                        }
                        throw new InvalidOperationException("never reached");
                    label20:
;
                        goto label21;
                    }
                    throw new InvalidOperationException("never reached");
                label21:
;
                    goto label22;
                }
                throw new InvalidOperationException("never reached");
            label22:
;
                goto label23;
            }
            if ((temp398 == 1)) {
                this.Manager.Comment("reaching state \'S29\'");
                goto label23;
            }
            throw new InvalidOperationException("never reached");
        label23:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S214");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S436");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S880");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S880");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S436");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S881");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S881");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S214");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S437");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S882");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S882");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S437");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S883");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S883");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        #endregion
        
        #region Test Starting in S14
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3");
            this.Manager.Comment("reaching state \'S14\'");
            bool temp399;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp399);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp399);
            this.Manager.Comment("reaching state \'S15\'");
            int temp531 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp531 == 0)) {
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S39\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S47\'");
                int temp400;
                int temp401;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp402;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp402 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp400, out temp401);
                this.Manager.Comment("reaching state \'S55\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp400, "logonHandleIndex of Logon, state S55");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp401, "inboxFolderIdIndex of Logon, state S55");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp402, "return of Logon, state S55");
                this.Manager.Comment("reaching state \'S63\'");
                int temp403;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp404;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp404 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp403);
                this.Manager.Comment("reaching state \'S71\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp403, "folderHandleIndex of OpenFolder, state S71");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp404, "return of OpenFolder, state S71");
                this.Manager.Comment("reaching state \'S79\'");
                int temp405;
                int temp406;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp407;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp407 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp405, out temp406);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S87\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp405, "folderIdIndex of CreateFolder, state S87");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp406, "folderHandleIndex of CreateFolder, state S87");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp407, "return of CreateFolder, state S87");
                this.Manager.Comment("reaching state \'S95\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp408;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp408 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S103\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp408, "return of GetLocalReplicaIds, state S103");
                this.Manager.Comment("reaching state \'S111\'");
                int temp409;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp410;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp410 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp409);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S119\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp409, "synchronizationHandleIndex of SynchronizationOpenCollector, state S119");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp410, "return of SynchronizationOpenCollector, state S119");
                this.Manager.Comment("reaching state \'S127\'");
                int temp411;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp412;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp412 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp411);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S135\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp411, "importMessageHandleIndex of SynchronizationImportMessageChange, state S135");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp412, "return of SynchronizationImportMessageChange, state S135");
                this.Manager.Comment("reaching state \'S143\'");
                int temp413;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp414;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp414 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp413);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S151\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp413, "messageIdIndex of SaveChangesMessage, state S151");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp414, "return of SaveChangesMessage, state S151");
                this.Manager.Comment("reaching state \'S159\'");
                int temp415;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp416;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp416 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp415);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S167\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp415, "importMessageHandleIndex of SynchronizationImportMessageChange, state S167");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp416, "return of SynchronizationImportMessageChange, state S167");
                this.Manager.Comment("reaching state \'S175\'");
                int temp417;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp418;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp418 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp417);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S183\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp417, "messageIdIndex of SaveChangesMessage, state S183");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp418, "return of SaveChangesMessage, state S183");
                this.Manager.Comment("reaching state \'S191\'");
                int temp419;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp420;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                temp420 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp419);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S199\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp419, "downloadcontextHandleIndex of SynchronizationConfigure, state S199");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp420, "return of SynchronizationConfigure, state S199");
                this.Manager.Comment("reaching state \'S207\'");
                bool temp421;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp421);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp421);
                this.Manager.Comment("reaching state \'S215\'");
                int temp530 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker7)));
                if ((temp530 == 0)) {
                    this.Manager.Comment("reaching state \'S230\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp422;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp422 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S246\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp422, "return of SynchronizationUploadState, state S246");
                    this.Manager.Comment("reaching state \'S262\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp423;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp423 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S278\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp423, "return of SynchronizationUploadState, state S278");
                    this.Manager.Comment("reaching state \'S294\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp424;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp424 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S310\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp424, "return of SynchronizationUploadState, state S310");
                    this.Manager.Comment("reaching state \'S326\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp425;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp425 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S342\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp425, "return of SynchronizationUploadState, state S342");
                    this.Manager.Comment("reaching state \'S358\'");
                    int temp426;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp427;
                    bool temp428;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp429;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp429 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp426, out temp427, out temp428);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S374\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp426, "transferBufferIndex of FastTransferSourceGetBuffer, state S374");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp427, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S374");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp428, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S374");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp429, "return of FastTransferSourceGetBuffer, state S374");
                    this.Manager.Comment("reaching state \'S390\'");
                    int temp430;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp431;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp431 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp430);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S406\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp430, "synchronizationHandleIndex of SynchronizationOpenCollector, state S406");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp431, "return of SynchronizationOpenCollector, state S406");
                    this.Manager.Comment("reaching state \'S422\'");
                    bool temp432;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp432);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp432);
                    this.Manager.Comment("reaching state \'S438\'");
                    int temp475 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker4)));
                    if ((temp475 == 0)) {
                        this.Manager.Comment("reaching state \'S468\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp433;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp433 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S500\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp433, "return of SynchronizationImportDeletes, state S500");
                        this.Manager.Comment("reaching state \'S532\'");
                        int temp434;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp435;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp435 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp434);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S564\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp434, "downloadcontextHandleIndex of SynchronizationConfigure, state S564");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp435, "return of SynchronizationConfigure, state S564");
                        this.Manager.Comment("reaching state \'S596\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp436;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp436 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S628\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp436, "return of SynchronizationUploadState, state S628");
                        this.Manager.Comment("reaching state \'S660\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp437;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp437 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S692\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp437, "return of SynchronizationUploadState, state S692");
                        this.Manager.Comment("reaching state \'S724\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp438;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp438 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S756\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp438, "return of SynchronizationUploadState, state S756");
                        this.Manager.Comment("reaching state \'S788\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp439;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp439 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S820\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp439, "return of SynchronizationUploadState, state S820");
                        this.Manager.Comment("reaching state \'S852\'");
                        bool temp440;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp440);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp440);
                        this.Manager.Comment("reaching state \'S884\'");
                        int temp453 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker3)));
                        if ((temp453 == 0)) {
                            this.Manager.Comment("reaching state \'S944\'");
                            int temp441;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp442;
                            bool temp443;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp444;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp444 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp441, out temp442, out temp443);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1008\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp441, "transferBufferIndex of FastTransferSourceGetBuffer, state S1008");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp442, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1008");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp443, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1008");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp444, "return of FastTransferSourceGetBuffer, state S1008");
                            this.Manager.Comment("reaching state \'S1072\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp445;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp445 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1136\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp445, "return of Release, state S1136");
                            this.Manager.Comment("reaching state \'S1200\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp446;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp446 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1264\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp446, "return of Release, state S1264");
                            this.Manager.Comment("reaching state \'S1328\'");
                            goto label24;
                        }
                        if ((temp453 == 1)) {
                            this.Manager.Comment("reaching state \'S945\'");
                            int temp447;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp448;
                            bool temp449;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp450;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp450 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp447, out temp448, out temp449);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1009\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp447, "transferBufferIndex of FastTransferSourceGetBuffer, state S1009");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp448, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1009");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp449, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1009");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp450, "return of FastTransferSourceGetBuffer, state S1009");
                            this.Manager.Comment("reaching state \'S1073\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp451;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp451 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1137\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp451, "return of Release, state S1137");
                            this.Manager.Comment("reaching state \'S1201\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp452;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp452 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1265\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp452, "return of Release, state S1265");
                            this.Manager.Comment("reaching state \'S1329\'");
                            goto label24;
                        }
                        throw new InvalidOperationException("never reached");
                    label24:
;
                        goto label26;
                    }
                    if ((temp475 == 1)) {
                        this.Manager.Comment("reaching state \'S469\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp454;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp454 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S501\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp454, "return of SynchronizationImportDeletes, state S501");
                        this.Manager.Comment("reaching state \'S533\'");
                        int temp455;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp456;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp456 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp455);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S565\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp455, "downloadcontextHandleIndex of SynchronizationConfigure, state S565");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp456, "return of SynchronizationConfigure, state S565");
                        this.Manager.Comment("reaching state \'S597\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp457;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp457 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S629\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp457, "return of SynchronizationUploadState, state S629");
                        this.Manager.Comment("reaching state \'S661\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp458;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp458 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S693\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp458, "return of SynchronizationUploadState, state S693");
                        this.Manager.Comment("reaching state \'S725\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp459;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp459 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S757\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp459, "return of SynchronizationUploadState, state S757");
                        this.Manager.Comment("reaching state \'S789\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp460;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp460 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S821\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp460, "return of SynchronizationUploadState, state S821");
                        this.Manager.Comment("reaching state \'S853\'");
                        bool temp461;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp461);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp461);
                        this.Manager.Comment("reaching state \'S885\'");
                        int temp474 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker6)));
                        if ((temp474 == 0)) {
                            this.Manager.Comment("reaching state \'S946\'");
                            int temp462;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp463;
                            bool temp464;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp465;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp465 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp462, out temp463, out temp464);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1010\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp462, "transferBufferIndex of FastTransferSourceGetBuffer, state S1010");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp463, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1010");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp464, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1010");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp465, "return of FastTransferSourceGetBuffer, state S1010");
                            this.Manager.Comment("reaching state \'S1074\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp466;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp466 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1138\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp466, "return of Release, state S1138");
                            this.Manager.Comment("reaching state \'S1202\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp467;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp467 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1266\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp467, "return of Release, state S1266");
                            this.Manager.Comment("reaching state \'S1330\'");
                            goto label25;
                        }
                        if ((temp474 == 1)) {
                            this.Manager.Comment("reaching state \'S947\'");
                            int temp468;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp469;
                            bool temp470;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp471;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp471 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp468, out temp469, out temp470);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1011\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp468, "transferBufferIndex of FastTransferSourceGetBuffer, state S1011");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp469, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1011");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp470, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1011");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp471, "return of FastTransferSourceGetBuffer, state S1011");
                            this.Manager.Comment("reaching state \'S1075\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp472;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp472 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1139\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp472, "return of Release, state S1139");
                            this.Manager.Comment("reaching state \'S1203\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp473;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp473 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1267\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp473, "return of Release, state S1267");
                            this.Manager.Comment("reaching state \'S1331\'");
                            goto label25;
                        }
                        throw new InvalidOperationException("never reached");
                    label25:
;
                        goto label26;
                    }
                    throw new InvalidOperationException("never reached");
                label26:
;
                    goto label30;
                }
                if ((temp530 == 1)) {
                    this.Manager.Comment("reaching state \'S231\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp476;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp476 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S247\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp476, "return of SynchronizationUploadState, state S247");
                    this.Manager.Comment("reaching state \'S263\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp477;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp477 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S279\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp477, "return of SynchronizationUploadState, state S279");
                    this.Manager.Comment("reaching state \'S295\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp478;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp478 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S311\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp478, "return of SynchronizationUploadState, state S311");
                    this.Manager.Comment("reaching state \'S327\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp479;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp479 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S343\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp479, "return of SynchronizationUploadState, state S343");
                    this.Manager.Comment("reaching state \'S359\'");
                    int temp480;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp481;
                    bool temp482;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp483;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp483 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp480, out temp481, out temp482);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S375\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp480, "transferBufferIndex of FastTransferSourceGetBuffer, state S375");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp481, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S375");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp482, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S375");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp483, "return of FastTransferSourceGetBuffer, state S375");
                    this.Manager.Comment("reaching state \'S391\'");
                    int temp484;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp485;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp485 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp484);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S407\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp484, "synchronizationHandleIndex of SynchronizationOpenCollector, state S407");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp485, "return of SynchronizationOpenCollector, state S407");
                    this.Manager.Comment("reaching state \'S423\'");
                    bool temp486;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp486);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp486);
                    this.Manager.Comment("reaching state \'S439\'");
                    int temp529 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker11)));
                    if ((temp529 == 0)) {
                        this.Manager.Comment("reaching state \'S470\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp487;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp487 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S502\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp487, "return of SynchronizationImportDeletes, state S502");
                        this.Manager.Comment("reaching state \'S534\'");
                        int temp488;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp489;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp489 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp488);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S566\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp488, "downloadcontextHandleIndex of SynchronizationConfigure, state S566");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp489, "return of SynchronizationConfigure, state S566");
                        this.Manager.Comment("reaching state \'S598\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp490;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp490 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S630\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp490, "return of SynchronizationUploadState, state S630");
                        this.Manager.Comment("reaching state \'S662\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp491;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp491 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S694\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp491, "return of SynchronizationUploadState, state S694");
                        this.Manager.Comment("reaching state \'S726\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp492;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp492 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S758\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp492, "return of SynchronizationUploadState, state S758");
                        this.Manager.Comment("reaching state \'S790\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp493;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp493 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S822\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp493, "return of SynchronizationUploadState, state S822");
                        this.Manager.Comment("reaching state \'S854\'");
                        bool temp494;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp494);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp494);
                        this.Manager.Comment("reaching state \'S886\'");
                        int temp507 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker10)));
                        if ((temp507 == 0)) {
                            this.Manager.Comment("reaching state \'S948\'");
                            int temp495;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp496;
                            bool temp497;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp498;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp498 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp495, out temp496, out temp497);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1012\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp495, "transferBufferIndex of FastTransferSourceGetBuffer, state S1012");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp496, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1012");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp497, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1012");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp498, "return of FastTransferSourceGetBuffer, state S1012");
                            this.Manager.Comment("reaching state \'S1076\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp499;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp499 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1140\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp499, "return of Release, state S1140");
                            this.Manager.Comment("reaching state \'S1204\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp500;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp500 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1268\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp500, "return of Release, state S1268");
                            this.Manager.Comment("reaching state \'S1332\'");
                            goto label27;
                        }
                        if ((temp507 == 1)) {
                            this.Manager.Comment("reaching state \'S949\'");
                            int temp501;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp502;
                            bool temp503;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp504;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp504 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp501, out temp502, out temp503);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1013\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp501, "transferBufferIndex of FastTransferSourceGetBuffer, state S1013");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp502, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1013");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp503, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1013");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp504, "return of FastTransferSourceGetBuffer, state S1013");
                            this.Manager.Comment("reaching state \'S1077\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp505;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp505 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1141\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp505, "return of Release, state S1141");
                            this.Manager.Comment("reaching state \'S1205\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp506;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp506 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1269\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp506, "return of Release, state S1269");
                            this.Manager.Comment("reaching state \'S1333\'");
                            goto label27;
                        }
                        throw new InvalidOperationException("never reached");
                    label27:
;
                        goto label29;
                    }
                    if ((temp529 == 1)) {
                        this.Manager.Comment("reaching state \'S471\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp508;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp508 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S503\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp508, "return of SynchronizationImportDeletes, state S503");
                        this.Manager.Comment("reaching state \'S535\'");
                        int temp509;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp510;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp510 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp509);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S567\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp509, "downloadcontextHandleIndex of SynchronizationConfigure, state S567");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp510, "return of SynchronizationConfigure, state S567");
                        this.Manager.Comment("reaching state \'S599\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp511;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp511 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S631\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp511, "return of SynchronizationUploadState, state S631");
                        this.Manager.Comment("reaching state \'S663\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp512;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp512 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S695\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp512, "return of SynchronizationUploadState, state S695");
                        this.Manager.Comment("reaching state \'S727\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp513;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp513 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S759\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp513, "return of SynchronizationUploadState, state S759");
                        this.Manager.Comment("reaching state \'S791\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp514;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp514 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S823\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp514, "return of SynchronizationUploadState, state S823");
                        this.Manager.Comment("reaching state \'S855\'");
                        bool temp515;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp515);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp515);
                        this.Manager.Comment("reaching state \'S887\'");
                        int temp528 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker13)));
                        if ((temp528 == 0)) {
                            this.Manager.Comment("reaching state \'S950\'");
                            int temp516;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp517;
                            bool temp518;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp519;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp519 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp516, out temp517, out temp518);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1014\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp516, "transferBufferIndex of FastTransferSourceGetBuffer, state S1014");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp517, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1014");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp518, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1014");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp519, "return of FastTransferSourceGetBuffer, state S1014");
                            this.Manager.Comment("reaching state \'S1078\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp520;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp520 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1142\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp520, "return of Release, state S1142");
                            this.Manager.Comment("reaching state \'S1206\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp521;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp521 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1270\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp521, "return of Release, state S1270");
                            this.Manager.Comment("reaching state \'S1334\'");
                            goto label28;
                        }
                        if ((temp528 == 1)) {
                            this.Manager.Comment("reaching state \'S951\'");
                            int temp522;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp523;
                            bool temp524;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp525;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp525 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp522, out temp523, out temp524);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S1015\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp522, "transferBufferIndex of FastTransferSourceGetBuffer, state S1015");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp523, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S1015");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp524, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S1015");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp525, "return of FastTransferSourceGetBuffer, state S1015");
                            this.Manager.Comment("reaching state \'S1079\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp526;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp526 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1143\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp526, "return of Release, state S1143");
                            this.Manager.Comment("reaching state \'S1207\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp527;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp527 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1271\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp527, "return of Release, state S1271");
                            this.Manager.Comment("reaching state \'S1335\'");
                            goto label28;
                        }
                        throw new InvalidOperationException("never reached");
                    label28:
;
                        goto label29;
                    }
                    throw new InvalidOperationException("never reached");
                label29:
;
                    goto label30;
                }
                throw new InvalidOperationException("never reached");
            label30:
;
                goto label31;
            }
            if ((temp531 == 1)) {
                this.Manager.Comment("reaching state \'S31\'");
                goto label31;
            }
            throw new InvalidOperationException("never reached");
        label31:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S215");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S438");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S884");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S884");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S438");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S885");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S885");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S215");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S439");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S886");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S886");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S439");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S887");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S887");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite3CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp532;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp532);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp532);
            this.Manager.Comment("reaching state \'S3\'");
            int temp664 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp664 == 0)) {
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S33\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S41\'");
                int temp533;
                int temp534;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp535;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp535 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp533, out temp534);
                this.Manager.Comment("reaching state \'S49\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp533, "logonHandleIndex of Logon, state S49");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp534, "inboxFolderIdIndex of Logon, state S49");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp535, "return of Logon, state S49");
                this.Manager.Comment("reaching state \'S57\'");
                int temp536;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp537;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp537 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp536);
                this.Manager.Comment("reaching state \'S65\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp536, "folderHandleIndex of OpenFolder, state S65");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp537, "return of OpenFolder, state S65");
                this.Manager.Comment("reaching state \'S73\'");
                int temp538;
                int temp539;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp540;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp540 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp538, out temp539);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S81\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp538, "folderIdIndex of CreateFolder, state S81");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp539, "folderHandleIndex of CreateFolder, state S81");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp540, "return of CreateFolder, state S81");
                this.Manager.Comment("reaching state \'S89\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp541;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp541 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S97\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp541, "return of GetLocalReplicaIds, state S97");
                this.Manager.Comment("reaching state \'S105\'");
                int temp542;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp543;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp543 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp542);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S113\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp542, "synchronizationHandleIndex of SynchronizationOpenCollector, state S113");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp543, "return of SynchronizationOpenCollector, state S113");
                this.Manager.Comment("reaching state \'S121\'");
                int temp544;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp545;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp545 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp544);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S129\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp544, "importMessageHandleIndex of SynchronizationImportMessageChange, state S129");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp545, "return of SynchronizationImportMessageChange, state S129");
                this.Manager.Comment("reaching state \'S137\'");
                int temp546;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp547;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp547 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp546);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S145\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp546, "messageIdIndex of SaveChangesMessage, state S145");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp547, "return of SaveChangesMessage, state S145");
                this.Manager.Comment("reaching state \'S153\'");
                int temp548;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp549;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp549 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp548);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S161\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp548, "importMessageHandleIndex of SynchronizationImportMessageChange, state S161");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp549, "return of SynchronizationImportMessageChange, state S161");
                this.Manager.Comment("reaching state \'S169\'");
                int temp550;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp551;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp551 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp550);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S177\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp550, "messageIdIndex of SaveChangesMessage, state S177");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp551, "return of SaveChangesMessage, state S177");
                this.Manager.Comment("reaching state \'S185\'");
                int temp552;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp553;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                        "CreationTime\"],out _)\'");
                temp553 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp552);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S193\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp552, "downloadcontextHandleIndex of SynchronizationConfigure, state S193");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp553, "return of SynchronizationConfigure, state S193");
                this.Manager.Comment("reaching state \'S201\'");
                bool temp554;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp554);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp554);
                this.Manager.Comment("reaching state \'S209\'");
                int temp663 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker7)));
                if ((temp663 == 0)) {
                    this.Manager.Comment("reaching state \'S218\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp555;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp555 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S234\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp555, "return of SynchronizationUploadState, state S234");
                    this.Manager.Comment("reaching state \'S250\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp556;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp556 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S266\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp556, "return of SynchronizationUploadState, state S266");
                    this.Manager.Comment("reaching state \'S282\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp557;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp557 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S298\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp557, "return of SynchronizationUploadState, state S298");
                    this.Manager.Comment("reaching state \'S314\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp558;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp558 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S330\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp558, "return of SynchronizationUploadState, state S330");
                    this.Manager.Comment("reaching state \'S346\'");
                    int temp559;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp560;
                    bool temp561;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp562;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp562 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp559, out temp560, out temp561);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S362\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp559, "transferBufferIndex of FastTransferSourceGetBuffer, state S362");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp560, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S362");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp561, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S362");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp562, "return of FastTransferSourceGetBuffer, state S362");
                    this.Manager.Comment("reaching state \'S378\'");
                    int temp563;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp564;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp564 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp563);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S394\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp563, "synchronizationHandleIndex of SynchronizationOpenCollector, state S394");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp564, "return of SynchronizationOpenCollector, state S394");
                    this.Manager.Comment("reaching state \'S410\'");
                    bool temp565;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp565);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp565);
                    this.Manager.Comment("reaching state \'S426\'");
                    int temp608 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker4)));
                    if ((temp608 == 0)) {
                        this.Manager.Comment("reaching state \'S444\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp566;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp566 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S476\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp566, "return of SynchronizationImportDeletes, state S476");
                        this.Manager.Comment("reaching state \'S508\'");
                        int temp567;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp568;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp568 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp567);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S540\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp567, "downloadcontextHandleIndex of SynchronizationConfigure, state S540");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp568, "return of SynchronizationConfigure, state S540");
                        this.Manager.Comment("reaching state \'S572\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp569;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp569 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S604\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp569, "return of SynchronizationUploadState, state S604");
                        this.Manager.Comment("reaching state \'S636\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp570;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp570 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S668\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp570, "return of SynchronizationUploadState, state S668");
                        this.Manager.Comment("reaching state \'S700\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp571;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp571 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S732\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp571, "return of SynchronizationUploadState, state S732");
                        this.Manager.Comment("reaching state \'S764\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp572;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp572 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S796\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp572, "return of SynchronizationUploadState, state S796");
                        this.Manager.Comment("reaching state \'S828\'");
                        bool temp573;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp573);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp573);
                        this.Manager.Comment("reaching state \'S860\'");
                        int temp586 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker3)));
                        if ((temp586 == 0)) {
                            this.Manager.Comment("reaching state \'S896\'");
                            int temp574;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp575;
                            bool temp576;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp577;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp577 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp574, out temp575, out temp576);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S960\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp574, "transferBufferIndex of FastTransferSourceGetBuffer, state S960");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp575, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S960");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp576, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S960");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp577, "return of FastTransferSourceGetBuffer, state S960");
                            this.Manager.Comment("reaching state \'S1024\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp578;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp578 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1088\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp578, "return of Release, state S1088");
                            this.Manager.Comment("reaching state \'S1152\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp579;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp579 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1216\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp579, "return of Release, state S1216");
                            this.Manager.Comment("reaching state \'S1280\'");
                            goto label32;
                        }
                        if ((temp586 == 1)) {
                            this.Manager.Comment("reaching state \'S897\'");
                            int temp580;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp581;
                            bool temp582;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp583;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp583 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp580, out temp581, out temp582);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S961\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp580, "transferBufferIndex of FastTransferSourceGetBuffer, state S961");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp581, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S961");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp582, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S961");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp583, "return of FastTransferSourceGetBuffer, state S961");
                            this.Manager.Comment("reaching state \'S1025\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp584;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp584 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1089\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp584, "return of Release, state S1089");
                            this.Manager.Comment("reaching state \'S1153\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp585;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp585 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1217\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp585, "return of Release, state S1217");
                            this.Manager.Comment("reaching state \'S1281\'");
                            goto label32;
                        }
                        throw new InvalidOperationException("never reached");
                    label32:
;
                        goto label34;
                    }
                    if ((temp608 == 1)) {
                        this.Manager.Comment("reaching state \'S445\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp587;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp587 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                        this.Manager.Comment("reaching state \'S477\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp587, "return of SynchronizationImportDeletes, state S477");
                        this.Manager.Comment("reaching state \'S509\'");
                        int temp588;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp589;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp589 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp588);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S541\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp588, "downloadcontextHandleIndex of SynchronizationConfigure, state S541");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp589, "return of SynchronizationConfigure, state S541");
                        this.Manager.Comment("reaching state \'S573\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp590;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp590 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S605\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp590, "return of SynchronizationUploadState, state S605");
                        this.Manager.Comment("reaching state \'S637\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp591;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp591 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S669\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp591, "return of SynchronizationUploadState, state S669");
                        this.Manager.Comment("reaching state \'S701\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp592;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp592 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S733\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp592, "return of SynchronizationUploadState, state S733");
                        this.Manager.Comment("reaching state \'S765\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp593;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp593 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S797\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp593, "return of SynchronizationUploadState, state S797");
                        this.Manager.Comment("reaching state \'S829\'");
                        bool temp594;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp594);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp594);
                        this.Manager.Comment("reaching state \'S861\'");
                        int temp607 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker6)));
                        if ((temp607 == 0)) {
                            this.Manager.Comment("reaching state \'S898\'");
                            int temp595;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp596;
                            bool temp597;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp598;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp598 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp595, out temp596, out temp597);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S962\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp595, "transferBufferIndex of FastTransferSourceGetBuffer, state S962");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp596, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S962");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp597, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S962");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp598, "return of FastTransferSourceGetBuffer, state S962");
                            this.Manager.Comment("reaching state \'S1026\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp599;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp599 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1090\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp599, "return of Release, state S1090");
                            this.Manager.Comment("reaching state \'S1154\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp600;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp600 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1218\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp600, "return of Release, state S1218");
                            this.Manager.Comment("reaching state \'S1282\'");
                            goto label33;
                        }
                        if ((temp607 == 1)) {
                            this.Manager.Comment("reaching state \'S899\'");
                            int temp601;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp602;
                            bool temp603;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp604;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp604 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp601, out temp602, out temp603);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S963\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp601, "transferBufferIndex of FastTransferSourceGetBuffer, state S963");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp602, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S963");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp603, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S963");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp604, "return of FastTransferSourceGetBuffer, state S963");
                            this.Manager.Comment("reaching state \'S1027\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp605;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp605 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1091\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp605, "return of Release, state S1091");
                            this.Manager.Comment("reaching state \'S1155\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp606;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp606 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1219\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp606, "return of Release, state S1219");
                            this.Manager.Comment("reaching state \'S1283\'");
                            goto label33;
                        }
                        throw new InvalidOperationException("never reached");
                    label33:
;
                        goto label34;
                    }
                    throw new InvalidOperationException("never reached");
                label34:
;
                    goto label38;
                }
                if ((temp663 == 1)) {
                    this.Manager.Comment("reaching state \'S219\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp609;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp609 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S235\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp609, "return of SynchronizationUploadState, state S235");
                    this.Manager.Comment("reaching state \'S251\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp610;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp610 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S267\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp610, "return of SynchronizationUploadState, state S267");
                    this.Manager.Comment("reaching state \'S283\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp611;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp611 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S299\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp611, "return of SynchronizationUploadState, state S299");
                    this.Manager.Comment("reaching state \'S315\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp612;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp612 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S331\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp612, "return of SynchronizationUploadState, state S331");
                    this.Manager.Comment("reaching state \'S347\'");
                    int temp613;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp614;
                    bool temp615;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp616;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp616 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp613, out temp614, out temp615);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S363\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp613, "transferBufferIndex of FastTransferSourceGetBuffer, state S363");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp614, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S363");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp615, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S363");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp616, "return of FastTransferSourceGetBuffer, state S363");
                    this.Manager.Comment("reaching state \'S379\'");
                    int temp617;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp618;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp618 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp617);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S395\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp617, "synchronizationHandleIndex of SynchronizationOpenCollector, state S395");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp618, "return of SynchronizationOpenCollector, state S395");
                    this.Manager.Comment("reaching state \'S411\'");
                    bool temp619;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp619);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp619);
                    this.Manager.Comment("reaching state \'S427\'");
                    int temp662 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker11)));
                    if ((temp662 == 0)) {
                        this.Manager.Comment("reaching state \'S446\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp620;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp620 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S478\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp620, "return of SynchronizationImportDeletes, state S478");
                        this.Manager.Comment("reaching state \'S510\'");
                        int temp621;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp622;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp622 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp621);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S542\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp621, "downloadcontextHandleIndex of SynchronizationConfigure, state S542");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp622, "return of SynchronizationConfigure, state S542");
                        this.Manager.Comment("reaching state \'S574\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp623;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp623 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S606\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp623, "return of SynchronizationUploadState, state S606");
                        this.Manager.Comment("reaching state \'S638\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp624;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp624 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S670\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp624, "return of SynchronizationUploadState, state S670");
                        this.Manager.Comment("reaching state \'S702\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp625;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp625 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S734\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp625, "return of SynchronizationUploadState, state S734");
                        this.Manager.Comment("reaching state \'S766\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp626;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp626 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S798\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp626, "return of SynchronizationUploadState, state S798");
                        this.Manager.Comment("reaching state \'S830\'");
                        bool temp627;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp627);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp627);
                        this.Manager.Comment("reaching state \'S862\'");
                        int temp640 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker10)));
                        if ((temp640 == 0)) {
                            this.Manager.Comment("reaching state \'S900\'");
                            int temp628;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp629;
                            bool temp630;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp631;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp631 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp628, out temp629, out temp630);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S964\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp628, "transferBufferIndex of FastTransferSourceGetBuffer, state S964");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp629, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S964");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp630, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S964");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp631, "return of FastTransferSourceGetBuffer, state S964");
                            this.Manager.Comment("reaching state \'S1028\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp632;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp632 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1092\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp632, "return of Release, state S1092");
                            this.Manager.Comment("reaching state \'S1156\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp633;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp633 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1220\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp633, "return of Release, state S1220");
                            this.Manager.Comment("reaching state \'S1284\'");
                            goto label35;
                        }
                        if ((temp640 == 1)) {
                            this.Manager.Comment("reaching state \'S901\'");
                            int temp634;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp635;
                            bool temp636;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp637;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp637 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp634, out temp635, out temp636);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S965\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp634, "transferBufferIndex of FastTransferSourceGetBuffer, state S965");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp635, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S965");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp636, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S965");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp637, "return of FastTransferSourceGetBuffer, state S965");
                            this.Manager.Comment("reaching state \'S1029\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp638;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp638 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1093\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp638, "return of Release, state S1093");
                            this.Manager.Comment("reaching state \'S1157\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp639;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp639 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1221\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp639, "return of Release, state S1221");
                            this.Manager.Comment("reaching state \'S1285\'");
                            goto label35;
                        }
                        throw new InvalidOperationException("never reached");
                    label35:
;
                        goto label37;
                    }
                    if ((temp662 == 1)) {
                        this.Manager.Comment("reaching state \'S447\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp641;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp641 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                        this.Manager.Comment("reaching state \'S479\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp641, "return of SynchronizationImportDeletes, state S479");
                        this.Manager.Comment("reaching state \'S511\'");
                        int temp642;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp643;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp643 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp642);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S543\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp642, "downloadcontextHandleIndex of SynchronizationConfigure, state S543");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp643, "return of SynchronizationConfigure, state S543");
                        this.Manager.Comment("reaching state \'S575\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp644;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp644 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S607\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp644, "return of SynchronizationUploadState, state S607");
                        this.Manager.Comment("reaching state \'S639\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp645;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp645 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S671\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp645, "return of SynchronizationUploadState, state S671");
                        this.Manager.Comment("reaching state \'S703\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp646;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp646 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S735\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp646, "return of SynchronizationUploadState, state S735");
                        this.Manager.Comment("reaching state \'S767\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp647;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp647 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S799\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp647, "return of SynchronizationUploadState, state S799");
                        this.Manager.Comment("reaching state \'S831\'");
                        bool temp648;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp648);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp648);
                        this.Manager.Comment("reaching state \'S863\'");
                        int temp661 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker13)));
                        if ((temp661 == 0)) {
                            this.Manager.Comment("reaching state \'S902\'");
                            int temp649;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp650;
                            bool temp651;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp652;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp652 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp649, out temp650, out temp651);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S966\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp649, "transferBufferIndex of FastTransferSourceGetBuffer, state S966");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp650, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S966");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp651, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S966");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp652, "return of FastTransferSourceGetBuffer, state S966");
                            this.Manager.Comment("reaching state \'S1030\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp653;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp653 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1094\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp653, "return of Release, state S1094");
                            this.Manager.Comment("reaching state \'S1158\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp654;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp654 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1222\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp654, "return of Release, state S1222");
                            this.Manager.Comment("reaching state \'S1286\'");
                            goto label36;
                        }
                        if ((temp661 == 1)) {
                            this.Manager.Comment("reaching state \'S903\'");
                            int temp655;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp656;
                            bool temp657;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp658;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp658 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp655, out temp656, out temp657);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S967\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp655, "transferBufferIndex of FastTransferSourceGetBuffer, state S967");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp656, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S967");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp657, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S967");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp658, "return of FastTransferSourceGetBuffer, state S967");
                            this.Manager.Comment("reaching state \'S1031\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp659;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp659 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1095\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp659, "return of Release, state S1095");
                            this.Manager.Comment("reaching state \'S1159\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp660;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp660 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1223\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp660, "return of Release, state S1223");
                            this.Manager.Comment("reaching state \'S1287\'");
                            goto label36;
                        }
                        throw new InvalidOperationException("never reached");
                    label36:
;
                        goto label37;
                    }
                    throw new InvalidOperationException("never reached");
                label37:
;
                    goto label38;
                }
                throw new InvalidOperationException("never reached");
            label38:
;
                goto label39;
            }
            if ((temp664 == 1)) {
                this.Manager.Comment("reaching state \'S19\'");
                goto label39;
            }
            throw new InvalidOperationException("never reached");
        label39:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S209");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S426");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S860");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S860");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S426");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S861");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S861");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S209");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S427");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S862");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S862");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S427");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S863");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S863");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite4CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp665;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp665);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp665);
            this.Manager.Comment("reaching state \'S5\'");
            int temp797 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp797 == 0)) {
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S34\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S42\'");
                int temp666;
                int temp667;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp668;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp668 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp666, out temp667);
                this.Manager.Comment("reaching state \'S50\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp666, "logonHandleIndex of Logon, state S50");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp667, "inboxFolderIdIndex of Logon, state S50");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp668, "return of Logon, state S50");
                this.Manager.Comment("reaching state \'S58\'");
                int temp669;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp670;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp670 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp669);
                this.Manager.Comment("reaching state \'S66\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp669, "folderHandleIndex of OpenFolder, state S66");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp670, "return of OpenFolder, state S66");
                this.Manager.Comment("reaching state \'S74\'");
                int temp671;
                int temp672;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp673;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp673 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp671, out temp672);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S82\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp671, "folderIdIndex of CreateFolder, state S82");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp672, "folderHandleIndex of CreateFolder, state S82");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp673, "return of CreateFolder, state S82");
                this.Manager.Comment("reaching state \'S90\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp674;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp674 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S98\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp674, "return of GetLocalReplicaIds, state S98");
                this.Manager.Comment("reaching state \'S106\'");
                int temp675;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp676;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp676 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp675);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S114\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp675, "synchronizationHandleIndex of SynchronizationOpenCollector, state S114");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp676, "return of SynchronizationOpenCollector, state S114");
                this.Manager.Comment("reaching state \'S122\'");
                int temp677;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp678;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp678 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp677);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S130\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp677, "importMessageHandleIndex of SynchronizationImportMessageChange, state S130");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp678, "return of SynchronizationImportMessageChange, state S130");
                this.Manager.Comment("reaching state \'S138\'");
                int temp679;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp680;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp680 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp679);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S146\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp679, "messageIdIndex of SaveChangesMessage, state S146");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp680, "return of SaveChangesMessage, state S146");
                this.Manager.Comment("reaching state \'S154\'");
                int temp681;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp682;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp682 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp681);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S162\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp681, "importMessageHandleIndex of SynchronizationImportMessageChange, state S162");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp682, "return of SynchronizationImportMessageChange, state S162");
                this.Manager.Comment("reaching state \'S170\'");
                int temp683;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp684;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp684 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp683);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S178\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp683, "messageIdIndex of SaveChangesMessage, state S178");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp684, "return of SaveChangesMessage, state S178");
                this.Manager.Comment("reaching state \'S186\'");
                int temp685;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp686;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                        "CreationTime\"],out _)\'");
                temp686 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp685);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S194\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp685, "downloadcontextHandleIndex of SynchronizationConfigure, state S194");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp686, "return of SynchronizationConfigure, state S194");
                this.Manager.Comment("reaching state \'S202\'");
                bool temp687;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp687);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp687);
                this.Manager.Comment("reaching state \'S210\'");
                int temp796 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker7)));
                if ((temp796 == 0)) {
                    this.Manager.Comment("reaching state \'S220\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp688;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp688 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S236\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp688, "return of SynchronizationUploadState, state S236");
                    this.Manager.Comment("reaching state \'S252\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp689;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp689 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S268\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp689, "return of SynchronizationUploadState, state S268");
                    this.Manager.Comment("reaching state \'S284\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp690;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp690 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S300\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp690, "return of SynchronizationUploadState, state S300");
                    this.Manager.Comment("reaching state \'S316\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp691;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp691 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S332\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp691, "return of SynchronizationUploadState, state S332");
                    this.Manager.Comment("reaching state \'S348\'");
                    int temp692;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp693;
                    bool temp694;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp695;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp695 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp692, out temp693, out temp694);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S364\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp692, "transferBufferIndex of FastTransferSourceGetBuffer, state S364");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp693, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S364");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp694, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S364");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp695, "return of FastTransferSourceGetBuffer, state S364");
                    this.Manager.Comment("reaching state \'S380\'");
                    int temp696;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp697;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp697 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp696);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S396\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp696, "synchronizationHandleIndex of SynchronizationOpenCollector, state S396");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp697, "return of SynchronizationOpenCollector, state S396");
                    this.Manager.Comment("reaching state \'S412\'");
                    bool temp698;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp698);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp698);
                    this.Manager.Comment("reaching state \'S428\'");
                    int temp741 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker4)));
                    if ((temp741 == 0)) {
                        this.Manager.Comment("reaching state \'S448\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp699;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp699 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S480\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp699, "return of SynchronizationImportDeletes, state S480");
                        this.Manager.Comment("reaching state \'S512\'");
                        int temp700;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp701;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp701 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp700);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S544\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp700, "downloadcontextHandleIndex of SynchronizationConfigure, state S544");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp701, "return of SynchronizationConfigure, state S544");
                        this.Manager.Comment("reaching state \'S576\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp702;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp702 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S608\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp702, "return of SynchronizationUploadState, state S608");
                        this.Manager.Comment("reaching state \'S640\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp703;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp703 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S672\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp703, "return of SynchronizationUploadState, state S672");
                        this.Manager.Comment("reaching state \'S704\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp704;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp704 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S736\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp704, "return of SynchronizationUploadState, state S736");
                        this.Manager.Comment("reaching state \'S768\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp705;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp705 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S800\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp705, "return of SynchronizationUploadState, state S800");
                        this.Manager.Comment("reaching state \'S832\'");
                        bool temp706;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp706);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp706);
                        this.Manager.Comment("reaching state \'S864\'");
                        int temp719 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker3)));
                        if ((temp719 == 0)) {
                            this.Manager.Comment("reaching state \'S904\'");
                            int temp707;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp708;
                            bool temp709;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp710;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp710 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp707, out temp708, out temp709);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S968\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp707, "transferBufferIndex of FastTransferSourceGetBuffer, state S968");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp708, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S968");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp709, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S968");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp710, "return of FastTransferSourceGetBuffer, state S968");
                            this.Manager.Comment("reaching state \'S1032\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp711;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp711 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1096\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp711, "return of Release, state S1096");
                            this.Manager.Comment("reaching state \'S1160\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp712;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp712 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1224\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp712, "return of Release, state S1224");
                            this.Manager.Comment("reaching state \'S1288\'");
                            goto label40;
                        }
                        if ((temp719 == 1)) {
                            this.Manager.Comment("reaching state \'S905\'");
                            int temp713;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp714;
                            bool temp715;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp716;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp716 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp713, out temp714, out temp715);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S969\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp713, "transferBufferIndex of FastTransferSourceGetBuffer, state S969");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp714, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S969");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp715, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S969");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp716, "return of FastTransferSourceGetBuffer, state S969");
                            this.Manager.Comment("reaching state \'S1033\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp717;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp717 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1097\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp717, "return of Release, state S1097");
                            this.Manager.Comment("reaching state \'S1161\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp718;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp718 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1225\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp718, "return of Release, state S1225");
                            this.Manager.Comment("reaching state \'S1289\'");
                            goto label40;
                        }
                        throw new InvalidOperationException("never reached");
                    label40:
;
                        goto label42;
                    }
                    if ((temp741 == 1)) {
                        this.Manager.Comment("reaching state \'S449\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp720;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp720 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S481\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp720, "return of SynchronizationImportDeletes, state S481");
                        this.Manager.Comment("reaching state \'S513\'");
                        int temp721;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp722;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp722 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp721);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S545\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp721, "downloadcontextHandleIndex of SynchronizationConfigure, state S545");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp722, "return of SynchronizationConfigure, state S545");
                        this.Manager.Comment("reaching state \'S577\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp723;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp723 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S609\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp723, "return of SynchronizationUploadState, state S609");
                        this.Manager.Comment("reaching state \'S641\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp724;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp724 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S673\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp724, "return of SynchronizationUploadState, state S673");
                        this.Manager.Comment("reaching state \'S705\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp725;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp725 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S737\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp725, "return of SynchronizationUploadState, state S737");
                        this.Manager.Comment("reaching state \'S769\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp726;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp726 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S801\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp726, "return of SynchronizationUploadState, state S801");
                        this.Manager.Comment("reaching state \'S833\'");
                        bool temp727;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp727);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp727);
                        this.Manager.Comment("reaching state \'S865\'");
                        int temp740 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker6)));
                        if ((temp740 == 0)) {
                            this.Manager.Comment("reaching state \'S906\'");
                            int temp728;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp729;
                            bool temp730;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp731;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp731 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp728, out temp729, out temp730);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S970\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp728, "transferBufferIndex of FastTransferSourceGetBuffer, state S970");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp729, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S970");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp730, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S970");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp731, "return of FastTransferSourceGetBuffer, state S970");
                            this.Manager.Comment("reaching state \'S1034\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp732;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp732 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1098\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp732, "return of Release, state S1098");
                            this.Manager.Comment("reaching state \'S1162\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp733;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp733 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1226\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp733, "return of Release, state S1226");
                            this.Manager.Comment("reaching state \'S1290\'");
                            goto label41;
                        }
                        if ((temp740 == 1)) {
                            this.Manager.Comment("reaching state \'S907\'");
                            int temp734;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp735;
                            bool temp736;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp737;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp737 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp734, out temp735, out temp736);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S971\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp734, "transferBufferIndex of FastTransferSourceGetBuffer, state S971");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp735, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S971");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp736, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S971");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp737, "return of FastTransferSourceGetBuffer, state S971");
                            this.Manager.Comment("reaching state \'S1035\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp738;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp738 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1099\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp738, "return of Release, state S1099");
                            this.Manager.Comment("reaching state \'S1163\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp739;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp739 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1227\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp739, "return of Release, state S1227");
                            this.Manager.Comment("reaching state \'S1291\'");
                            goto label41;
                        }
                        throw new InvalidOperationException("never reached");
                    label41:
;
                        goto label42;
                    }
                    throw new InvalidOperationException("never reached");
                label42:
;
                    goto label46;
                }
                if ((temp796 == 1)) {
                    this.Manager.Comment("reaching state \'S221\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp742;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp742 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S237\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp742, "return of SynchronizationUploadState, state S237");
                    this.Manager.Comment("reaching state \'S253\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp743;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp743 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S269\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp743, "return of SynchronizationUploadState, state S269");
                    this.Manager.Comment("reaching state \'S285\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp744;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp744 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S301\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp744, "return of SynchronizationUploadState, state S301");
                    this.Manager.Comment("reaching state \'S317\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp745;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp745 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S333\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp745, "return of SynchronizationUploadState, state S333");
                    this.Manager.Comment("reaching state \'S349\'");
                    int temp746;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp747;
                    bool temp748;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp749;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp749 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp746, out temp747, out temp748);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S365\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp746, "transferBufferIndex of FastTransferSourceGetBuffer, state S365");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp747, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S365");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp748, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S365");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp749, "return of FastTransferSourceGetBuffer, state S365");
                    this.Manager.Comment("reaching state \'S381\'");
                    int temp750;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp751;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp751 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp750);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S397\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp750, "synchronizationHandleIndex of SynchronizationOpenCollector, state S397");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp751, "return of SynchronizationOpenCollector, state S397");
                    this.Manager.Comment("reaching state \'S413\'");
                    bool temp752;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp752);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp752);
                    this.Manager.Comment("reaching state \'S429\'");
                    int temp795 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker11)));
                    if ((temp795 == 0)) {
                        this.Manager.Comment("reaching state \'S450\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp753;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp753 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S482\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp753, "return of SynchronizationImportDeletes, state S482");
                        this.Manager.Comment("reaching state \'S514\'");
                        int temp754;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp755;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp755 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp754);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S546\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp754, "downloadcontextHandleIndex of SynchronizationConfigure, state S546");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp755, "return of SynchronizationConfigure, state S546");
                        this.Manager.Comment("reaching state \'S578\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp756;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp756 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S610\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp756, "return of SynchronizationUploadState, state S610");
                        this.Manager.Comment("reaching state \'S642\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp757;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp757 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S674\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp757, "return of SynchronizationUploadState, state S674");
                        this.Manager.Comment("reaching state \'S706\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp758;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp758 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S738\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp758, "return of SynchronizationUploadState, state S738");
                        this.Manager.Comment("reaching state \'S770\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp759;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp759 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S802\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp759, "return of SynchronizationUploadState, state S802");
                        this.Manager.Comment("reaching state \'S834\'");
                        bool temp760;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp760);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp760);
                        this.Manager.Comment("reaching state \'S866\'");
                        int temp773 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker10)));
                        if ((temp773 == 0)) {
                            this.Manager.Comment("reaching state \'S908\'");
                            int temp761;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp762;
                            bool temp763;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp764;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp764 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp761, out temp762, out temp763);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S972\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp761, "transferBufferIndex of FastTransferSourceGetBuffer, state S972");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp762, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S972");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp763, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S972");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp764, "return of FastTransferSourceGetBuffer, state S972");
                            this.Manager.Comment("reaching state \'S1036\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp765;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp765 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1100\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp765, "return of Release, state S1100");
                            this.Manager.Comment("reaching state \'S1164\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp766;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp766 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1228\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp766, "return of Release, state S1228");
                            this.Manager.Comment("reaching state \'S1292\'");
                            goto label43;
                        }
                        if ((temp773 == 1)) {
                            this.Manager.Comment("reaching state \'S909\'");
                            int temp767;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp768;
                            bool temp769;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp770;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp770 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp767, out temp768, out temp769);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S973\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp767, "transferBufferIndex of FastTransferSourceGetBuffer, state S973");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp768, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S973");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp769, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S973");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp770, "return of FastTransferSourceGetBuffer, state S973");
                            this.Manager.Comment("reaching state \'S1037\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp771;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp771 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1101\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp771, "return of Release, state S1101");
                            this.Manager.Comment("reaching state \'S1165\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp772;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp772 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1229\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp772, "return of Release, state S1229");
                            this.Manager.Comment("reaching state \'S1293\'");
                            goto label43;
                        }
                        throw new InvalidOperationException("never reached");
                    label43:
;
                        goto label45;
                    }
                    if ((temp795 == 1)) {
                        this.Manager.Comment("reaching state \'S451\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp774;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp774 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S483\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp774, "return of SynchronizationImportDeletes, state S483");
                        this.Manager.Comment("reaching state \'S515\'");
                        int temp775;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp776;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp776 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp775);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S547\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp775, "downloadcontextHandleIndex of SynchronizationConfigure, state S547");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp776, "return of SynchronizationConfigure, state S547");
                        this.Manager.Comment("reaching state \'S579\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp777;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp777 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S611\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp777, "return of SynchronizationUploadState, state S611");
                        this.Manager.Comment("reaching state \'S643\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp778;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp778 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S675\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp778, "return of SynchronizationUploadState, state S675");
                        this.Manager.Comment("reaching state \'S707\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp779;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp779 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S739\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp779, "return of SynchronizationUploadState, state S739");
                        this.Manager.Comment("reaching state \'S771\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp780;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp780 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S803\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp780, "return of SynchronizationUploadState, state S803");
                        this.Manager.Comment("reaching state \'S835\'");
                        bool temp781;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp781);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp781);
                        this.Manager.Comment("reaching state \'S867\'");
                        int temp794 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker13)));
                        if ((temp794 == 0)) {
                            this.Manager.Comment("reaching state \'S910\'");
                            int temp782;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp783;
                            bool temp784;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp785;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp785 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp782, out temp783, out temp784);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S974\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp782, "transferBufferIndex of FastTransferSourceGetBuffer, state S974");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp783, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S974");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp784, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S974");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp785, "return of FastTransferSourceGetBuffer, state S974");
                            this.Manager.Comment("reaching state \'S1038\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp786;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp786 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1102\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp786, "return of Release, state S1102");
                            this.Manager.Comment("reaching state \'S1166\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp787;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp787 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1230\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp787, "return of Release, state S1230");
                            this.Manager.Comment("reaching state \'S1294\'");
                            goto label44;
                        }
                        if ((temp794 == 1)) {
                            this.Manager.Comment("reaching state \'S911\'");
                            int temp788;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp789;
                            bool temp790;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp791;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp791 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp788, out temp789, out temp790);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S975\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp788, "transferBufferIndex of FastTransferSourceGetBuffer, state S975");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp789, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S975");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp790, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S975");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp791, "return of FastTransferSourceGetBuffer, state S975");
                            this.Manager.Comment("reaching state \'S1039\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp792;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp792 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1103\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp792, "return of Release, state S1103");
                            this.Manager.Comment("reaching state \'S1167\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp793;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp793 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1231\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp793, "return of Release, state S1231");
                            this.Manager.Comment("reaching state \'S1295\'");
                            goto label44;
                        }
                        throw new InvalidOperationException("never reached");
                    label44:
;
                        goto label45;
                    }
                    throw new InvalidOperationException("never reached");
                label45:
;
                    goto label46;
                }
                throw new InvalidOperationException("never reached");
            label46:
;
                goto label47;
            }
            if ((temp797 == 1)) {
                this.Manager.Comment("reaching state \'S21\'");
                goto label47;
            }
            throw new InvalidOperationException("never reached");
        label47:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S210");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S428");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S864");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S864");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S428");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S865");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S865");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S210");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S429");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S866");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S866");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S429");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S867");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S867");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite5CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp798;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp798);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp798);
            this.Manager.Comment("reaching state \'S7\'");
            int temp930 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp930 == 0)) {
                this.Manager.Comment("reaching state \'S22\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S35\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S43\'");
                int temp799;
                int temp800;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp801;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp801 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp799, out temp800);
                this.Manager.Comment("reaching state \'S51\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp799, "logonHandleIndex of Logon, state S51");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp800, "inboxFolderIdIndex of Logon, state S51");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp801, "return of Logon, state S51");
                this.Manager.Comment("reaching state \'S59\'");
                int temp802;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp803;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp803 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp802);
                this.Manager.Comment("reaching state \'S67\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp802, "folderHandleIndex of OpenFolder, state S67");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp803, "return of OpenFolder, state S67");
                this.Manager.Comment("reaching state \'S75\'");
                int temp804;
                int temp805;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp806;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp806 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp804, out temp805);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S83\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp804, "folderIdIndex of CreateFolder, state S83");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp805, "folderHandleIndex of CreateFolder, state S83");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp806, "return of CreateFolder, state S83");
                this.Manager.Comment("reaching state \'S91\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp807;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp807 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S99\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp807, "return of GetLocalReplicaIds, state S99");
                this.Manager.Comment("reaching state \'S107\'");
                int temp808;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp809;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp809 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp808);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S115\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp808, "synchronizationHandleIndex of SynchronizationOpenCollector, state S115");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp809, "return of SynchronizationOpenCollector, state S115");
                this.Manager.Comment("reaching state \'S123\'");
                int temp810;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp811;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp811 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp810);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S131\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp810, "importMessageHandleIndex of SynchronizationImportMessageChange, state S131");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp811, "return of SynchronizationImportMessageChange, state S131");
                this.Manager.Comment("reaching state \'S139\'");
                int temp812;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp813;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp813 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp812);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S147\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp812, "messageIdIndex of SaveChangesMessage, state S147");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp813, "return of SaveChangesMessage, state S147");
                this.Manager.Comment("reaching state \'S155\'");
                int temp814;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp815;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp815 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp814);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S163\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp814, "importMessageHandleIndex of SynchronizationImportMessageChange, state S163");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp815, "return of SynchronizationImportMessageChange, state S163");
                this.Manager.Comment("reaching state \'S171\'");
                int temp816;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp817;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp817 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp816);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S179\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp816, "messageIdIndex of SaveChangesMessage, state S179");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp817, "return of SaveChangesMessage, state S179");
                this.Manager.Comment("reaching state \'S187\'");
                int temp818;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp819;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                        "CreationTime\"],out _)\'");
                temp819 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp818);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S195\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp818, "downloadcontextHandleIndex of SynchronizationConfigure, state S195");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp819, "return of SynchronizationConfigure, state S195");
                this.Manager.Comment("reaching state \'S203\'");
                bool temp820;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp820);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp820);
                this.Manager.Comment("reaching state \'S211\'");
                int temp929 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker7)));
                if ((temp929 == 0)) {
                    this.Manager.Comment("reaching state \'S222\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp821;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp821 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S238\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp821, "return of SynchronizationUploadState, state S238");
                    this.Manager.Comment("reaching state \'S254\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp822;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp822 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S270\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp822, "return of SynchronizationUploadState, state S270");
                    this.Manager.Comment("reaching state \'S286\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp823;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp823 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S302\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp823, "return of SynchronizationUploadState, state S302");
                    this.Manager.Comment("reaching state \'S318\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp824;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp824 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S334\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp824, "return of SynchronizationUploadState, state S334");
                    this.Manager.Comment("reaching state \'S350\'");
                    int temp825;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp826;
                    bool temp827;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp828;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp828 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp825, out temp826, out temp827);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S366\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp825, "transferBufferIndex of FastTransferSourceGetBuffer, state S366");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp826, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S366");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp827, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S366");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp828, "return of FastTransferSourceGetBuffer, state S366");
                    this.Manager.Comment("reaching state \'S382\'");
                    int temp829;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp830;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp830 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp829);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S398\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp829, "synchronizationHandleIndex of SynchronizationOpenCollector, state S398");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp830, "return of SynchronizationOpenCollector, state S398");
                    this.Manager.Comment("reaching state \'S414\'");
                    bool temp831;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp831);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp831);
                    this.Manager.Comment("reaching state \'S430\'");
                    int temp874 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker4)));
                    if ((temp874 == 0)) {
                        this.Manager.Comment("reaching state \'S452\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp832;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp832 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S484\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp832, "return of SynchronizationImportDeletes, state S484");
                        this.Manager.Comment("reaching state \'S516\'");
                        int temp833;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp834;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp834 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp833);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S548\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp833, "downloadcontextHandleIndex of SynchronizationConfigure, state S548");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp834, "return of SynchronizationConfigure, state S548");
                        this.Manager.Comment("reaching state \'S580\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp835;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp835 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S612\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp835, "return of SynchronizationUploadState, state S612");
                        this.Manager.Comment("reaching state \'S644\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp836;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp836 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S676\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp836, "return of SynchronizationUploadState, state S676");
                        this.Manager.Comment("reaching state \'S708\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp837;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp837 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S740\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp837, "return of SynchronizationUploadState, state S740");
                        this.Manager.Comment("reaching state \'S772\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp838;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp838 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S804\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp838, "return of SynchronizationUploadState, state S804");
                        this.Manager.Comment("reaching state \'S836\'");
                        bool temp839;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp839);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp839);
                        this.Manager.Comment("reaching state \'S868\'");
                        int temp852 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker3)));
                        if ((temp852 == 0)) {
                            this.Manager.Comment("reaching state \'S912\'");
                            int temp840;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp841;
                            bool temp842;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp843;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp843 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp840, out temp841, out temp842);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S976\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp840, "transferBufferIndex of FastTransferSourceGetBuffer, state S976");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp841, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S976");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp842, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S976");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp843, "return of FastTransferSourceGetBuffer, state S976");
                            this.Manager.Comment("reaching state \'S1040\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp844;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp844 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1104\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp844, "return of Release, state S1104");
                            this.Manager.Comment("reaching state \'S1168\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp845;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp845 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1232\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp845, "return of Release, state S1232");
                            this.Manager.Comment("reaching state \'S1296\'");
                            goto label48;
                        }
                        if ((temp852 == 1)) {
                            this.Manager.Comment("reaching state \'S913\'");
                            int temp846;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp847;
                            bool temp848;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp849;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp849 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp846, out temp847, out temp848);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S977\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp846, "transferBufferIndex of FastTransferSourceGetBuffer, state S977");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp847, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S977");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp848, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S977");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp849, "return of FastTransferSourceGetBuffer, state S977");
                            this.Manager.Comment("reaching state \'S1041\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp850;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp850 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1105\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp850, "return of Release, state S1105");
                            this.Manager.Comment("reaching state \'S1169\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp851;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp851 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1233\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp851, "return of Release, state S1233");
                            this.Manager.Comment("reaching state \'S1297\'");
                            goto label48;
                        }
                        throw new InvalidOperationException("never reached");
                    label48:
;
                        goto label50;
                    }
                    if ((temp874 == 1)) {
                        this.Manager.Comment("reaching state \'S453\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp853;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp853 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S485\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp853, "return of SynchronizationImportDeletes, state S485");
                        this.Manager.Comment("reaching state \'S517\'");
                        int temp854;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp855;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp855 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp854);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S549\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp854, "downloadcontextHandleIndex of SynchronizationConfigure, state S549");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp855, "return of SynchronizationConfigure, state S549");
                        this.Manager.Comment("reaching state \'S581\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp856;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp856 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S613\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp856, "return of SynchronizationUploadState, state S613");
                        this.Manager.Comment("reaching state \'S645\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp857;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp857 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S677\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp857, "return of SynchronizationUploadState, state S677");
                        this.Manager.Comment("reaching state \'S709\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp858;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp858 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S741\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp858, "return of SynchronizationUploadState, state S741");
                        this.Manager.Comment("reaching state \'S773\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp859;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp859 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S805\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp859, "return of SynchronizationUploadState, state S805");
                        this.Manager.Comment("reaching state \'S837\'");
                        bool temp860;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp860);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp860);
                        this.Manager.Comment("reaching state \'S869\'");
                        int temp873 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker6)));
                        if ((temp873 == 0)) {
                            this.Manager.Comment("reaching state \'S914\'");
                            int temp861;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp862;
                            bool temp863;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp864;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp864 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp861, out temp862, out temp863);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S978\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp861, "transferBufferIndex of FastTransferSourceGetBuffer, state S978");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp862, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S978");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp863, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S978");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp864, "return of FastTransferSourceGetBuffer, state S978");
                            this.Manager.Comment("reaching state \'S1042\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp865;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp865 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1106\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp865, "return of Release, state S1106");
                            this.Manager.Comment("reaching state \'S1170\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp866;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp866 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1234\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp866, "return of Release, state S1234");
                            this.Manager.Comment("reaching state \'S1298\'");
                            goto label49;
                        }
                        if ((temp873 == 1)) {
                            this.Manager.Comment("reaching state \'S915\'");
                            int temp867;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp868;
                            bool temp869;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp870;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp870 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp867, out temp868, out temp869);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S979\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp867, "transferBufferIndex of FastTransferSourceGetBuffer, state S979");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp868, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S979");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp869, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S979");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp870, "return of FastTransferSourceGetBuffer, state S979");
                            this.Manager.Comment("reaching state \'S1043\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp871;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp871 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1107\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp871, "return of Release, state S1107");
                            this.Manager.Comment("reaching state \'S1171\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp872;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp872 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1235\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp872, "return of Release, state S1235");
                            this.Manager.Comment("reaching state \'S1299\'");
                            goto label49;
                        }
                        throw new InvalidOperationException("never reached");
                    label49:
;
                        goto label50;
                    }
                    throw new InvalidOperationException("never reached");
                label50:
;
                    goto label54;
                }
                if ((temp929 == 1)) {
                    this.Manager.Comment("reaching state \'S223\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp875;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp875 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S239\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp875, "return of SynchronizationUploadState, state S239");
                    this.Manager.Comment("reaching state \'S255\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp876;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp876 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S271\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp876, "return of SynchronizationUploadState, state S271");
                    this.Manager.Comment("reaching state \'S287\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp877;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp877 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S303\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp877, "return of SynchronizationUploadState, state S303");
                    this.Manager.Comment("reaching state \'S319\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp878;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp878 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S335\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp878, "return of SynchronizationUploadState, state S335");
                    this.Manager.Comment("reaching state \'S351\'");
                    int temp879;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp880;
                    bool temp881;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp882;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp882 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp879, out temp880, out temp881);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S367\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp879, "transferBufferIndex of FastTransferSourceGetBuffer, state S367");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp880, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S367");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp881, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S367");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp882, "return of FastTransferSourceGetBuffer, state S367");
                    this.Manager.Comment("reaching state \'S383\'");
                    int temp883;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp884;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp884 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp883);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S399\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp883, "synchronizationHandleIndex of SynchronizationOpenCollector, state S399");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp884, "return of SynchronizationOpenCollector, state S399");
                    this.Manager.Comment("reaching state \'S415\'");
                    bool temp885;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp885);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp885);
                    this.Manager.Comment("reaching state \'S431\'");
                    int temp928 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker11)));
                    if ((temp928 == 0)) {
                        this.Manager.Comment("reaching state \'S454\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp886;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp886 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S486\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp886, "return of SynchronizationImportDeletes, state S486");
                        this.Manager.Comment("reaching state \'S518\'");
                        int temp887;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp888;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp888 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp887);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S550\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp887, "downloadcontextHandleIndex of SynchronizationConfigure, state S550");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp888, "return of SynchronizationConfigure, state S550");
                        this.Manager.Comment("reaching state \'S582\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp889;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp889 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S614\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp889, "return of SynchronizationUploadState, state S614");
                        this.Manager.Comment("reaching state \'S646\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp890;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp890 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S678\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp890, "return of SynchronizationUploadState, state S678");
                        this.Manager.Comment("reaching state \'S710\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp891;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp891 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S742\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp891, "return of SynchronizationUploadState, state S742");
                        this.Manager.Comment("reaching state \'S774\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp892;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp892 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S806\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp892, "return of SynchronizationUploadState, state S806");
                        this.Manager.Comment("reaching state \'S838\'");
                        bool temp893;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp893);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp893);
                        this.Manager.Comment("reaching state \'S870\'");
                        int temp906 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker10)));
                        if ((temp906 == 0)) {
                            this.Manager.Comment("reaching state \'S916\'");
                            int temp894;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp895;
                            bool temp896;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp897;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp897 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp894, out temp895, out temp896);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S980\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp894, "transferBufferIndex of FastTransferSourceGetBuffer, state S980");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp895, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S980");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp896, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S980");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp897, "return of FastTransferSourceGetBuffer, state S980");
                            this.Manager.Comment("reaching state \'S1044\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp898;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp898 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1108\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp898, "return of Release, state S1108");
                            this.Manager.Comment("reaching state \'S1172\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp899;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp899 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1236\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp899, "return of Release, state S1236");
                            this.Manager.Comment("reaching state \'S1300\'");
                            goto label51;
                        }
                        if ((temp906 == 1)) {
                            this.Manager.Comment("reaching state \'S917\'");
                            int temp900;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp901;
                            bool temp902;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp903;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp903 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp900, out temp901, out temp902);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S981\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp900, "transferBufferIndex of FastTransferSourceGetBuffer, state S981");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp901, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S981");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp902, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S981");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp903, "return of FastTransferSourceGetBuffer, state S981");
                            this.Manager.Comment("reaching state \'S1045\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp904;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp904 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1109\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp904, "return of Release, state S1109");
                            this.Manager.Comment("reaching state \'S1173\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp905;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp905 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1237\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp905, "return of Release, state S1237");
                            this.Manager.Comment("reaching state \'S1301\'");
                            goto label51;
                        }
                        throw new InvalidOperationException("never reached");
                    label51:
;
                        goto label53;
                    }
                    if ((temp928 == 1)) {
                        this.Manager.Comment("reaching state \'S455\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp907;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],0)\'");
                        temp907 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S487\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp907, "return of SynchronizationImportDeletes, state S487");
                        this.Manager.Comment("reaching state \'S519\'");
                        int temp908;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp909;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|NoDeletions|IgnoreNoLongerInScope|Normal,Eid|OrderByDeliveryTime,[\"PidTag" +
                                "CreationTime\"],out _)\'");
                        temp909 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(39)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp908);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S551\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp908, "downloadcontextHandleIndex of SynchronizationConfigure, state S551");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp909, "return of SynchronizationConfigure, state S551");
                        this.Manager.Comment("reaching state \'S583\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp910;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp910 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S615\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp910, "return of SynchronizationUploadState, state S615");
                        this.Manager.Comment("reaching state \'S647\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp911;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp911 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S679\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp911, "return of SynchronizationUploadState, state S679");
                        this.Manager.Comment("reaching state \'S711\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp912;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp912 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S743\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp912, "return of SynchronizationUploadState, state S743");
                        this.Manager.Comment("reaching state \'S775\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp913;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp913 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S807\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp913, "return of SynchronizationUploadState, state S807");
                        this.Manager.Comment("reaching state \'S839\'");
                        bool temp914;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp914);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp914);
                        this.Manager.Comment("reaching state \'S871\'");
                        int temp927 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker13)));
                        if ((temp927 == 0)) {
                            this.Manager.Comment("reaching state \'S918\'");
                            int temp915;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp916;
                            bool temp917;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp918;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp918 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp915, out temp916, out temp917);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S982\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp915, "transferBufferIndex of FastTransferSourceGetBuffer, state S982");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp916, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S982");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp917, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S982");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp918, "return of FastTransferSourceGetBuffer, state S982");
                            this.Manager.Comment("reaching state \'S1046\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp919;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp919 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1110\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp919, "return of Release, state S1110");
                            this.Manager.Comment("reaching state \'S1174\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp920;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp920 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1238\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp920, "return of Release, state S1238");
                            this.Manager.Comment("reaching state \'S1302\'");
                            goto label52;
                        }
                        if ((temp927 == 1)) {
                            this.Manager.Comment("reaching state \'S919\'");
                            int temp921;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp922;
                            bool temp923;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp924;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp924 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp921, out temp922, out temp923);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2165");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2166");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1334");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2168");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S983\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp921, "transferBufferIndex of FastTransferSourceGetBuffer, state S983");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp922, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S983");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp923, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S983");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp924, "return of FastTransferSourceGetBuffer, state S983");
                            this.Manager.Comment("reaching state \'S1047\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp925;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp925 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1111\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp925, "return of Release, state S1111");
                            this.Manager.Comment("reaching state \'S1175\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp926;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp926 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1239\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp926, "return of Release, state S1239");
                            this.Manager.Comment("reaching state \'S1303\'");
                            goto label52;
                        }
                        throw new InvalidOperationException("never reached");
                    label52:
;
                        goto label53;
                    }
                    throw new InvalidOperationException("never reached");
                label53:
;
                    goto label54;
                }
                throw new InvalidOperationException("never reached");
            label54:
;
                goto label55;
            }
            if ((temp930 == 1)) {
                this.Manager.Comment("reaching state \'S23\'");
                goto label55;
            }
            throw new InvalidOperationException("never reached");
        label55:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S211");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S430");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S868");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S868");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S430");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S869");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S869");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S211");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S431");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S870");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S870");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S431");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S871");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S871");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite6CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        #endregion
        
        #region Test Starting in S8
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7");
            this.Manager.Comment("reaching state \'S8\'");
            bool temp931;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp931);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp931);
            this.Manager.Comment("reaching state \'S9\'");
            int temp1063 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp1063 == 0)) {
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S44\'");
                int temp932;
                int temp933;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp934;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp934 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp932, out temp933);
                this.Manager.Comment("reaching state \'S52\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp932, "logonHandleIndex of Logon, state S52");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp933, "inboxFolderIdIndex of Logon, state S52");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp934, "return of Logon, state S52");
                this.Manager.Comment("reaching state \'S60\'");
                int temp935;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp936;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp936 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp935);
                this.Manager.Comment("reaching state \'S68\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp935, "folderHandleIndex of OpenFolder, state S68");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp936, "return of OpenFolder, state S68");
                this.Manager.Comment("reaching state \'S76\'");
                int temp937;
                int temp938;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp939;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp939 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp937, out temp938);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S84\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp937, "folderIdIndex of CreateFolder, state S84");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp938, "folderHandleIndex of CreateFolder, state S84");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp939, "return of CreateFolder, state S84");
                this.Manager.Comment("reaching state \'S92\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp940;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp940 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S100\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp940, "return of GetLocalReplicaIds, state S100");
                this.Manager.Comment("reaching state \'S108\'");
                int temp941;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp942;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp942 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp941);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S116\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp941, "synchronizationHandleIndex of SynchronizationOpenCollector, state S116");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp942, "return of SynchronizationOpenCollector, state S116");
                this.Manager.Comment("reaching state \'S124\'");
                int temp943;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp944;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp944 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp943);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S132\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp943, "importMessageHandleIndex of SynchronizationImportMessageChange, state S132");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp944, "return of SynchronizationImportMessageChange, state S132");
                this.Manager.Comment("reaching state \'S140\'");
                int temp945;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp946;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp946 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp945);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S148\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp945, "messageIdIndex of SaveChangesMessage, state S148");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp946, "return of SaveChangesMessage, state S148");
                this.Manager.Comment("reaching state \'S156\'");
                int temp947;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp948;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp948 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp947);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S164\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp947, "importMessageHandleIndex of SynchronizationImportMessageChange, state S164");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp948, "return of SynchronizationImportMessageChange, state S164");
                this.Manager.Comment("reaching state \'S172\'");
                int temp949;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp950;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp950 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp949);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S180\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp949, "messageIdIndex of SaveChangesMessage, state S180");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp950, "return of SaveChangesMessage, state S180");
                this.Manager.Comment("reaching state \'S188\'");
                int temp951;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp952;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                temp952 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp951);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S196\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp951, "downloadcontextHandleIndex of SynchronizationConfigure, state S196");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp952, "return of SynchronizationConfigure, state S196");
                this.Manager.Comment("reaching state \'S204\'");
                bool temp953;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp953);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp953);
                this.Manager.Comment("reaching state \'S212\'");
                int temp1062 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker7)));
                if ((temp1062 == 0)) {
                    this.Manager.Comment("reaching state \'S224\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp954;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp954 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S240\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp954, "return of SynchronizationUploadState, state S240");
                    this.Manager.Comment("reaching state \'S256\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp955;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp955 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S272\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp955, "return of SynchronizationUploadState, state S272");
                    this.Manager.Comment("reaching state \'S288\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp956;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp956 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S304\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp956, "return of SynchronizationUploadState, state S304");
                    this.Manager.Comment("reaching state \'S320\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp957;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp957 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S336\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp957, "return of SynchronizationUploadState, state S336");
                    this.Manager.Comment("reaching state \'S352\'");
                    int temp958;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp959;
                    bool temp960;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp961;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp961 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp958, out temp959, out temp960);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S368\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp958, "transferBufferIndex of FastTransferSourceGetBuffer, state S368");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp959, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S368");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp960, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S368");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp961, "return of FastTransferSourceGetBuffer, state S368");
                    this.Manager.Comment("reaching state \'S384\'");
                    int temp962;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp963;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp963 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp962);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S400\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp962, "synchronizationHandleIndex of SynchronizationOpenCollector, state S400");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp963, "return of SynchronizationOpenCollector, state S400");
                    this.Manager.Comment("reaching state \'S416\'");
                    bool temp964;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp964);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp964);
                    this.Manager.Comment("reaching state \'S432\'");
                    int temp1007 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker4)));
                    if ((temp1007 == 0)) {
                        this.Manager.Comment("reaching state \'S456\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp965;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp965 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S488\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp965, "return of SynchronizationImportDeletes, state S488");
                        this.Manager.Comment("reaching state \'S520\'");
                        int temp966;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp967;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp967 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp966);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S552\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp966, "downloadcontextHandleIndex of SynchronizationConfigure, state S552");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp967, "return of SynchronizationConfigure, state S552");
                        this.Manager.Comment("reaching state \'S584\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp968;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp968 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S616\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp968, "return of SynchronizationUploadState, state S616");
                        this.Manager.Comment("reaching state \'S648\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp969;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp969 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S680\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp969, "return of SynchronizationUploadState, state S680");
                        this.Manager.Comment("reaching state \'S712\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp970;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp970 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S744\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp970, "return of SynchronizationUploadState, state S744");
                        this.Manager.Comment("reaching state \'S776\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp971;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp971 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S808\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp971, "return of SynchronizationUploadState, state S808");
                        this.Manager.Comment("reaching state \'S840\'");
                        bool temp972;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp972);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp972);
                        this.Manager.Comment("reaching state \'S872\'");
                        int temp985 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker3)));
                        if ((temp985 == 0)) {
                            this.Manager.Comment("reaching state \'S920\'");
                            int temp973;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp974;
                            bool temp975;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp976;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp976 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp973, out temp974, out temp975);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S984\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp973, "transferBufferIndex of FastTransferSourceGetBuffer, state S984");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp974, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S984");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp975, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S984");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp976, "return of FastTransferSourceGetBuffer, state S984");
                            this.Manager.Comment("reaching state \'S1048\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp977;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp977 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1112\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp977, "return of Release, state S1112");
                            this.Manager.Comment("reaching state \'S1176\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp978;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp978 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1240\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp978, "return of Release, state S1240");
                            this.Manager.Comment("reaching state \'S1304\'");
                            goto label56;
                        }
                        if ((temp985 == 1)) {
                            this.Manager.Comment("reaching state \'S921\'");
                            int temp979;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp980;
                            bool temp981;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp982;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp982 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp979, out temp980, out temp981);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S985\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp979, "transferBufferIndex of FastTransferSourceGetBuffer, state S985");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp980, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S985");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp981, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S985");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp982, "return of FastTransferSourceGetBuffer, state S985");
                            this.Manager.Comment("reaching state \'S1049\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp983;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp983 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1113\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp983, "return of Release, state S1113");
                            this.Manager.Comment("reaching state \'S1177\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp984;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp984 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1241\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp984, "return of Release, state S1241");
                            this.Manager.Comment("reaching state \'S1305\'");
                            goto label56;
                        }
                        throw new InvalidOperationException("never reached");
                    label56:
;
                        goto label58;
                    }
                    if ((temp1007 == 1)) {
                        this.Manager.Comment("reaching state \'S457\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp986;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp986 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                        this.Manager.Comment("reaching state \'S489\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp986, "return of SynchronizationImportDeletes, state S489");
                        this.Manager.Comment("reaching state \'S521\'");
                        int temp987;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp988;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp988 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp987);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S553\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp987, "downloadcontextHandleIndex of SynchronizationConfigure, state S553");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp988, "return of SynchronizationConfigure, state S553");
                        this.Manager.Comment("reaching state \'S585\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp989;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp989 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S617\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp989, "return of SynchronizationUploadState, state S617");
                        this.Manager.Comment("reaching state \'S649\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp990;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp990 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S681\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp990, "return of SynchronizationUploadState, state S681");
                        this.Manager.Comment("reaching state \'S713\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp991;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp991 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S745\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp991, "return of SynchronizationUploadState, state S745");
                        this.Manager.Comment("reaching state \'S777\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp992;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp992 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S809\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp992, "return of SynchronizationUploadState, state S809");
                        this.Manager.Comment("reaching state \'S841\'");
                        bool temp993;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp993);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp993);
                        this.Manager.Comment("reaching state \'S873\'");
                        int temp1006 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker6)));
                        if ((temp1006 == 0)) {
                            this.Manager.Comment("reaching state \'S922\'");
                            int temp994;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp995;
                            bool temp996;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp997;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp997 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp994, out temp995, out temp996);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S986\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp994, "transferBufferIndex of FastTransferSourceGetBuffer, state S986");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp995, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S986");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp996, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S986");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp997, "return of FastTransferSourceGetBuffer, state S986");
                            this.Manager.Comment("reaching state \'S1050\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp998;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp998 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1114\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp998, "return of Release, state S1114");
                            this.Manager.Comment("reaching state \'S1178\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp999;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp999 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1242\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp999, "return of Release, state S1242");
                            this.Manager.Comment("reaching state \'S1306\'");
                            goto label57;
                        }
                        if ((temp1006 == 1)) {
                            this.Manager.Comment("reaching state \'S923\'");
                            int temp1000;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp1001;
                            bool temp1002;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1003;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp1003 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp1000, out temp1001, out temp1002);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S987\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1000, "transferBufferIndex of FastTransferSourceGetBuffer, state S987");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp1001, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S987");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp1002, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S987");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1003, "return of FastTransferSourceGetBuffer, state S987");
                            this.Manager.Comment("reaching state \'S1051\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1004;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp1004 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1115\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1004, "return of Release, state S1115");
                            this.Manager.Comment("reaching state \'S1179\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1005;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp1005 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1243\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1005, "return of Release, state S1243");
                            this.Manager.Comment("reaching state \'S1307\'");
                            goto label57;
                        }
                        throw new InvalidOperationException("never reached");
                    label57:
;
                        goto label58;
                    }
                    throw new InvalidOperationException("never reached");
                label58:
;
                    goto label62;
                }
                if ((temp1062 == 1)) {
                    this.Manager.Comment("reaching state \'S225\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1008;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp1008 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S241\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1008, "return of SynchronizationUploadState, state S241");
                    this.Manager.Comment("reaching state \'S257\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1009;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp1009 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S273\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1009, "return of SynchronizationUploadState, state S273");
                    this.Manager.Comment("reaching state \'S289\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1010;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp1010 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S305\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1010, "return of SynchronizationUploadState, state S305");
                    this.Manager.Comment("reaching state \'S321\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1011;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp1011 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S337\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1011, "return of SynchronizationUploadState, state S337");
                    this.Manager.Comment("reaching state \'S353\'");
                    int temp1012;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp1013;
                    bool temp1014;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1015;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp1015 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp1012, out temp1013, out temp1014);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S369\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDeletio" +
                            "n=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLonger" +
                            "InScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fals" +
                            "e,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCnse" +
                            "tReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNe" +
                            "wCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByLa" +
                            "stModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEcW" +
                            "arningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFol" +
                            "derContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTa" +
                            "gFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreceded" +
                            "ByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fal" +
                            "se,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermission" +
                            "MessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecede" +
                            "dByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropert" +
                            "iesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOth" +
                            "erCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsF" +
                            "olderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjN" +
                            "otOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPro" +
                            "pertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=" +
                            "AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLis" +
                            "t=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=" +
                            "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                            "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessage" +
                            "Content=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChild" +
                            "ren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientP" +
                            "recededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperties" +
                            "InUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)" +
                            ",AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1012, "transferBufferIndex of FastTransferSourceGetBuffer, state S369");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp1013, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S369");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp1014, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S369");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1015, "return of FastTransferSourceGetBuffer, state S369");
                    this.Manager.Comment("reaching state \'S385\'");
                    int temp1016;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1017;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp1017 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp1016);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S401\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp1016, "synchronizationHandleIndex of SynchronizationOpenCollector, state S401");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1017, "return of SynchronizationOpenCollector, state S401");
                    this.Manager.Comment("reaching state \'S417\'");
                    bool temp1018;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp1018);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1018);
                    this.Manager.Comment("reaching state \'S433\'");
                    int temp1061 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker11)));
                    if ((temp1061 == 0)) {
                        this.Manager.Comment("reaching state \'S458\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1019;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp1019 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S490\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1019, "return of SynchronizationImportDeletes, state S490");
                        this.Manager.Comment("reaching state \'S522\'");
                        int temp1020;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1021;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp1021 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp1020);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S554\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp1020, "downloadcontextHandleIndex of SynchronizationConfigure, state S554");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1021, "return of SynchronizationConfigure, state S554");
                        this.Manager.Comment("reaching state \'S586\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1022;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp1022 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S618\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1022, "return of SynchronizationUploadState, state S618");
                        this.Manager.Comment("reaching state \'S650\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1023;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp1023 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S682\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1023, "return of SynchronizationUploadState, state S682");
                        this.Manager.Comment("reaching state \'S714\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1024;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp1024 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S746\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1024, "return of SynchronizationUploadState, state S746");
                        this.Manager.Comment("reaching state \'S778\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1025;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp1025 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S810\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1025, "return of SynchronizationUploadState, state S810");
                        this.Manager.Comment("reaching state \'S842\'");
                        bool temp1026;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp1026);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1026);
                        this.Manager.Comment("reaching state \'S874\'");
                        int temp1039 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker10)));
                        if ((temp1039 == 0)) {
                            this.Manager.Comment("reaching state \'S924\'");
                            int temp1027;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp1028;
                            bool temp1029;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1030;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp1030 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp1027, out temp1028, out temp1029);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S988\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                    "en={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1027, "transferBufferIndex of FastTransferSourceGetBuffer, state S988");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp1028, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S988");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp1029, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S988");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1030, "return of FastTransferSourceGetBuffer, state S988");
                            this.Manager.Comment("reaching state \'S1052\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1031;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp1031 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1116\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1031, "return of Release, state S1116");
                            this.Manager.Comment("reaching state \'S1180\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1032;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp1032 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1244\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1032, "return of Release, state S1244");
                            this.Manager.Comment("reaching state \'S1308\'");
                            goto label59;
                        }
                        if ((temp1039 == 1)) {
                            this.Manager.Comment("reaching state \'S925\'");
                            int temp1033;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp1034;
                            bool temp1035;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1036;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp1036 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp1033, out temp1034, out temp1035);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S989\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTim" +
                                    "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                    "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                    "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                    "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                    "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                    "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                    "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                    "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                    "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                    "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                    "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                    ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                    "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                    "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                    "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                    "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                    "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                    "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                    "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                    "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                    "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                    "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                    "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                    "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                    " False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1033, "transferBufferIndex of FastTransferSourceGetBuffer, state S989");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp1034, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S989");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp1035, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S989");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1036, "return of FastTransferSourceGetBuffer, state S989");
                            this.Manager.Comment("reaching state \'S1053\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1037;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp1037 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1117\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1037, "return of Release, state S1117");
                            this.Manager.Comment("reaching state \'S1181\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1038;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp1038 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1245\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1038, "return of Release, state S1245");
                            this.Manager.Comment("reaching state \'S1309\'");
                            goto label59;
                        }
                        throw new InvalidOperationException("never reached");
                    label59:
;
                        goto label61;
                    }
                    if ((temp1061 == 1)) {
                        this.Manager.Comment("reaching state \'S459\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1040;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,8,[3],2)\'");
                        temp1040 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 8, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                        this.Manager.Comment("reaching state \'S491\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp1040, "return of SynchronizationImportDeletes, state S491");
                        this.Manager.Comment("reaching state \'S523\'");
                        int temp1041;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1042;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                "nicode|Normal,Eid|OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                        temp1042 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp1041);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S555\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp1041, "downloadcontextHandleIndex of SynchronizationConfigure, state S555");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1042, "return of SynchronizationConfigure, state S555");
                        this.Manager.Comment("reaching state \'S587\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1043;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,1)\'");
                        temp1043 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S619\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1043, "return of SynchronizationUploadState, state S619");
                        this.Manager.Comment("reaching state \'S651\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1044;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,1)\'");
                        temp1044 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S683\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1044, "return of SynchronizationUploadState, state S683");
                        this.Manager.Comment("reaching state \'S715\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1045;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,1)\'");
                        temp1045 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                        this.Manager.Comment("reaching state \'S747\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1045, "return of SynchronizationUploadState, state S747");
                        this.Manager.Comment("reaching state \'S779\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1046;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,1)\'");
                        temp1046 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                        this.Manager.Comment("reaching state \'S811\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1046, "return of SynchronizationUploadState, state S811");
                        this.Manager.Comment("reaching state \'S843\'");
                        bool temp1047;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp1047);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1047);
                        this.Manager.Comment("reaching state \'S875\'");
                        int temp1060 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsDeletion_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker13)));
                        if ((temp1060 == 0)) {
                            this.Manager.Comment("reaching state \'S926\'");
                            int temp1048;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp1049;
                            bool temp1050;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1051;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp1051 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp1048, out temp1049, out temp1050);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S990\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1048, "transferBufferIndex of FastTransferSourceGetBuffer, state S990");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp1049, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S990");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp1050, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S990");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1051, "return of FastTransferSourceGetBuffer, state S990");
                            this.Manager.Comment("reaching state \'S1054\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1052;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp1052 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1118\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1052, "return of Release, state S1118");
                            this.Manager.Comment("reaching state \'S1182\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1053;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp1053 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1246\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1053, "return of Release, state S1246");
                            this.Manager.Comment("reaching state \'S1310\'");
                            goto label60;
                        }
                        if ((temp1060 == 1)) {
                            this.Manager.Comment("reaching state \'S927\'");
                            int temp1054;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp1055;
                            bool temp1056;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1057;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                            temp1057 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp1054, out temp1055, out temp1056);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S991\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                    "ven={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1054, "transferBufferIndex of FastTransferSourceGetBuffer, state S991");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp1055, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S991");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp1056, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S991");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1057, "return of FastTransferSourceGetBuffer, state S991");
                            this.Manager.Comment("reaching state \'S1055\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1058;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp1058 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S1119\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1058, "return of Release, state S1119");
                            this.Manager.Comment("reaching state \'S1183\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1059;
                            this.Manager.Comment("executing step \'call Release(1,7)\'");
                            temp1059 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                            this.Manager.Comment("reaching state \'S1247\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1059, "return of Release, state S1247");
                            this.Manager.Comment("reaching state \'S1311\'");
                            goto label60;
                        }
                        throw new InvalidOperationException("never reached");
                    label60:
;
                        goto label61;
                    }
                    throw new InvalidOperationException("never reached");
                label61:
;
                    goto label62;
                }
                throw new InvalidOperationException("never reached");
            label62:
;
                goto label63;
            }
            if ((temp1063 == 1)) {
                this.Manager.Comment("reaching state \'S25\'");
                goto label63;
            }
            throw new InvalidOperationException("never reached");
        label63:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S212");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S432");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S872");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S872");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S432");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S873");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S873");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S212");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S433");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S874");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S874");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S433");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S875");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S875");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletion_TestSuite7CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        #endregion
    }
}