//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S06_SyncICSContentsDeletionCheck_TestSuite : PtfTestClassBase {
        
        public S06_SyncICSContentsDeletionCheck_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp270 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp270 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S5\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S6");
                this.Manager.Comment("reaching state \'S7\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S8");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S8");
                this.Manager.Comment("reaching state \'S9\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S10");
                this.Manager.Comment("reaching state \'S11\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp9 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of GetLocalReplicaIds, state S12");
                this.Manager.Comment("reaching state \'S13\'");
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "synchronizationHandleIndex of SynchronizationOpenCollector, state S14");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of SynchronizationOpenCollector, state S14");
                this.Manager.Comment("reaching state \'S15\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp12, "importMessageHandleIndex of SynchronizationImportMessageChange, state S16");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of SynchronizationImportMessageChange, state S16");
                this.Manager.Comment("reaching state \'S17\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp14, "messageIdIndex of SaveChangesMessage, state S18");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SaveChangesMessage, state S18");
                this.Manager.Comment("reaching state \'S19\'");
                int temp16;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp17 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp16);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp16, "importMessageHandleIndex of SynchronizationImportMessageChange, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of SynchronizationImportMessageChange, state S20");
                this.Manager.Comment("reaching state \'S21\'");
                int temp18;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp19 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp18);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S22\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp18, "messageIdIndex of SaveChangesMessage, state S22");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp19, "return of SaveChangesMessage, state S22");
                this.Manager.Comment("reaching state \'S23\'");
                int temp20;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp21 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp20);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp20, "importMessageHandleIndex of SynchronizationImportMessageChange, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of SynchronizationImportMessageChange, state S24");
                this.Manager.Comment("reaching state \'S25\'");
                int temp22;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,7,out _)\'");
                temp23 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 7, out temp22);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp22, "messageIdIndex of SaveChangesMessage, state S26");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of SaveChangesMessage, state S26");
                this.Manager.Comment("reaching state \'S27\'");
                int temp24;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                temp25 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp24);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp24, "downloadcontextHandleIndex of SynchronizationConfigure, state S28");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of SynchronizationConfigure, state S28");
                this.Manager.Comment("reaching state \'S29\'");
                bool temp26;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp26);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp26);
                this.Manager.Comment("reaching state \'S30\'");
                int temp269 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker7)));
                if ((temp269 == 0)) {
                    this.Manager.Comment("reaching state \'S31\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp27;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,0)\'");
                    temp27 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S33\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp27, "return of SynchronizationUploadState, state S33");
                    this.Manager.Comment("reaching state \'S35\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,0)\'");
                    temp28 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S37\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of SynchronizationUploadState, state S37");
                    this.Manager.Comment("reaching state \'S39\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,0)\'");
                    temp29 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S41\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of SynchronizationUploadState, state S41");
                    this.Manager.Comment("reaching state \'S43\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,0)\'");
                    temp30 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S45\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp30, "return of SynchronizationUploadState, state S45");
                    this.Manager.Comment("reaching state \'S47\'");
                    int temp31;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp32;
                    bool temp33;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                    temp34 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp31, out temp32, out temp33);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S49\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False),AbstractMessageC" +
                            "hangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,IsMessageCh" +
                            "angeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPidTagChang" +
                            "eNumberExist=False,MessageIdIndex=5,IsRTFformat=False)},AbstractDeletion=Abstrac" +
                            "tDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLongerInScopeEx" +
                            "ist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=False,FinalIC" +
                            "SState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4,5},IsNewCnsetReadPr" +
                            "opertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetS" +
                            "eenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,IsSortByLastModi" +
                            "ficationTime=False),AbstractFolderContent=AbstractFolderContent(IsPidTagEcWarnin" +
                            "gOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCo" +
                            "ntentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDe" +
                            "lProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPid" +
                            "TagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                            "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                            "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                            "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                            "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                            "ePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsFolder" +
                            "Content=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut" +
                            "=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderProperti" +
                            "esNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=Abstr" +
                            "actFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=Abs" +
                            "tractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageCont" +
                            "ent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=" +
                            "AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrece" +
                            "dedByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertiesInUn" +
                            "icodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)))))" +
                            ",SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=0,IdS" +
                            "etGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyC" +
                            "hangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessageConte" +
                            "nt=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=A" +
                            "bstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPreced" +
                            "edByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertiesInUni" +
                            "codeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False),Abst" +
                            "ractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMes" +
                            "sage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False," +
                            "AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=F" +
                            "alse,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,S" +
                            "tringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsR" +
                            "TFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp31, "transferBufferIndex of FastTransferSourceGetBuffer, state S49");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    3,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            5,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp32, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S49");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp33, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S49");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of FastTransferSourceGetBuffer, state S49");
                    this.Manager.Comment("reaching state \'S51\'");
                    int temp35;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp36;
                    this.Manager.Comment("executing step \'call GetContentsTable(1,3,Initial,out _)\'");
                    temp36 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(0)), out temp35);
                    this.Manager.Comment("reaching state \'S53\'");
                    this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp35, "rowCount of GetContentsTable, state S53");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp36, "return of GetContentsTable, state S53");
                    this.Manager.Comment("reaching state \'S55\'");
                    int temp37;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp38 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp37);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S57\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 9]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp37, "synchronizationHandleIndex of SynchronizationOpenCollector, state S57");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp38, "return of SynchronizationOpenCollector, state S57");
                    this.Manager.Comment("reaching state \'S59\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                    this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,9,[3],0)\'");
                    temp39 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 9, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                3,
                                                ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                    this.Manager.Checkpoint("MS-OXCFXICS_R884");
                    this.Manager.Comment("reaching state \'S61\'");
                    this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of SynchronizationImportDeletes, state S61");
                    this.Manager.Comment("reaching state \'S63\'");
                    int temp40;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                            "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                    temp41 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp40);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S65\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 10]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp40, "downloadcontextHandleIndex of SynchronizationConfigure, state S65");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of SynchronizationConfigure, state S65");
                    this.Manager.Comment("reaching state \'S67\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagIdsetGiven,True,1)\'");
                    temp42 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Comment("reaching state \'S69\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp42, "return of SynchronizationUploadState, state S69");
                    this.Manager.Comment("reaching state \'S71\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp43;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeen,False,1)\'");
                    temp43 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S73\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp43, "return of SynchronizationUploadState, state S73");
                    this.Manager.Comment("reaching state \'S75\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetRead,False,1)\'");
                    temp44 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S77\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of SynchronizationUploadState, state S77");
                    this.Manager.Comment("reaching state \'S79\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeenFAI,False,1)\'" +
                            "");
                    temp45 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                    this.Manager.Comment("reaching state \'S81\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of SynchronizationUploadState, state S81");
                    this.Manager.Comment("reaching state \'S83\'");
                    bool temp46;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp46);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp46);
                    this.Manager.Comment("reaching state \'S85\'");
                    int temp147 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker4)));
                    if ((temp147 == 0)) {
                        this.Manager.Comment("reaching state \'S87\'");
                        int temp47;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp48;
                        bool temp49;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,10,Normal,out _,out _,out _)\'");
                        temp50 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp47, out temp48, out temp49);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S91\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                "en={4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTi" +
                                "me=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolde" +
                                "rContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXF" +
                                "olderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubF" +
                                "olderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFo" +
                                "lderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPi" +
                                "dTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCo" +
                                "ntent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildr" +
                                "en(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=" +
                                "False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,S" +
                                "tringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Ab" +
                                "stractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fals" +
                                "e,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotO" +
                                "ut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fal" +
                                "se,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelP" +
                                "rop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Ab" +
                                "stractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,I" +
                                "sNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fa" +
                                "lse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                "e,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOu" +
                                "t=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermi" +
                                "ssionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPr" +
                                "ecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPr" +
                                "opertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperties" +
                                "InOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),ou" +
                                "t False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp47, "transferBufferIndex of FastTransferSourceGetBuffer, state S91");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                true,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp48, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S91");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp49, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S91");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of FastTransferSourceGetBuffer, state S91");
                        this.Manager.Comment("reaching state \'S95\'");
                        int temp51;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                        this.Manager.Comment("executing step \'call GetContentsTable(1,3,SoftDeleteCheck,out _)\'");
                        temp52 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(1)), out temp51);
                        this.Manager.Comment("reaching state \'S99\'");
                        this.Manager.Comment("checking step \'return GetContentsTable/[out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp51, "rowCount of GetContentsTable, state S99");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of GetContentsTable, state S99");
                        this.Manager.Comment("reaching state \'S103\'");
                        int temp53;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                        this.Manager.Comment("executing step \'call GetContentsTable(1,3,Initial,out _)\'");
                        temp54 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(0)), out temp53);
                        this.Manager.Comment("reaching state \'S107\'");
                        this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp53, "rowCount of GetContentsTable, state S107");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of GetContentsTable, state S107");
                        this.Manager.Comment("reaching state \'S111\'");
                        int temp55;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                        temp56 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp55);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S115\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 11]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp55, "synchronizationHandleIndex of SynchronizationOpenCollector, state S115");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp56, "return of SynchronizationOpenCollector, state S115");
                        this.Manager.Comment("reaching state \'S119\'");
                        bool temp57;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp57);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp57);
                        this.Manager.Comment("reaching state \'S123\'");
                        int temp96 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker3)));
                        if ((temp96 == 0)) {
                            this.Manager.Comment("reaching state \'S127\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp58;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,11,[4],2)\'");
                            temp58 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 11, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S135\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp58, "return of SynchronizationImportDeletes, state S135");
                            this.Manager.Comment("reaching state \'S143\'");
                            int temp59;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp60;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                            temp60 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp59);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S151\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 12]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp59, "downloadcontextHandleIndex of SynchronizationConfigure, state S151");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp60, "return of SynchronizationConfigure, state S151");
                            this.Manager.Comment("reaching state \'S159\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagIdsetGiven,True,1)\'");
                            temp61 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Comment("reaching state \'S167\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp61, "return of SynchronizationUploadState, state S167");
                            this.Manager.Comment("reaching state \'S175\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeen,False,1)\'");
                            temp62 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S183\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp62, "return of SynchronizationUploadState, state S183");
                            this.Manager.Comment("reaching state \'S191\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetRead,False,1)\'");
                            temp63 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S199\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of SynchronizationUploadState, state S199");
                            this.Manager.Comment("reaching state \'S207\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeenFAI,False,1)\'" +
                                    "");
                            temp64 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S215\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of SynchronizationUploadState, state S215");
                            this.Manager.Comment("reaching state \'S223\'");
                            int temp65;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp66;
                            bool temp67;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp68;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                            temp68 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp65, out temp66, out temp67);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S231\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiv" +
                                    "en={5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp65, "transferBufferIndex of FastTransferSourceGetBuffer, state S231");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    3,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp66, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S231");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp67, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S231");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp68, "return of FastTransferSourceGetBuffer, state S231");
                            this.Manager.Comment("reaching state \'S239\'");
                            int temp69;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp70;
                            this.Manager.Comment("executing step \'call GetContentsTable(1,3,HardDeleteCheck,out _)\'");
                            temp70 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp69);
                            this.Manager.Comment("reaching state \'S247\'");
                            this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp69, "rowCount of GetContentsTable, state S247");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp70, "return of GetContentsTable, state S247");
                            this.Manager.Comment("reaching state \'S255\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp71 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S263\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of Release, state S263");
                            this.Manager.Comment("reaching state \'S271\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                            this.Manager.Comment("executing step \'call Release(1,8)\'");
                            temp72 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                            this.Manager.Comment("reaching state \'S279\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of Release, state S279");
                            this.Manager.Comment("reaching state \'S287\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                            this.Manager.Comment("executing step \'call Release(1,9)\'");
                            temp73 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                            this.Manager.Comment("reaching state \'S295\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of Release, state S295");
                            this.Manager.Comment("reaching state \'S303\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                            this.Manager.Comment("executing step \'call Release(1,10)\'");
                            temp74 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                            this.Manager.Comment("reaching state \'S311\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of Release, state S311");
                            this.Manager.Comment("reaching state \'S319\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                            this.Manager.Comment("executing step \'call Release(1,11)\'");
                            temp75 = this.IMS_OXCFXICSAdapterInstance.Release(1, 11);
                            this.Manager.Comment("reaching state \'S327\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of Release, state S327");
                            this.Manager.Comment("reaching state \'S335\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp76;
                            this.Manager.Comment("executing step \'call Release(1,12)\'");
                            temp76 = this.IMS_OXCFXICSAdapterInstance.Release(1, 12);
                            this.Manager.Comment("reaching state \'S343\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp76, "return of Release, state S343");
                            this.Manager.Comment("reaching state \'S351\'");
                            goto label0;
                        }
                        if ((temp96 == 1)) {
                            this.Manager.Comment("reaching state \'S128\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp77;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,11,[4],2)\'");
                            temp77 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 11, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                            this.Manager.Comment("reaching state \'S136\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp77, "return of SynchronizationImportDeletes, state S136");
                            this.Manager.Comment("reaching state \'S144\'");
                            int temp78;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp79;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                            temp79 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp78);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S152\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 12]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp78, "downloadcontextHandleIndex of SynchronizationConfigure, state S152");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp79, "return of SynchronizationConfigure, state S152");
                            this.Manager.Comment("reaching state \'S160\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp80;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagIdsetGiven,True,1)\'");
                            temp80 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Comment("reaching state \'S168\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp80, "return of SynchronizationUploadState, state S168");
                            this.Manager.Comment("reaching state \'S176\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeen,False,1)\'");
                            temp81 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S184\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of SynchronizationUploadState, state S184");
                            this.Manager.Comment("reaching state \'S192\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp82;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetRead,False,1)\'");
                            temp82 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S200\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp82, "return of SynchronizationUploadState, state S200");
                            this.Manager.Comment("reaching state \'S208\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeenFAI,False,1)\'" +
                                    "");
                            temp83 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S216\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of SynchronizationUploadState, state S216");
                            this.Manager.Comment("reaching state \'S224\'");
                            int temp84;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp85;
                            bool temp86;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp87;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                            temp87 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp84, out temp85, out temp86);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S232\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiv" +
                                    "en={4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTi" +
                                    "me=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolde" +
                                    "rContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXF" +
                                    "olderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubF" +
                                    "olderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFo" +
                                    "lderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPi" +
                                    "dTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCo" +
                                    "ntent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildr" +
                                    "en(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=" +
                                    "False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,S" +
                                    "tringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Ab" +
                                    "stractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fals" +
                                    "e,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotO" +
                                    "ut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fal" +
                                    "se,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelP" +
                                    "rop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                    "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Ab" +
                                    "stractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,I" +
                                    "sNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fa" +
                                    "lse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOu" +
                                    "t=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermi" +
                                    "ssionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPr" +
                                    "ecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPr" +
                                    "opertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperties" +
                                    "InOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),ou" +
                                    "t False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp84, "transferBufferIndex of FastTransferSourceGetBuffer, state S232");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    3,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp85, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S232");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp86, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S232");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp87, "return of FastTransferSourceGetBuffer, state S232");
                            this.Manager.Comment("reaching state \'S240\'");
                            int temp88;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp89;
                            this.Manager.Comment("executing step \'call GetContentsTable(1,3,HardDeleteCheck,out _)\'");
                            temp89 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp88);
                            this.Manager.Comment("reaching state \'S248\'");
                            this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp88, "rowCount of GetContentsTable, state S248");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp89, "return of GetContentsTable, state S248");
                            this.Manager.Comment("reaching state \'S256\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp90;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp90 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S264\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp90, "return of Release, state S264");
                            this.Manager.Comment("reaching state \'S272\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                            this.Manager.Comment("executing step \'call Release(1,8)\'");
                            temp91 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                            this.Manager.Comment("reaching state \'S280\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of Release, state S280");
                            this.Manager.Comment("reaching state \'S288\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp92;
                            this.Manager.Comment("executing step \'call Release(1,9)\'");
                            temp92 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                            this.Manager.Comment("reaching state \'S296\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp92, "return of Release, state S296");
                            this.Manager.Comment("reaching state \'S304\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp93;
                            this.Manager.Comment("executing step \'call Release(1,10)\'");
                            temp93 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                            this.Manager.Comment("reaching state \'S312\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp93, "return of Release, state S312");
                            this.Manager.Comment("reaching state \'S320\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp94;
                            this.Manager.Comment("executing step \'call Release(1,11)\'");
                            temp94 = this.IMS_OXCFXICSAdapterInstance.Release(1, 11);
                            this.Manager.Comment("reaching state \'S328\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp94, "return of Release, state S328");
                            this.Manager.Comment("reaching state \'S336\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp95;
                            this.Manager.Comment("executing step \'call Release(1,12)\'");
                            temp95 = this.IMS_OXCFXICSAdapterInstance.Release(1, 12);
                            this.Manager.Comment("reaching state \'S344\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp95, "return of Release, state S344");
                            this.Manager.Comment("reaching state \'S352\'");
                            goto label0;
                        }
                        throw new InvalidOperationException("never reached");
                    label0:
;
                        goto label2;
                    }
                    if ((temp147 == 1)) {
                        this.Manager.Comment("reaching state \'S88\'");
                        int temp97;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp98;
                        bool temp99;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp100;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,10,Normal,out _,out _,out _)\'");
                        temp100 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp97, out temp98, out temp99);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S92\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                "ven={4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                "ut False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp97, "transferBufferIndex of FastTransferSourceGetBuffer, state S92");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                true,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp98, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S92");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp99, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S92");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp100, "return of FastTransferSourceGetBuffer, state S92");
                        this.Manager.Comment("reaching state \'S96\'");
                        int temp101;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp102;
                        this.Manager.Comment("executing step \'call GetContentsTable(1,3,SoftDeleteCheck,out _)\'");
                        temp102 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(1)), out temp101);
                        this.Manager.Comment("reaching state \'S100\'");
                        this.Manager.Comment("checking step \'return GetContentsTable/[out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp101, "rowCount of GetContentsTable, state S100");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp102, "return of GetContentsTable, state S100");
                        this.Manager.Comment("reaching state \'S104\'");
                        int temp103;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp104;
                        this.Manager.Comment("executing step \'call GetContentsTable(1,3,Initial,out _)\'");
                        temp104 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(0)), out temp103);
                        this.Manager.Comment("reaching state \'S108\'");
                        this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp103, "rowCount of GetContentsTable, state S108");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp104, "return of GetContentsTable, state S108");
                        this.Manager.Comment("reaching state \'S112\'");
                        int temp105;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                        temp106 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp105);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S116\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 11]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp105, "synchronizationHandleIndex of SynchronizationOpenCollector, state S116");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of SynchronizationOpenCollector, state S116");
                        this.Manager.Comment("reaching state \'S120\'");
                        bool temp107;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp107);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp107);
                        this.Manager.Comment("reaching state \'S124\'");
                        int temp146 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker6)));
                        if ((temp146 == 0)) {
                            this.Manager.Comment("reaching state \'S129\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp108;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,11,[4],2)\'");
                            temp108 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 11, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S137\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp108, "return of SynchronizationImportDeletes, state S137");
                            this.Manager.Comment("reaching state \'S145\'");
                            int temp109;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp110;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                            temp110 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp109);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S153\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 12]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp109, "downloadcontextHandleIndex of SynchronizationConfigure, state S153");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp110, "return of SynchronizationConfigure, state S153");
                            this.Manager.Comment("reaching state \'S161\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp111;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagIdsetGiven,True,1)\'");
                            temp111 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Comment("reaching state \'S169\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp111, "return of SynchronizationUploadState, state S169");
                            this.Manager.Comment("reaching state \'S177\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeen,False,1)\'");
                            temp112 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S185\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of SynchronizationUploadState, state S185");
                            this.Manager.Comment("reaching state \'S193\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetRead,False,1)\'");
                            temp113 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S201\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp113, "return of SynchronizationUploadState, state S201");
                            this.Manager.Comment("reaching state \'S209\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp114;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeenFAI,False,1)\'" +
                                    "");
                            temp114 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S217\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp114, "return of SynchronizationUploadState, state S217");
                            this.Manager.Comment("reaching state \'S225\'");
                            int temp115;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp116;
                            bool temp117;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp118;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                            temp118 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp115, out temp116, out temp117);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S233\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3,4}," +
                                    "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadS" +
                                    "tateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSet" +
                                    "Given={5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp115, "transferBufferIndex of FastTransferSourceGetBuffer, state S233");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    3,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp116, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S233");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp117, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S233");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp118, "return of FastTransferSourceGetBuffer, state S233");
                            this.Manager.Comment("reaching state \'S241\'");
                            int temp119;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp120;
                            this.Manager.Comment("executing step \'call GetContentsTable(1,3,HardDeleteCheck,out _)\'");
                            temp120 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp119);
                            this.Manager.Comment("reaching state \'S249\'");
                            this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp119, "rowCount of GetContentsTable, state S249");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp120, "return of GetContentsTable, state S249");
                            this.Manager.Comment("reaching state \'S257\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp121;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp121 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S265\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp121, "return of Release, state S265");
                            this.Manager.Comment("reaching state \'S273\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp122;
                            this.Manager.Comment("executing step \'call Release(1,8)\'");
                            temp122 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                            this.Manager.Comment("reaching state \'S281\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp122, "return of Release, state S281");
                            this.Manager.Comment("reaching state \'S289\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp123;
                            this.Manager.Comment("executing step \'call Release(1,9)\'");
                            temp123 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                            this.Manager.Comment("reaching state \'S297\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp123, "return of Release, state S297");
                            this.Manager.Comment("reaching state \'S305\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp124;
                            this.Manager.Comment("executing step \'call Release(1,10)\'");
                            temp124 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                            this.Manager.Comment("reaching state \'S313\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp124, "return of Release, state S313");
                            this.Manager.Comment("reaching state \'S321\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp125;
                            this.Manager.Comment("executing step \'call Release(1,11)\'");
                            temp125 = this.IMS_OXCFXICSAdapterInstance.Release(1, 11);
                            this.Manager.Comment("reaching state \'S329\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp125, "return of Release, state S329");
                            this.Manager.Comment("reaching state \'S337\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp126;
                            this.Manager.Comment("executing step \'call Release(1,12)\'");
                            temp126 = this.IMS_OXCFXICSAdapterInstance.Release(1, 12);
                            this.Manager.Comment("reaching state \'S345\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp126, "return of Release, state S345");
                            this.Manager.Comment("reaching state \'S353\'");
                            goto label1;
                        }
                        if ((temp146 == 1)) {
                            this.Manager.Comment("reaching state \'S130\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp127;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,11,[4],2)\'");
                            temp127 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 11, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                            this.Manager.Comment("reaching state \'S138\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp127, "return of SynchronizationImportDeletes, state S138");
                            this.Manager.Comment("reaching state \'S146\'");
                            int temp128;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp129;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                            temp129 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp128);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S154\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 12]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp128, "downloadcontextHandleIndex of SynchronizationConfigure, state S154");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp129, "return of SynchronizationConfigure, state S154");
                            this.Manager.Comment("reaching state \'S162\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp130;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagIdsetGiven,True,1)\'");
                            temp130 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Comment("reaching state \'S170\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp130, "return of SynchronizationUploadState, state S170");
                            this.Manager.Comment("reaching state \'S178\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp131;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeen,False,1)\'");
                            temp131 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S186\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp131, "return of SynchronizationUploadState, state S186");
                            this.Manager.Comment("reaching state \'S194\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp132;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetRead,False,1)\'");
                            temp132 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S202\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp132, "return of SynchronizationUploadState, state S202");
                            this.Manager.Comment("reaching state \'S210\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp133;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeenFAI,False,1)\'" +
                                    "");
                            temp133 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S218\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp133, "return of SynchronizationUploadState, state S218");
                            this.Manager.Comment("reaching state \'S226\'");
                            int temp134;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp135;
                            bool temp136;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp137;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                            temp137 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp134, out temp135, out temp136);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S234\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGi" +
                                    "ven={4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp134, "transferBufferIndex of FastTransferSourceGetBuffer, state S234");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    3,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp135, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S234");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp136, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S234");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp137, "return of FastTransferSourceGetBuffer, state S234");
                            this.Manager.Comment("reaching state \'S242\'");
                            int temp138;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp139;
                            this.Manager.Comment("executing step \'call GetContentsTable(1,3,HardDeleteCheck,out _)\'");
                            temp139 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp138);
                            this.Manager.Comment("reaching state \'S250\'");
                            this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp138, "rowCount of GetContentsTable, state S250");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp139, "return of GetContentsTable, state S250");
                            this.Manager.Comment("reaching state \'S258\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp140;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp140 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S266\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp140, "return of Release, state S266");
                            this.Manager.Comment("reaching state \'S274\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp141;
                            this.Manager.Comment("executing step \'call Release(1,8)\'");
                            temp141 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                            this.Manager.Comment("reaching state \'S282\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp141, "return of Release, state S282");
                            this.Manager.Comment("reaching state \'S290\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp142;
                            this.Manager.Comment("executing step \'call Release(1,9)\'");
                            temp142 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                            this.Manager.Comment("reaching state \'S298\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp142, "return of Release, state S298");
                            this.Manager.Comment("reaching state \'S306\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp143;
                            this.Manager.Comment("executing step \'call Release(1,10)\'");
                            temp143 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                            this.Manager.Comment("reaching state \'S314\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp143, "return of Release, state S314");
                            this.Manager.Comment("reaching state \'S322\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp144;
                            this.Manager.Comment("executing step \'call Release(1,11)\'");
                            temp144 = this.IMS_OXCFXICSAdapterInstance.Release(1, 11);
                            this.Manager.Comment("reaching state \'S330\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp144, "return of Release, state S330");
                            this.Manager.Comment("reaching state \'S338\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp145;
                            this.Manager.Comment("executing step \'call Release(1,12)\'");
                            temp145 = this.IMS_OXCFXICSAdapterInstance.Release(1, 12);
                            this.Manager.Comment("reaching state \'S346\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp145, "return of Release, state S346");
                            this.Manager.Comment("reaching state \'S354\'");
                            goto label1;
                        }
                        throw new InvalidOperationException("never reached");
                    label1:
;
                        goto label2;
                    }
                    throw new InvalidOperationException("never reached");
                label2:
;
                    goto label6;
                }
                if ((temp269 == 1)) {
                    this.Manager.Comment("reaching state \'S32\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp148;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,0)\'");
                    temp148 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S34\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp148, "return of SynchronizationUploadState, state S34");
                    this.Manager.Comment("reaching state \'S36\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp149;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,0)\'");
                    temp149 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S38\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp149, "return of SynchronizationUploadState, state S38");
                    this.Manager.Comment("reaching state \'S40\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp150;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,0)\'");
                    temp150 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S42\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp150, "return of SynchronizationUploadState, state S42");
                    this.Manager.Comment("reaching state \'S44\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp151;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,0)\'");
                    temp151 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S46\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp151, "return of SynchronizationUploadState, state S46");
                    this.Manager.Comment("reaching state \'S48\'");
                    int temp152;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp153;
                    bool temp154;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp155;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                    temp155 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp152, out temp153, out temp154);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S50\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstrac" +
                            "tMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,Is" +
                            "MessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPi" +
                            "dTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False),AbstractMessageC" +
                            "hangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,IsMessageCh" +
                            "angeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=False,IsPidTagChang" +
                            "eNumberExist=False,MessageIdIndex=5,IsRTFformat=False)},AbstractDeletion=Abstrac" +
                            "tDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLongerInScopeEx" +
                            "ist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=False,FinalIC" +
                            "SState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4,5},IsNewCnsetReadPr" +
                            "opertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetS" +
                            "eenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,IsSortByLastModi" +
                            "ficationTime=False),AbstractFolderContent=AbstractFolderContent(IsPidTagEcWarnin" +
                            "gOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCo" +
                            "ntentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDe" +
                            "lProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPid" +
                            "TagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                            "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                            "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                            "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                            "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                            "ePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(AbsFolder" +
                            "Content=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut" +
                            "=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderProperti" +
                            "esNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=Abstr" +
                            "actFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=Abs" +
                            "tractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageCont" +
                            "ent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=" +
                            "AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrece" +
                            "dedByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertiesInUn" +
                            "icodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False)))))" +
                            ",SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex=0,IdS" +
                            "etGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyC" +
                            "hangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessageConte" +
                            "nt=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=A" +
                            "bstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPreced" +
                            "edByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertiesInUni" +
                            "codeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False),Abst" +
                            "ractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMes" +
                            "sage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False," +
                            "AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=F" +
                            "alse,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,S" +
                            "tringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsR" +
                            "TFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp152, "transferBufferIndex of FastTransferSourceGetBuffer, state S50");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    3,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            5,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp153, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S50");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp154, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S50");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp155, "return of FastTransferSourceGetBuffer, state S50");
                    this.Manager.Comment("reaching state \'S52\'");
                    int temp156;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp157;
                    this.Manager.Comment("executing step \'call GetContentsTable(1,3,Initial,out _)\'");
                    temp157 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(0)), out temp156);
                    this.Manager.Comment("reaching state \'S54\'");
                    this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp156, "rowCount of GetContentsTable, state S54");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp157, "return of GetContentsTable, state S54");
                    this.Manager.Comment("reaching state \'S56\'");
                    int temp158;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp159;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp159 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp158);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S58\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 9]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp158, "synchronizationHandleIndex of SynchronizationOpenCollector, state S58");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp159, "return of SynchronizationOpenCollector, state S58");
                    this.Manager.Comment("reaching state \'S60\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp160;
                    this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,9,[3],0)\'");
                    temp160 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 9, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                3,
                                                ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                    this.Manager.Checkpoint("MS-OXCFXICS_R884");
                    this.Manager.Comment("reaching state \'S62\'");
                    this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp160, "return of SynchronizationImportDeletes, state S62");
                    this.Manager.Comment("reaching state \'S64\'");
                    int temp161;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp162;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                            "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                    temp162 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp161);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S66\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 10]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp161, "downloadcontextHandleIndex of SynchronizationConfigure, state S66");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp162, "return of SynchronizationConfigure, state S66");
                    this.Manager.Comment("reaching state \'S68\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp163;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagIdsetGiven,True,1)\'");
                    temp163 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S70\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp163, "return of SynchronizationUploadState, state S70");
                    this.Manager.Comment("reaching state \'S72\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp164;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeen,False,1)\'");
                    temp164 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S74\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp164, "return of SynchronizationUploadState, state S74");
                    this.Manager.Comment("reaching state \'S76\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp165;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetRead,False,1)\'");
                    temp165 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S78\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp165, "return of SynchronizationUploadState, state S78");
                    this.Manager.Comment("reaching state \'S80\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp166;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeenFAI,False,1)\'" +
                            "");
                    temp166 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                    this.Manager.Comment("reaching state \'S82\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp166, "return of SynchronizationUploadState, state S82");
                    this.Manager.Comment("reaching state \'S84\'");
                    bool temp167;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp167);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp167);
                    this.Manager.Comment("reaching state \'S86\'");
                    int temp268 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker11)));
                    if ((temp268 == 0)) {
                        this.Manager.Comment("reaching state \'S89\'");
                        int temp168;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp169;
                        bool temp170;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp171;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,10,Normal,out _,out _,out _)\'");
                        temp171 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp168, out temp169, out temp170);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S93\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                "en={4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTi" +
                                "me=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolde" +
                                "rContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXF" +
                                "olderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubF" +
                                "olderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFo" +
                                "lderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPi" +
                                "dTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCo" +
                                "ntent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildr" +
                                "en(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=" +
                                "False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,S" +
                                "tringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Ab" +
                                "stractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fals" +
                                "e,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotO" +
                                "ut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fal" +
                                "se,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelP" +
                                "rop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Ab" +
                                "stractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,I" +
                                "sNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fa" +
                                "lse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                "e,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOu" +
                                "t=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermi" +
                                "ssionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPr" +
                                "ecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPr" +
                                "opertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperties" +
                                "InOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),ou" +
                                "t False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp168, "transferBufferIndex of FastTransferSourceGetBuffer, state S93");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                true,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp169, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S93");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp170, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S93");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp171, "return of FastTransferSourceGetBuffer, state S93");
                        this.Manager.Comment("reaching state \'S97\'");
                        int temp172;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp173;
                        this.Manager.Comment("executing step \'call GetContentsTable(1,3,SoftDeleteCheck,out _)\'");
                        temp173 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(1)), out temp172);
                        this.Manager.Comment("reaching state \'S101\'");
                        this.Manager.Comment("checking step \'return GetContentsTable/[out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp172, "rowCount of GetContentsTable, state S101");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp173, "return of GetContentsTable, state S101");
                        this.Manager.Comment("reaching state \'S105\'");
                        int temp174;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp175;
                        this.Manager.Comment("executing step \'call GetContentsTable(1,3,Initial,out _)\'");
                        temp175 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(0)), out temp174);
                        this.Manager.Comment("reaching state \'S109\'");
                        this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp174, "rowCount of GetContentsTable, state S109");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp175, "return of GetContentsTable, state S109");
                        this.Manager.Comment("reaching state \'S113\'");
                        int temp176;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp177;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                        temp177 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp176);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S117\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 11]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp176, "synchronizationHandleIndex of SynchronizationOpenCollector, state S117");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp177, "return of SynchronizationOpenCollector, state S117");
                        this.Manager.Comment("reaching state \'S121\'");
                        bool temp178;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp178);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp178);
                        this.Manager.Comment("reaching state \'S125\'");
                        int temp217 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker10)));
                        if ((temp217 == 0)) {
                            this.Manager.Comment("reaching state \'S131\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp179;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,11,[4],2)\'");
                            temp179 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 11, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                            this.Manager.Comment("reaching state \'S139\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp179, "return of SynchronizationImportDeletes, state S139");
                            this.Manager.Comment("reaching state \'S147\'");
                            int temp180;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp181;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                            temp181 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp180);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S155\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 12]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp180, "downloadcontextHandleIndex of SynchronizationConfigure, state S155");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp181, "return of SynchronizationConfigure, state S155");
                            this.Manager.Comment("reaching state \'S163\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp182;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagIdsetGiven,True,1)\'");
                            temp182 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S171\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp182, "return of SynchronizationUploadState, state S171");
                            this.Manager.Comment("reaching state \'S179\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp183;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeen,False,1)\'");
                            temp183 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S187\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp183, "return of SynchronizationUploadState, state S187");
                            this.Manager.Comment("reaching state \'S195\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp184;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetRead,False,1)\'");
                            temp184 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S203\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp184, "return of SynchronizationUploadState, state S203");
                            this.Manager.Comment("reaching state \'S211\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp185;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeenFAI,False,1)\'" +
                                    "");
                            temp185 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S219\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp185, "return of SynchronizationUploadState, state S219");
                            this.Manager.Comment("reaching state \'S227\'");
                            int temp186;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp187;
                            bool temp188;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp189;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                            temp189 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp186, out temp187, out temp188);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S235\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiv" +
                                    "en={4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTi" +
                                    "me=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolde" +
                                    "rContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXF" +
                                    "olderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubF" +
                                    "olderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFo" +
                                    "lderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPi" +
                                    "dTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCo" +
                                    "ntent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildr" +
                                    "en(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=" +
                                    "False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,S" +
                                    "tringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Ab" +
                                    "stractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fals" +
                                    "e,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotO" +
                                    "ut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fal" +
                                    "se,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelP" +
                                    "rop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                    "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Ab" +
                                    "stractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,I" +
                                    "sNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fa" +
                                    "lse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOu" +
                                    "t=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermi" +
                                    "ssionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPr" +
                                    "ecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPr" +
                                    "opertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperties" +
                                    "InOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),ou" +
                                    "t False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp186, "transferBufferIndex of FastTransferSourceGetBuffer, state S235");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    3,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp187, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S235");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp188, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S235");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp189, "return of FastTransferSourceGetBuffer, state S235");
                            this.Manager.Comment("reaching state \'S243\'");
                            int temp190;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp191;
                            this.Manager.Comment("executing step \'call GetContentsTable(1,3,HardDeleteCheck,out _)\'");
                            temp191 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp190);
                            this.Manager.Comment("reaching state \'S251\'");
                            this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp190, "rowCount of GetContentsTable, state S251");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp191, "return of GetContentsTable, state S251");
                            this.Manager.Comment("reaching state \'S259\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp192;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp192 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S267\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp192, "return of Release, state S267");
                            this.Manager.Comment("reaching state \'S275\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp193;
                            this.Manager.Comment("executing step \'call Release(1,8)\'");
                            temp193 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                            this.Manager.Comment("reaching state \'S283\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp193, "return of Release, state S283");
                            this.Manager.Comment("reaching state \'S291\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp194;
                            this.Manager.Comment("executing step \'call Release(1,9)\'");
                            temp194 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                            this.Manager.Comment("reaching state \'S299\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp194, "return of Release, state S299");
                            this.Manager.Comment("reaching state \'S307\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp195;
                            this.Manager.Comment("executing step \'call Release(1,10)\'");
                            temp195 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                            this.Manager.Comment("reaching state \'S315\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp195, "return of Release, state S315");
                            this.Manager.Comment("reaching state \'S323\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp196;
                            this.Manager.Comment("executing step \'call Release(1,11)\'");
                            temp196 = this.IMS_OXCFXICSAdapterInstance.Release(1, 11);
                            this.Manager.Comment("reaching state \'S331\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp196, "return of Release, state S331");
                            this.Manager.Comment("reaching state \'S339\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp197;
                            this.Manager.Comment("executing step \'call Release(1,12)\'");
                            temp197 = this.IMS_OXCFXICSAdapterInstance.Release(1, 12);
                            this.Manager.Comment("reaching state \'S347\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp197, "return of Release, state S347");
                            this.Manager.Comment("reaching state \'S355\'");
                            goto label3;
                        }
                        if ((temp217 == 1)) {
                            this.Manager.Comment("reaching state \'S132\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp198;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,11,[4],2)\'");
                            temp198 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 11, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S140\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp198, "return of SynchronizationImportDeletes, state S140");
                            this.Manager.Comment("reaching state \'S148\'");
                            int temp199;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp200;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                            temp200 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp199);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S156\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 12]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp199, "downloadcontextHandleIndex of SynchronizationConfigure, state S156");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp200, "return of SynchronizationConfigure, state S156");
                            this.Manager.Comment("reaching state \'S164\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp201;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagIdsetGiven,True,1)\'");
                            temp201 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S172\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp201, "return of SynchronizationUploadState, state S172");
                            this.Manager.Comment("reaching state \'S180\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp202;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeen,False,1)\'");
                            temp202 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S188\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp202, "return of SynchronizationUploadState, state S188");
                            this.Manager.Comment("reaching state \'S196\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp203;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetRead,False,1)\'");
                            temp203 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S204\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp203, "return of SynchronizationUploadState, state S204");
                            this.Manager.Comment("reaching state \'S212\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp204;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeenFAI,False,1)\'" +
                                    "");
                            temp204 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S220\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp204, "return of SynchronizationUploadState, state S220");
                            this.Manager.Comment("reaching state \'S228\'");
                            int temp205;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp206;
                            bool temp207;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp208;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                            temp208 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp205, out temp206, out temp207);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S236\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={},IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiv" +
                                    "en={5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                    "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime" +
                                    "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                    "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                    "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                    "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                    "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                    "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                    "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                    "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                    "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                    "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                    "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                    "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                    "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                    ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                    "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                    "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                    "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                    "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                    "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                    ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                    "ractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsN" +
                                    "ewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fals" +
                                    "e),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fal" +
                                    "se,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPro" +
                                    "p=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fals" +
                                    "e,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False," +
                                    "IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=" +
                                    "False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermiss" +
                                    "ionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrec" +
                                    "ededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProp" +
                                    "ertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesIn" +
                                    "OtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out " +
                                    "False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp205, "transferBufferIndex of FastTransferSourceGetBuffer, state S236");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    3,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp206, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S236");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp207, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S236");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp208, "return of FastTransferSourceGetBuffer, state S236");
                            this.Manager.Comment("reaching state \'S244\'");
                            int temp209;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp210;
                            this.Manager.Comment("executing step \'call GetContentsTable(1,3,HardDeleteCheck,out _)\'");
                            temp210 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp209);
                            this.Manager.Comment("reaching state \'S252\'");
                            this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp209, "rowCount of GetContentsTable, state S252");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp210, "return of GetContentsTable, state S252");
                            this.Manager.Comment("reaching state \'S260\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp211;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp211 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S268\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp211, "return of Release, state S268");
                            this.Manager.Comment("reaching state \'S276\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp212;
                            this.Manager.Comment("executing step \'call Release(1,8)\'");
                            temp212 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                            this.Manager.Comment("reaching state \'S284\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp212, "return of Release, state S284");
                            this.Manager.Comment("reaching state \'S292\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp213;
                            this.Manager.Comment("executing step \'call Release(1,9)\'");
                            temp213 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                            this.Manager.Comment("reaching state \'S300\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp213, "return of Release, state S300");
                            this.Manager.Comment("reaching state \'S308\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp214;
                            this.Manager.Comment("executing step \'call Release(1,10)\'");
                            temp214 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                            this.Manager.Comment("reaching state \'S316\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp214, "return of Release, state S316");
                            this.Manager.Comment("reaching state \'S324\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp215;
                            this.Manager.Comment("executing step \'call Release(1,11)\'");
                            temp215 = this.IMS_OXCFXICSAdapterInstance.Release(1, 11);
                            this.Manager.Comment("reaching state \'S332\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp215, "return of Release, state S332");
                            this.Manager.Comment("reaching state \'S340\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp216;
                            this.Manager.Comment("executing step \'call Release(1,12)\'");
                            temp216 = this.IMS_OXCFXICSAdapterInstance.Release(1, 12);
                            this.Manager.Comment("reaching state \'S348\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp216, "return of Release, state S348");
                            this.Manager.Comment("reaching state \'S356\'");
                            goto label3;
                        }
                        throw new InvalidOperationException("never reached");
                    label3:
;
                        goto label5;
                    }
                    if ((temp268 == 1)) {
                        this.Manager.Comment("reaching state \'S90\'");
                        int temp218;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp219;
                        bool temp220;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp221;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,10,Normal,out _,out _,out _)\'");
                        temp221 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp218, out temp219, out temp220);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S94\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGi" +
                                "ven={4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                "ut False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp218, "transferBufferIndex of FastTransferSourceGetBuffer, state S94");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                true,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp219, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S94");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp220, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S94");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp221, "return of FastTransferSourceGetBuffer, state S94");
                        this.Manager.Comment("reaching state \'S98\'");
                        int temp222;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp223;
                        this.Manager.Comment("executing step \'call GetContentsTable(1,3,SoftDeleteCheck,out _)\'");
                        temp223 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(1)), out temp222);
                        this.Manager.Comment("reaching state \'S102\'");
                        this.Manager.Comment("checking step \'return GetContentsTable/[out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp222, "rowCount of GetContentsTable, state S102");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp223, "return of GetContentsTable, state S102");
                        this.Manager.Comment("reaching state \'S106\'");
                        int temp224;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp225;
                        this.Manager.Comment("executing step \'call GetContentsTable(1,3,Initial,out _)\'");
                        temp225 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(0)), out temp224);
                        this.Manager.Comment("reaching state \'S110\'");
                        this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp224, "rowCount of GetContentsTable, state S110");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp225, "return of GetContentsTable, state S110");
                        this.Manager.Comment("reaching state \'S114\'");
                        int temp226;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp227;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                        temp227 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp226);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S118\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 11]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp226, "synchronizationHandleIndex of SynchronizationOpenCollector, state S118");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp227, "return of SynchronizationOpenCollector, state S118");
                        this.Manager.Comment("reaching state \'S122\'");
                        bool temp228;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp228);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp228);
                        this.Manager.Comment("reaching state \'S126\'");
                        int temp267 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsDeletionCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker13)));
                        if ((temp267 == 0)) {
                            this.Manager.Comment("reaching state \'S133\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp229;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,11,[4],2)\'");
                            temp229 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 11, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                            this.Manager.Checkpoint("MS-OXCFXICS_R884");
                            this.Manager.Comment("reaching state \'S141\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp229, "return of SynchronizationImportDeletes, state S141");
                            this.Manager.Comment("reaching state \'S149\'");
                            int temp230;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp231;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                            temp231 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp230);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S157\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 12]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp230, "downloadcontextHandleIndex of SynchronizationConfigure, state S157");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp231, "return of SynchronizationConfigure, state S157");
                            this.Manager.Comment("reaching state \'S165\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp232;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagIdsetGiven,True,1)\'");
                            temp232 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S173\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp232, "return of SynchronizationUploadState, state S173");
                            this.Manager.Comment("reaching state \'S181\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp233;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeen,False,1)\'");
                            temp233 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S189\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp233, "return of SynchronizationUploadState, state S189");
                            this.Manager.Comment("reaching state \'S197\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp234;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetRead,False,1)\'");
                            temp234 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S205\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp234, "return of SynchronizationUploadState, state S205");
                            this.Manager.Comment("reaching state \'S213\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp235;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeenFAI,False,1)\'" +
                                    "");
                            temp235 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S221\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp235, "return of SynchronizationUploadState, state S221");
                            this.Manager.Comment("reaching state \'S229\'");
                            int temp236;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp237;
                            bool temp238;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp239;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                            temp239 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp236, out temp237, out temp238);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S237\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3,4}," +
                                    "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadS" +
                                    "tateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSet" +
                                    "Given={5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp236, "transferBufferIndex of FastTransferSourceGetBuffer, state S237");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    3,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp237, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S237");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp238, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S237");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp239, "return of FastTransferSourceGetBuffer, state S237");
                            this.Manager.Comment("reaching state \'S245\'");
                            int temp240;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp241;
                            this.Manager.Comment("executing step \'call GetContentsTable(1,3,HardDeleteCheck,out _)\'");
                            temp241 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp240);
                            this.Manager.Comment("reaching state \'S253\'");
                            this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp240, "rowCount of GetContentsTable, state S253");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp241, "return of GetContentsTable, state S253");
                            this.Manager.Comment("reaching state \'S261\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp242;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp242 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S269\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp242, "return of Release, state S269");
                            this.Manager.Comment("reaching state \'S277\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp243;
                            this.Manager.Comment("executing step \'call Release(1,8)\'");
                            temp243 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                            this.Manager.Comment("reaching state \'S285\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp243, "return of Release, state S285");
                            this.Manager.Comment("reaching state \'S293\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp244;
                            this.Manager.Comment("executing step \'call Release(1,9)\'");
                            temp244 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                            this.Manager.Comment("reaching state \'S301\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp244, "return of Release, state S301");
                            this.Manager.Comment("reaching state \'S309\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp245;
                            this.Manager.Comment("executing step \'call Release(1,10)\'");
                            temp245 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                            this.Manager.Comment("reaching state \'S317\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp245, "return of Release, state S317");
                            this.Manager.Comment("reaching state \'S325\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp246;
                            this.Manager.Comment("executing step \'call Release(1,11)\'");
                            temp246 = this.IMS_OXCFXICSAdapterInstance.Release(1, 11);
                            this.Manager.Comment("reaching state \'S333\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp246, "return of Release, state S333");
                            this.Manager.Comment("reaching state \'S341\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp247;
                            this.Manager.Comment("executing step \'call Release(1,12)\'");
                            temp247 = this.IMS_OXCFXICSAdapterInstance.Release(1, 12);
                            this.Manager.Comment("reaching state \'S349\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp247, "return of Release, state S349");
                            this.Manager.Comment("reaching state \'S357\'");
                            goto label4;
                        }
                        if ((temp267 == 1)) {
                            this.Manager.Comment("reaching state \'S134\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp248;
                            this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,11,[4],2)\'");
                            temp248 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 11, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 2);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2593");
                            this.Manager.Comment("reaching state \'S142\'");
                            this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp248, "return of SynchronizationImportDeletes, state S142");
                            this.Manager.Comment("reaching state \'S150\'");
                            int temp249;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp250;
                            this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                                    "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                            temp250 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagCreationTime",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp249);
                            this.Manager.Checkpoint("MS-OXCFXICS_R669");
                            this.Manager.Checkpoint("MS-OXCFXICS_R641");
                            this.Manager.Comment("reaching state \'S158\'");
                            this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 12]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 12, temp249, "downloadcontextHandleIndex of SynchronizationConfigure, state S158");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp250, "return of SynchronizationConfigure, state S158");
                            this.Manager.Comment("reaching state \'S166\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp251;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagIdsetGiven,True,1)\'");
                            temp251 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                            this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                            this.Manager.Comment("reaching state \'S174\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp251, "return of SynchronizationUploadState, state S174");
                            this.Manager.Comment("reaching state \'S182\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp252;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeen,False,1)\'");
                            temp252 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                            this.Manager.Comment("reaching state \'S190\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp252, "return of SynchronizationUploadState, state S190");
                            this.Manager.Comment("reaching state \'S198\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp253;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetRead,False,1)\'");
                            temp253 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                            this.Manager.Comment("reaching state \'S206\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp253, "return of SynchronizationUploadState, state S206");
                            this.Manager.Comment("reaching state \'S214\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp254;
                            this.Manager.Comment("executing step \'call SynchronizationUploadState(1,12,PidTagCnsetSeenFAI,False,1)\'" +
                                    "");
                            temp254 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                            this.Manager.Comment("reaching state \'S222\'");
                            this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp254, "return of SynchronizationUploadState, state S222");
                            this.Manager.Comment("reaching state \'S230\'");
                            int temp255;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp256;
                            bool temp257;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp258;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,12,Normal,out _,out _,out _)\'");
                            temp258 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 12, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp255, out temp256, out temp257);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2169");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S238\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                    "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                    "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                    "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                    "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                    "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                    "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                    "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                    "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                    "={},AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3},Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGi" +
                                    "ven={4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                    "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp255, "transferBufferIndex of FastTransferSourceGetBuffer, state S238");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                    "Rep"}, new object[] {
                                                                    Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>()}),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    3,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp256, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S238");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp257, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S238");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp258, "return of FastTransferSourceGetBuffer, state S238");
                            this.Manager.Comment("reaching state \'S246\'");
                            int temp259;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp260;
                            this.Manager.Comment("executing step \'call GetContentsTable(1,3,HardDeleteCheck,out _)\'");
                            temp260 = this.IMS_OXCFXICSAdapterInstance.GetContentsTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp259);
                            this.Manager.Comment("reaching state \'S254\'");
                            this.Manager.Comment("checking step \'return GetContentsTable/[out 0]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp259, "rowCount of GetContentsTable, state S254");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp260, "return of GetContentsTable, state S254");
                            this.Manager.Comment("reaching state \'S262\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp261;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp261 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S270\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp261, "return of Release, state S270");
                            this.Manager.Comment("reaching state \'S278\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp262;
                            this.Manager.Comment("executing step \'call Release(1,8)\'");
                            temp262 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                            this.Manager.Comment("reaching state \'S286\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp262, "return of Release, state S286");
                            this.Manager.Comment("reaching state \'S294\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp263;
                            this.Manager.Comment("executing step \'call Release(1,9)\'");
                            temp263 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                            this.Manager.Comment("reaching state \'S302\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp263, "return of Release, state S302");
                            this.Manager.Comment("reaching state \'S310\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp264;
                            this.Manager.Comment("executing step \'call Release(1,10)\'");
                            temp264 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                            this.Manager.Comment("reaching state \'S318\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp264, "return of Release, state S318");
                            this.Manager.Comment("reaching state \'S326\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp265;
                            this.Manager.Comment("executing step \'call Release(1,11)\'");
                            temp265 = this.IMS_OXCFXICSAdapterInstance.Release(1, 11);
                            this.Manager.Comment("reaching state \'S334\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp265, "return of Release, state S334");
                            this.Manager.Comment("reaching state \'S342\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp266;
                            this.Manager.Comment("executing step \'call Release(1,12)\'");
                            temp266 = this.IMS_OXCFXICSAdapterInstance.Release(1, 12);
                            this.Manager.Comment("reaching state \'S350\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp266, "return of Release, state S350");
                            this.Manager.Comment("reaching state \'S358\'");
                            goto label4;
                        }
                        throw new InvalidOperationException("never reached");
                    label4:
;
                        goto label5;
                    }
                    throw new InvalidOperationException("never reached");
                label5:
;
                    goto label6;
                }
                throw new InvalidOperationException("never reached");
            label6:
;
                goto label7;
            }
            if ((temp270 == 1)) {
                this.Manager.Comment("reaching state \'S3\'");
                goto label7;
            }
            throw new InvalidOperationException("never reached");
        label7:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S30");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S85");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S123");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S123");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S85");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S124");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S124");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S30");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S86");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S125");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S125");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S86");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S126");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S126");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsDeletionCheck_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}