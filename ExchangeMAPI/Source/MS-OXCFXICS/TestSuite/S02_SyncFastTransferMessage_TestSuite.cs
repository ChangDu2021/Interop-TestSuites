//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S02_SyncFastTransferMessage_TestSuite : PtfTestClassBase {
        
        public S02_SyncFastTransferMessage_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp487 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp487 == 0)) {
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S45\'");
                bool temp1;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2117002,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2117002, out temp1);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1);
                this.Manager.Comment("reaching state \'S54\'");
                int temp486 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker63)));
                if ((temp486 == 0)) {
                    this.Manager.Comment("reaching state \'S63\'");
                    bool temp2;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp2);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2);
                    this.Manager.Comment("reaching state \'S81\'");
                    int temp243 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker32)));
                    if ((temp243 == 0)) {
                        this.Manager.Comment("reaching state \'S100\'");
                        bool temp3;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp3);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp3);
                        this.Manager.Comment("reaching state \'S136\'");
                        int temp122 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker2)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker17)));
                        if ((temp122 == 0)) {
                            this.Manager.Comment("reaching state \'S173\'");
                            int temp4;
                            int temp5;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp6;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp6 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp4, out temp5);
                            this.Manager.Comment("reaching state \'S245\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp4, "logonHandleIndex of Logon, state S245");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp5, "inboxFolderIdIndex of Logon, state S245");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp6, "return of Logon, state S245");
                            this.Manager.Comment("reaching state \'S317\'");
                            int temp7;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp8 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp7);
                            this.Manager.Comment("reaching state \'S389\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp7, "folderHandleIndex of OpenFolder, state S389");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of OpenFolder, state S389");
                            this.Manager.Comment("reaching state \'S461\'");
                            int temp9;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp10;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp10 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp9);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S533\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "messageHandleIndex of CreateMessage, state S533");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp10, "return of CreateMessage, state S533");
                            this.Manager.Comment("reaching state \'S605\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp11 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S677\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of SetProperties, state S677");
                            this.Manager.Comment("reaching state \'S749\'");
                            int temp12;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp13 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp12);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S821\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp12, "messageIdIndex of SaveChangesMessage, state S821");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of SaveChangesMessage, state S821");
                            this.Manager.Comment("reaching state \'S893\'");
                            int temp14;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp15 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp14);
                            this.Manager.Comment("reaching state \'S965\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp14, "attachmentHandleIndex of CreateAttachment, state S965");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of CreateAttachment, state S965");
                            this.Manager.Comment("reaching state \'S1037\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp16;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp16 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1109\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp16, "return of SaveChangesAttachment, state S1109");
                            this.Manager.Comment("reaching state \'S1181\'");
                            bool temp17;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp17);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp17);
                            this.Manager.Comment("reaching state \'S1253\'");
                            int temp62 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker3)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker10)));
                            if ((temp62 == 0)) {
                                this.Manager.Comment("reaching state \'S1327\'");
                                bool temp18;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp18);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp18);
                                this.Manager.Comment("reaching state \'S1447\'");
                                int temp39 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker4)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker7)));
                                if ((temp39 == 0)) {
                                    this.Manager.Comment("reaching state \'S1571\'");
                                    bool temp19;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp19);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp19);
                                    this.Manager.Comment("reaching state \'S1739\'");
                                    int temp28 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker5)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker6)));
                                    if ((temp28 == 0)) {
                                        this.Manager.Comment("reaching state \'S1915\'");
                                        int temp20;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp21 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp20);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2179\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp20, "copyToHandleIndex of FastTransferSourceCopyTo, state S2179");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of FastTransferSourceCopyTo, state S2179");
                                        this.Manager.Comment("reaching state \'S2419\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp22 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2659\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of Release, state S2659");
                                        this.Manager.Comment("reaching state \'S2851\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp23 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3043\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of Release, state S3043");
                                        this.Manager.Comment("reaching state \'S3235\'");
                                        goto label0;
                                    }
                                    if ((temp28 == 1)) {
                                        this.Manager.Comment("reaching state \'S1916\'");
                                        int temp24;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp25 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp24);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2180\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp24, "copyToHandleIndex of FastTransferSourceCopyTo, state S2180");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of FastTransferSourceCopyTo, state S2180");
                                        this.Manager.Comment("reaching state \'S2420\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp26 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2660\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of Release, state S2660");
                                        this.Manager.Comment("reaching state \'S2852\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp27;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp27 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3044\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp27, "return of Release, state S3044");
                                        this.Manager.Comment("reaching state \'S3236\'");
                                        goto label0;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label0:
;
                                    goto label2;
                                }
                                if ((temp39 == 1)) {
                                    this.Manager.Comment("reaching state \'S1572\'");
                                    bool temp29;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp29);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp29);
                                    this.Manager.Comment("reaching state \'S1740\'");
                                    int temp38 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker8)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker9)));
                                    if ((temp38 == 0)) {
                                        this.Manager.Comment("reaching state \'S1917\'");
                                        int temp30;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp31 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp30);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2181\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp30, "copyToHandleIndex of FastTransferSourceCopyTo, state S2181");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of FastTransferSourceCopyTo, state S2181");
                                        this.Manager.Comment("reaching state \'S2421\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp32 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2661\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of Release, state S2661");
                                        this.Manager.Comment("reaching state \'S2853\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp33 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3045\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of Release, state S3045");
                                        this.Manager.Comment("reaching state \'S3237\'");
                                        goto label1;
                                    }
                                    if ((temp38 == 1)) {
                                        this.Manager.Comment("reaching state \'S1918\'");
                                        int temp34;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp35 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp34);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2182\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp34, "copyToHandleIndex of FastTransferSourceCopyTo, state S2182");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of FastTransferSourceCopyTo, state S2182");
                                        this.Manager.Comment("reaching state \'S2422\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp36;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp36 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2662\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp36, "return of Release, state S2662");
                                        this.Manager.Comment("reaching state \'S2854\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp37 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3046\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp37, "return of Release, state S3046");
                                        this.Manager.Comment("reaching state \'S3238\'");
                                        goto label1;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label1:
;
                                    goto label2;
                                }
                                throw new InvalidOperationException("never reached");
                            label2:
;
                                goto label6;
                            }
                            if ((temp62 == 1)) {
                                this.Manager.Comment("reaching state \'S1328\'");
                                bool temp40;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp40);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp40);
                                this.Manager.Comment("reaching state \'S1448\'");
                                int temp61 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker11)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker14)));
                                if ((temp61 == 0)) {
                                    this.Manager.Comment("reaching state \'S1573\'");
                                    bool temp41;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp41);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp41);
                                    this.Manager.Comment("reaching state \'S1741\'");
                                    int temp50 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker12)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker13)));
                                    if ((temp50 == 0)) {
                                        this.Manager.Comment("reaching state \'S1919\'");
                                        int temp42;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp43;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp43 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp42);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2183\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp42, "copyToHandleIndex of FastTransferSourceCopyTo, state S2183");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp43, "return of FastTransferSourceCopyTo, state S2183");
                                        this.Manager.Comment("reaching state \'S2423\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp44 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2663\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of Release, state S2663");
                                        this.Manager.Comment("reaching state \'S2855\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp45 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3047\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of Release, state S3047");
                                        this.Manager.Comment("reaching state \'S3239\'");
                                        goto label3;
                                    }
                                    if ((temp50 == 1)) {
                                        this.Manager.Comment("reaching state \'S1920\'");
                                        int temp46;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp47 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp46);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2184\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp46, "copyToHandleIndex of FastTransferSourceCopyTo, state S2184");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of FastTransferSourceCopyTo, state S2184");
                                        this.Manager.Comment("reaching state \'S2424\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp48;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp48 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2664\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp48, "return of Release, state S2664");
                                        this.Manager.Comment("reaching state \'S2856\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp49 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3048\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of Release, state S3048");
                                        this.Manager.Comment("reaching state \'S3240\'");
                                        goto label3;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label3:
;
                                    goto label5;
                                }
                                if ((temp61 == 1)) {
                                    this.Manager.Comment("reaching state \'S1574\'");
                                    bool temp51;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp51);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp51);
                                    this.Manager.Comment("reaching state \'S1742\'");
                                    int temp60 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker15)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker16)));
                                    if ((temp60 == 0)) {
                                        this.Manager.Comment("reaching state \'S1921\'");
                                        int temp52;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp53 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp52);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2185\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp52, "copyToHandleIndex of FastTransferSourceCopyTo, state S2185");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of FastTransferSourceCopyTo, state S2185");
                                        this.Manager.Comment("reaching state \'S2425\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp54 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2665\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of Release, state S2665");
                                        this.Manager.Comment("reaching state \'S2857\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp55;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp55 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3049\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp55, "return of Release, state S3049");
                                        this.Manager.Comment("reaching state \'S3241\'");
                                        goto label4;
                                    }
                                    if ((temp60 == 1)) {
                                        this.Manager.Comment("reaching state \'S1922\'");
                                        int temp56;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp57 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp56);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2186\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp56, "copyToHandleIndex of FastTransferSourceCopyTo, state S2186");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of FastTransferSourceCopyTo, state S2186");
                                        this.Manager.Comment("reaching state \'S2426\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp58;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp58 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2666\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp58, "return of Release, state S2666");
                                        this.Manager.Comment("reaching state \'S2858\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp59;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp59 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3050\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp59, "return of Release, state S3050");
                                        this.Manager.Comment("reaching state \'S3242\'");
                                        goto label4;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label4:
;
                                    goto label5;
                                }
                                throw new InvalidOperationException("never reached");
                            label5:
;
                                goto label6;
                            }
                            throw new InvalidOperationException("never reached");
                        label6:
;
                            goto label14;
                        }
                        if ((temp122 == 1)) {
                            this.Manager.Comment("reaching state \'S174\'");
                            int temp63;
                            int temp64;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp65 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp63, out temp64);
                            this.Manager.Comment("reaching state \'S246\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp63, "logonHandleIndex of Logon, state S246");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp64, "inboxFolderIdIndex of Logon, state S246");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of Logon, state S246");
                            this.Manager.Comment("reaching state \'S318\'");
                            int temp66;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp67 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp66);
                            this.Manager.Comment("reaching state \'S390\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp66, "folderHandleIndex of OpenFolder, state S390");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp67, "return of OpenFolder, state S390");
                            this.Manager.Comment("reaching state \'S462\'");
                            int temp68;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp69;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp69 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp68);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S534\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp68, "messageHandleIndex of CreateMessage, state S534");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp69, "return of CreateMessage, state S534");
                            this.Manager.Comment("reaching state \'S606\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp70;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp70 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S678\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp70, "return of SetProperties, state S678");
                            this.Manager.Comment("reaching state \'S750\'");
                            int temp71;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp72 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp71);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S822\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp71, "messageIdIndex of SaveChangesMessage, state S822");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of SaveChangesMessage, state S822");
                            this.Manager.Comment("reaching state \'S894\'");
                            int temp73;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp74 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp73);
                            this.Manager.Comment("reaching state \'S966\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp73, "attachmentHandleIndex of CreateAttachment, state S966");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of CreateAttachment, state S966");
                            this.Manager.Comment("reaching state \'S1038\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp75 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1110\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of SaveChangesAttachment, state S1110");
                            this.Manager.Comment("reaching state \'S1182\'");
                            bool temp76;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp76);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp76);
                            this.Manager.Comment("reaching state \'S1254\'");
                            int temp121 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker18)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker25)));
                            if ((temp121 == 0)) {
                                this.Manager.Comment("reaching state \'S1329\'");
                                bool temp77;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp77);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp77);
                                this.Manager.Comment("reaching state \'S1449\'");
                                int temp98 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker19)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker22)));
                                if ((temp98 == 0)) {
                                    this.Manager.Comment("reaching state \'S1575\'");
                                    bool temp78;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp78);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp78);
                                    this.Manager.Comment("reaching state \'S1743\'");
                                    int temp87 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker20)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker21)));
                                    if ((temp87 == 0)) {
                                        this.Manager.Comment("reaching state \'S1923\'");
                                        int temp79;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp80;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp80 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp79);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2187\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp79, "copyToHandleIndex of FastTransferSourceCopyTo, state S2187");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp80, "return of FastTransferSourceCopyTo, state S2187");
                                        this.Manager.Comment("reaching state \'S2427\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp81 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2667\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of Release, state S2667");
                                        this.Manager.Comment("reaching state \'S2859\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp82;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp82 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3051\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp82, "return of Release, state S3051");
                                        this.Manager.Comment("reaching state \'S3243\'");
                                        goto label7;
                                    }
                                    if ((temp87 == 1)) {
                                        this.Manager.Comment("reaching state \'S1924\'");
                                        int temp83;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp84;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp84 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp83);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2188\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp83, "copyToHandleIndex of FastTransferSourceCopyTo, state S2188");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp84, "return of FastTransferSourceCopyTo, state S2188");
                                        this.Manager.Comment("reaching state \'S2428\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp85;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp85 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2668\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp85, "return of Release, state S2668");
                                        this.Manager.Comment("reaching state \'S2860\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp86;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp86 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3052\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp86, "return of Release, state S3052");
                                        this.Manager.Comment("reaching state \'S3244\'");
                                        goto label7;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label7:
;
                                    goto label9;
                                }
                                if ((temp98 == 1)) {
                                    this.Manager.Comment("reaching state \'S1576\'");
                                    bool temp88;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp88);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp88);
                                    this.Manager.Comment("reaching state \'S1744\'");
                                    int temp97 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker23)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker24)));
                                    if ((temp97 == 0)) {
                                        this.Manager.Comment("reaching state \'S1925\'");
                                        int temp89;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp90;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp90 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp89);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2189\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp89, "copyToHandleIndex of FastTransferSourceCopyTo, state S2189");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp90, "return of FastTransferSourceCopyTo, state S2189");
                                        this.Manager.Comment("reaching state \'S2429\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp91 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2669\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of Release, state S2669");
                                        this.Manager.Comment("reaching state \'S2861\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp92;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp92 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3053\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp92, "return of Release, state S3053");
                                        this.Manager.Comment("reaching state \'S3245\'");
                                        goto label8;
                                    }
                                    if ((temp97 == 1)) {
                                        this.Manager.Comment("reaching state \'S1926\'");
                                        int temp93;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp94;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp94 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp93);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2190\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp93, "copyToHandleIndex of FastTransferSourceCopyTo, state S2190");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp94, "return of FastTransferSourceCopyTo, state S2190");
                                        this.Manager.Comment("reaching state \'S2430\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp95;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp95 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2670\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp95, "return of Release, state S2670");
                                        this.Manager.Comment("reaching state \'S2862\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp96;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp96 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3054\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp96, "return of Release, state S3054");
                                        this.Manager.Comment("reaching state \'S3246\'");
                                        goto label8;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label8:
;
                                    goto label9;
                                }
                                throw new InvalidOperationException("never reached");
                            label9:
;
                                goto label13;
                            }
                            if ((temp121 == 1)) {
                                this.Manager.Comment("reaching state \'S1330\'");
                                bool temp99;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp99);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp99);
                                this.Manager.Comment("reaching state \'S1450\'");
                                int temp120 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker26)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker29)));
                                if ((temp120 == 0)) {
                                    this.Manager.Comment("reaching state \'S1577\'");
                                    bool temp100;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp100);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp100);
                                    this.Manager.Comment("reaching state \'S1745\'");
                                    int temp109 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker27)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker28)));
                                    if ((temp109 == 0)) {
                                        this.Manager.Comment("reaching state \'S1927\'");
                                        int temp101;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp102;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp102 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp101);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2191\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp101, "copyToHandleIndex of FastTransferSourceCopyTo, state S2191");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp102, "return of FastTransferSourceCopyTo, state S2191");
                                        this.Manager.Comment("reaching state \'S2431\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp103;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp103 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2671\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp103, "return of Release, state S2671");
                                        this.Manager.Comment("reaching state \'S2863\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp104;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp104 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3055\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp104, "return of Release, state S3055");
                                        this.Manager.Comment("reaching state \'S3247\'");
                                        goto label10;
                                    }
                                    if ((temp109 == 1)) {
                                        this.Manager.Comment("reaching state \'S1928\'");
                                        int temp105;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp106 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp105);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2192\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp105, "copyToHandleIndex of FastTransferSourceCopyTo, state S2192");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of FastTransferSourceCopyTo, state S2192");
                                        this.Manager.Comment("reaching state \'S2432\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp107;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp107 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2672\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp107, "return of Release, state S2672");
                                        this.Manager.Comment("reaching state \'S2864\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp108;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp108 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3056\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp108, "return of Release, state S3056");
                                        this.Manager.Comment("reaching state \'S3248\'");
                                        goto label10;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label10:
;
                                    goto label12;
                                }
                                if ((temp120 == 1)) {
                                    this.Manager.Comment("reaching state \'S1578\'");
                                    bool temp110;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp110);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp110);
                                    this.Manager.Comment("reaching state \'S1746\'");
                                    int temp119 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker30)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker31)));
                                    if ((temp119 == 0)) {
                                        this.Manager.Comment("reaching state \'S1929\'");
                                        int temp111;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp112 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp111);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2193\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp111, "copyToHandleIndex of FastTransferSourceCopyTo, state S2193");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of FastTransferSourceCopyTo, state S2193");
                                        this.Manager.Comment("reaching state \'S2433\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp113 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2673\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp113, "return of Release, state S2673");
                                        this.Manager.Comment("reaching state \'S2865\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp114;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp114 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3057\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp114, "return of Release, state S3057");
                                        this.Manager.Comment("reaching state \'S3249\'");
                                        goto label11;
                                    }
                                    if ((temp119 == 1)) {
                                        this.Manager.Comment("reaching state \'S1930\'");
                                        int temp115;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp116 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp115);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2194\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp115, "copyToHandleIndex of FastTransferSourceCopyTo, state S2194");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of FastTransferSourceCopyTo, state S2194");
                                        this.Manager.Comment("reaching state \'S2434\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp117;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp117 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2674\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp117, "return of Release, state S2674");
                                        this.Manager.Comment("reaching state \'S2866\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp118;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp118 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3058\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp118, "return of Release, state S3058");
                                        this.Manager.Comment("reaching state \'S3250\'");
                                        goto label11;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label11:
;
                                    goto label12;
                                }
                                throw new InvalidOperationException("never reached");
                            label12:
;
                                goto label13;
                            }
                            throw new InvalidOperationException("never reached");
                        label13:
;
                            goto label14;
                        }
                        throw new InvalidOperationException("never reached");
                    label14:
;
                        goto label30;
                    }
                    if ((temp243 == 1)) {
                        this.Manager.Comment("reaching state \'S99\'");
                        bool temp123;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp123);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp123);
                        this.Manager.Comment("reaching state \'S135\'");
                        int temp242 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker33)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker48)));
                        if ((temp242 == 0)) {
                            this.Manager.Comment("reaching state \'S171\'");
                            int temp124;
                            int temp125;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp126;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp126 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp124, out temp125);
                            this.Manager.Comment("reaching state \'S243\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp124, "logonHandleIndex of Logon, state S243");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp125, "inboxFolderIdIndex of Logon, state S243");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp126, "return of Logon, state S243");
                            this.Manager.Comment("reaching state \'S315\'");
                            int temp127;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp128;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp128 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp127);
                            this.Manager.Comment("reaching state \'S387\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp127, "folderHandleIndex of OpenFolder, state S387");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp128, "return of OpenFolder, state S387");
                            this.Manager.Comment("reaching state \'S459\'");
                            int temp129;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp130;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp130 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp129);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S531\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp129, "messageHandleIndex of CreateMessage, state S531");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp130, "return of CreateMessage, state S531");
                            this.Manager.Comment("reaching state \'S603\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp131;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp131 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S675\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp131, "return of SetProperties, state S675");
                            this.Manager.Comment("reaching state \'S747\'");
                            int temp132;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp133;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp133 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp132);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S819\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp132, "messageIdIndex of SaveChangesMessage, state S819");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp133, "return of SaveChangesMessage, state S819");
                            this.Manager.Comment("reaching state \'S891\'");
                            int temp134;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp135;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp135 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp134);
                            this.Manager.Comment("reaching state \'S963\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp134, "attachmentHandleIndex of CreateAttachment, state S963");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp135, "return of CreateAttachment, state S963");
                            this.Manager.Comment("reaching state \'S1035\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp136;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp136 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1107\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp136, "return of SaveChangesAttachment, state S1107");
                            this.Manager.Comment("reaching state \'S1179\'");
                            bool temp137;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp137);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp137);
                            this.Manager.Comment("reaching state \'S1251\'");
                            int temp182 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker34)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker41)));
                            if ((temp182 == 0)) {
                                this.Manager.Comment("reaching state \'S1323\'");
                                bool temp138;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp138);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp138);
                                this.Manager.Comment("reaching state \'S1443\'");
                                int temp159 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker35)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker38)));
                                if ((temp159 == 0)) {
                                    this.Manager.Comment("reaching state \'S1563\'");
                                    bool temp139;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp139);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp139);
                                    this.Manager.Comment("reaching state \'S1731\'");
                                    int temp148 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker36)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker37)));
                                    if ((temp148 == 0)) {
                                        this.Manager.Comment("reaching state \'S1899\'");
                                        int temp140;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp141;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp141 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp140);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2163\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp140, "copyToHandleIndex of FastTransferSourceCopyTo, state S2163");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp141, "return of FastTransferSourceCopyTo, state S2163");
                                        this.Manager.Comment("reaching state \'S2403\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp142;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp142 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2643\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp142, "return of Release, state S2643");
                                        this.Manager.Comment("reaching state \'S2835\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp143;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp143 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3027\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp143, "return of Release, state S3027");
                                        this.Manager.Comment("reaching state \'S3219\'");
                                        goto label15;
                                    }
                                    if ((temp148 == 1)) {
                                        this.Manager.Comment("reaching state \'S1900\'");
                                        int temp144;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp145;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp145 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp144);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2164\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp144, "copyToHandleIndex of FastTransferSourceCopyTo, state S2164");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp145, "return of FastTransferSourceCopyTo, state S2164");
                                        this.Manager.Comment("reaching state \'S2404\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp146;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp146 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2644\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp146, "return of Release, state S2644");
                                        this.Manager.Comment("reaching state \'S2836\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp147;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp147 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3028\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp147, "return of Release, state S3028");
                                        this.Manager.Comment("reaching state \'S3220\'");
                                        goto label15;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label15:
;
                                    goto label17;
                                }
                                if ((temp159 == 1)) {
                                    this.Manager.Comment("reaching state \'S1564\'");
                                    bool temp149;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp149);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp149);
                                    this.Manager.Comment("reaching state \'S1732\'");
                                    int temp158 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker39)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker40)));
                                    if ((temp158 == 0)) {
                                        this.Manager.Comment("reaching state \'S1901\'");
                                        int temp150;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp151;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp151 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp150);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2165\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp150, "copyToHandleIndex of FastTransferSourceCopyTo, state S2165");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp151, "return of FastTransferSourceCopyTo, state S2165");
                                        this.Manager.Comment("reaching state \'S2405\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp152;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp152 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2645\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp152, "return of Release, state S2645");
                                        this.Manager.Comment("reaching state \'S2837\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp153;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp153 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3029\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp153, "return of Release, state S3029");
                                        this.Manager.Comment("reaching state \'S3221\'");
                                        goto label16;
                                    }
                                    if ((temp158 == 1)) {
                                        this.Manager.Comment("reaching state \'S1902\'");
                                        int temp154;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp155;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp155 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp154);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2166\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp154, "copyToHandleIndex of FastTransferSourceCopyTo, state S2166");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp155, "return of FastTransferSourceCopyTo, state S2166");
                                        this.Manager.Comment("reaching state \'S2406\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp156;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp156 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2646\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp156, "return of Release, state S2646");
                                        this.Manager.Comment("reaching state \'S2838\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp157;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp157 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3030\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp157, "return of Release, state S3030");
                                        this.Manager.Comment("reaching state \'S3222\'");
                                        goto label16;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label16:
;
                                    goto label17;
                                }
                                throw new InvalidOperationException("never reached");
                            label17:
;
                                goto label21;
                            }
                            if ((temp182 == 1)) {
                                this.Manager.Comment("reaching state \'S1324\'");
                                bool temp160;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp160);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp160);
                                this.Manager.Comment("reaching state \'S1444\'");
                                int temp181 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker42)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker45)));
                                if ((temp181 == 0)) {
                                    this.Manager.Comment("reaching state \'S1565\'");
                                    bool temp161;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp161);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp161);
                                    this.Manager.Comment("reaching state \'S1733\'");
                                    int temp170 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker43)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker44)));
                                    if ((temp170 == 0)) {
                                        this.Manager.Comment("reaching state \'S1903\'");
                                        int temp162;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp163;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp163 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp162);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2167\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp162, "copyToHandleIndex of FastTransferSourceCopyTo, state S2167");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp163, "return of FastTransferSourceCopyTo, state S2167");
                                        this.Manager.Comment("reaching state \'S2407\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp164;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp164 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2647\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp164, "return of Release, state S2647");
                                        this.Manager.Comment("reaching state \'S2839\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp165;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp165 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3031\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp165, "return of Release, state S3031");
                                        this.Manager.Comment("reaching state \'S3223\'");
                                        goto label18;
                                    }
                                    if ((temp170 == 1)) {
                                        this.Manager.Comment("reaching state \'S1904\'");
                                        int temp166;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp167 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp166);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2168\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp166, "copyToHandleIndex of FastTransferSourceCopyTo, state S2168");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of FastTransferSourceCopyTo, state S2168");
                                        this.Manager.Comment("reaching state \'S2408\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp168;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp168 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2648\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp168, "return of Release, state S2648");
                                        this.Manager.Comment("reaching state \'S2840\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp169;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp169 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3032\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp169, "return of Release, state S3032");
                                        this.Manager.Comment("reaching state \'S3224\'");
                                        goto label18;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label18:
;
                                    goto label20;
                                }
                                if ((temp181 == 1)) {
                                    this.Manager.Comment("reaching state \'S1566\'");
                                    bool temp171;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp171);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp171);
                                    this.Manager.Comment("reaching state \'S1734\'");
                                    int temp180 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker46)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker47)));
                                    if ((temp180 == 0)) {
                                        this.Manager.Comment("reaching state \'S1905\'");
                                        int temp172;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp173;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp173 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp172);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2169\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp172, "copyToHandleIndex of FastTransferSourceCopyTo, state S2169");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp173, "return of FastTransferSourceCopyTo, state S2169");
                                        this.Manager.Comment("reaching state \'S2409\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp174;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp174 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2649\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp174, "return of Release, state S2649");
                                        this.Manager.Comment("reaching state \'S2841\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp175;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp175 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3033\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp175, "return of Release, state S3033");
                                        this.Manager.Comment("reaching state \'S3225\'");
                                        goto label19;
                                    }
                                    if ((temp180 == 1)) {
                                        this.Manager.Comment("reaching state \'S1906\'");
                                        int temp176;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp177;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp177 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp176);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2170\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp176, "copyToHandleIndex of FastTransferSourceCopyTo, state S2170");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp177, "return of FastTransferSourceCopyTo, state S2170");
                                        this.Manager.Comment("reaching state \'S2410\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp178;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp178 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2650\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp178, "return of Release, state S2650");
                                        this.Manager.Comment("reaching state \'S2842\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp179;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp179 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3034\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp179, "return of Release, state S3034");
                                        this.Manager.Comment("reaching state \'S3226\'");
                                        goto label19;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label19:
;
                                    goto label20;
                                }
                                throw new InvalidOperationException("never reached");
                            label20:
;
                                goto label21;
                            }
                            throw new InvalidOperationException("never reached");
                        label21:
;
                            goto label29;
                        }
                        if ((temp242 == 1)) {
                            this.Manager.Comment("reaching state \'S172\'");
                            int temp183;
                            int temp184;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp185;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp185 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp183, out temp184);
                            this.Manager.Comment("reaching state \'S244\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp183, "logonHandleIndex of Logon, state S244");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp184, "inboxFolderIdIndex of Logon, state S244");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp185, "return of Logon, state S244");
                            this.Manager.Comment("reaching state \'S316\'");
                            int temp186;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp187;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp187 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp186);
                            this.Manager.Comment("reaching state \'S388\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp186, "folderHandleIndex of OpenFolder, state S388");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp187, "return of OpenFolder, state S388");
                            this.Manager.Comment("reaching state \'S460\'");
                            int temp188;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp189;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp189 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp188);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S532\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp188, "messageHandleIndex of CreateMessage, state S532");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp189, "return of CreateMessage, state S532");
                            this.Manager.Comment("reaching state \'S604\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp190;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp190 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S676\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp190, "return of SetProperties, state S676");
                            this.Manager.Comment("reaching state \'S748\'");
                            int temp191;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp192;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp192 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp191);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S820\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp191, "messageIdIndex of SaveChangesMessage, state S820");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp192, "return of SaveChangesMessage, state S820");
                            this.Manager.Comment("reaching state \'S892\'");
                            int temp193;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp194;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp194 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp193);
                            this.Manager.Comment("reaching state \'S964\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp193, "attachmentHandleIndex of CreateAttachment, state S964");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp194, "return of CreateAttachment, state S964");
                            this.Manager.Comment("reaching state \'S1036\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp195;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp195 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1108\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp195, "return of SaveChangesAttachment, state S1108");
                            this.Manager.Comment("reaching state \'S1180\'");
                            bool temp196;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp196);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp196);
                            this.Manager.Comment("reaching state \'S1252\'");
                            int temp241 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker49)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker56)));
                            if ((temp241 == 0)) {
                                this.Manager.Comment("reaching state \'S1325\'");
                                bool temp197;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp197);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp197);
                                this.Manager.Comment("reaching state \'S1445\'");
                                int temp218 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker50)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker53)));
                                if ((temp218 == 0)) {
                                    this.Manager.Comment("reaching state \'S1567\'");
                                    bool temp198;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp198);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp198);
                                    this.Manager.Comment("reaching state \'S1735\'");
                                    int temp207 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker51)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker52)));
                                    if ((temp207 == 0)) {
                                        this.Manager.Comment("reaching state \'S1907\'");
                                        int temp199;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp200;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp200 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp199);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2171\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp199, "copyToHandleIndex of FastTransferSourceCopyTo, state S2171");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp200, "return of FastTransferSourceCopyTo, state S2171");
                                        this.Manager.Comment("reaching state \'S2411\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp201;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp201 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2651\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp201, "return of Release, state S2651");
                                        this.Manager.Comment("reaching state \'S2843\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp202;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp202 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3035\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp202, "return of Release, state S3035");
                                        this.Manager.Comment("reaching state \'S3227\'");
                                        goto label22;
                                    }
                                    if ((temp207 == 1)) {
                                        this.Manager.Comment("reaching state \'S1908\'");
                                        int temp203;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp204;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp204 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp203);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2172\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp203, "copyToHandleIndex of FastTransferSourceCopyTo, state S2172");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp204, "return of FastTransferSourceCopyTo, state S2172");
                                        this.Manager.Comment("reaching state \'S2412\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp205;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp205 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2652\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp205, "return of Release, state S2652");
                                        this.Manager.Comment("reaching state \'S2844\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp206;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp206 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3036\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp206, "return of Release, state S3036");
                                        this.Manager.Comment("reaching state \'S3228\'");
                                        goto label22;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label22:
;
                                    goto label24;
                                }
                                if ((temp218 == 1)) {
                                    this.Manager.Comment("reaching state \'S1568\'");
                                    bool temp208;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp208);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp208);
                                    this.Manager.Comment("reaching state \'S1736\'");
                                    int temp217 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker54)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker55)));
                                    if ((temp217 == 0)) {
                                        this.Manager.Comment("reaching state \'S1909\'");
                                        int temp209;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp210;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp210 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp209);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2173\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp209, "copyToHandleIndex of FastTransferSourceCopyTo, state S2173");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp210, "return of FastTransferSourceCopyTo, state S2173");
                                        this.Manager.Comment("reaching state \'S2413\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp211;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp211 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2653\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp211, "return of Release, state S2653");
                                        this.Manager.Comment("reaching state \'S2845\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp212;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp212 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3037\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp212, "return of Release, state S3037");
                                        this.Manager.Comment("reaching state \'S3229\'");
                                        goto label23;
                                    }
                                    if ((temp217 == 1)) {
                                        this.Manager.Comment("reaching state \'S1910\'");
                                        int temp213;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp214;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp214 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp213);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2174\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp213, "copyToHandleIndex of FastTransferSourceCopyTo, state S2174");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp214, "return of FastTransferSourceCopyTo, state S2174");
                                        this.Manager.Comment("reaching state \'S2414\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp215;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp215 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2654\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp215, "return of Release, state S2654");
                                        this.Manager.Comment("reaching state \'S2846\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp216;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp216 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3038\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp216, "return of Release, state S3038");
                                        this.Manager.Comment("reaching state \'S3230\'");
                                        goto label23;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label23:
;
                                    goto label24;
                                }
                                throw new InvalidOperationException("never reached");
                            label24:
;
                                goto label28;
                            }
                            if ((temp241 == 1)) {
                                this.Manager.Comment("reaching state \'S1326\'");
                                bool temp219;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp219);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp219);
                                this.Manager.Comment("reaching state \'S1446\'");
                                int temp240 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker57)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker60)));
                                if ((temp240 == 0)) {
                                    this.Manager.Comment("reaching state \'S1569\'");
                                    bool temp220;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp220);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp220);
                                    this.Manager.Comment("reaching state \'S1737\'");
                                    int temp229 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker58)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker59)));
                                    if ((temp229 == 0)) {
                                        this.Manager.Comment("reaching state \'S1911\'");
                                        int temp221;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp222;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp222 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp221);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2175\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp221, "copyToHandleIndex of FastTransferSourceCopyTo, state S2175");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp222, "return of FastTransferSourceCopyTo, state S2175");
                                        this.Manager.Comment("reaching state \'S2415\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp223;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp223 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2655\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp223, "return of Release, state S2655");
                                        this.Manager.Comment("reaching state \'S2847\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp224;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp224 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3039\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp224, "return of Release, state S3039");
                                        this.Manager.Comment("reaching state \'S3231\'");
                                        goto label25;
                                    }
                                    if ((temp229 == 1)) {
                                        this.Manager.Comment("reaching state \'S1912\'");
                                        int temp225;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp226;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp226 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp225);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2176\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp225, "copyToHandleIndex of FastTransferSourceCopyTo, state S2176");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp226, "return of FastTransferSourceCopyTo, state S2176");
                                        this.Manager.Comment("reaching state \'S2416\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp227;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp227 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2656\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp227, "return of Release, state S2656");
                                        this.Manager.Comment("reaching state \'S2848\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp228;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp228 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3040\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp228, "return of Release, state S3040");
                                        this.Manager.Comment("reaching state \'S3232\'");
                                        goto label25;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label25:
;
                                    goto label27;
                                }
                                if ((temp240 == 1)) {
                                    this.Manager.Comment("reaching state \'S1570\'");
                                    bool temp230;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp230);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp230);
                                    this.Manager.Comment("reaching state \'S1738\'");
                                    int temp239 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker61)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker62)));
                                    if ((temp239 == 0)) {
                                        this.Manager.Comment("reaching state \'S1913\'");
                                        int temp231;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp232;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp232 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp231);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2177\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp231, "copyToHandleIndex of FastTransferSourceCopyTo, state S2177");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp232, "return of FastTransferSourceCopyTo, state S2177");
                                        this.Manager.Comment("reaching state \'S2417\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp233;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp233 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2657\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp233, "return of Release, state S2657");
                                        this.Manager.Comment("reaching state \'S2849\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp234;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp234 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3041\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp234, "return of Release, state S3041");
                                        this.Manager.Comment("reaching state \'S3233\'");
                                        goto label26;
                                    }
                                    if ((temp239 == 1)) {
                                        this.Manager.Comment("reaching state \'S1914\'");
                                        int temp235;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp236;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp236 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp235);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2178\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp235, "copyToHandleIndex of FastTransferSourceCopyTo, state S2178");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp236, "return of FastTransferSourceCopyTo, state S2178");
                                        this.Manager.Comment("reaching state \'S2418\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp237;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp237 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2658\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp237, "return of Release, state S2658");
                                        this.Manager.Comment("reaching state \'S2850\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp238;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp238 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3042\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp238, "return of Release, state S3042");
                                        this.Manager.Comment("reaching state \'S3234\'");
                                        goto label26;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label26:
;
                                    goto label27;
                                }
                                throw new InvalidOperationException("never reached");
                            label27:
;
                                goto label28;
                            }
                            throw new InvalidOperationException("never reached");
                        label28:
;
                            goto label29;
                        }
                        throw new InvalidOperationException("never reached");
                    label29:
;
                        goto label30;
                    }
                    throw new InvalidOperationException("never reached");
                label30:
;
                    goto label62;
                }
                if ((temp486 == 1)) {
                    this.Manager.Comment("reaching state \'S64\'");
                    bool temp244;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp244);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp244);
                    this.Manager.Comment("reaching state \'S82\'");
                    int temp485 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker64)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker95)));
                    if ((temp485 == 0)) {
                        this.Manager.Comment("reaching state \'S101\'");
                        bool temp245;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp245);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp245);
                        this.Manager.Comment("reaching state \'S137\'");
                        int temp364 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker65)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker80)));
                        if ((temp364 == 0)) {
                            this.Manager.Comment("reaching state \'S175\'");
                            int temp246;
                            int temp247;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp248;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp248 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp246, out temp247);
                            this.Manager.Comment("reaching state \'S247\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp246, "logonHandleIndex of Logon, state S247");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp247, "inboxFolderIdIndex of Logon, state S247");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp248, "return of Logon, state S247");
                            this.Manager.Comment("reaching state \'S319\'");
                            int temp249;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp250;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp250 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp249);
                            this.Manager.Comment("reaching state \'S391\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp249, "folderHandleIndex of OpenFolder, state S391");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp250, "return of OpenFolder, state S391");
                            this.Manager.Comment("reaching state \'S463\'");
                            int temp251;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp252;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp252 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp251);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S535\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp251, "messageHandleIndex of CreateMessage, state S535");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp252, "return of CreateMessage, state S535");
                            this.Manager.Comment("reaching state \'S607\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp253;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp253 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S679\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp253, "return of SetProperties, state S679");
                            this.Manager.Comment("reaching state \'S751\'");
                            int temp254;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp255;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp255 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp254);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S823\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp254, "messageIdIndex of SaveChangesMessage, state S823");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp255, "return of SaveChangesMessage, state S823");
                            this.Manager.Comment("reaching state \'S895\'");
                            int temp256;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp257;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp257 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp256);
                            this.Manager.Comment("reaching state \'S967\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp256, "attachmentHandleIndex of CreateAttachment, state S967");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp257, "return of CreateAttachment, state S967");
                            this.Manager.Comment("reaching state \'S1039\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp258;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp258 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1111\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp258, "return of SaveChangesAttachment, state S1111");
                            this.Manager.Comment("reaching state \'S1183\'");
                            bool temp259;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp259);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp259);
                            this.Manager.Comment("reaching state \'S1255\'");
                            int temp304 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker66)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker73)));
                            if ((temp304 == 0)) {
                                this.Manager.Comment("reaching state \'S1331\'");
                                bool temp260;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp260);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp260);
                                this.Manager.Comment("reaching state \'S1451\'");
                                int temp281 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker67)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker70)));
                                if ((temp281 == 0)) {
                                    this.Manager.Comment("reaching state \'S1579\'");
                                    bool temp261;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp261);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp261);
                                    this.Manager.Comment("reaching state \'S1747\'");
                                    int temp270 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker68)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker69)));
                                    if ((temp270 == 0)) {
                                        this.Manager.Comment("reaching state \'S1931\'");
                                        int temp262;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp263;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp263 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp262);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2195\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp262, "copyToHandleIndex of FastTransferSourceCopyTo, state S2195");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp263, "return of FastTransferSourceCopyTo, state S2195");
                                        this.Manager.Comment("reaching state \'S2435\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp264;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp264 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2675\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp264, "return of Release, state S2675");
                                        this.Manager.Comment("reaching state \'S2867\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp265;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp265 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3059\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp265, "return of Release, state S3059");
                                        this.Manager.Comment("reaching state \'S3251\'");
                                        goto label31;
                                    }
                                    if ((temp270 == 1)) {
                                        this.Manager.Comment("reaching state \'S1932\'");
                                        int temp266;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp267;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp267 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp266);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2196\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp266, "copyToHandleIndex of FastTransferSourceCopyTo, state S2196");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp267, "return of FastTransferSourceCopyTo, state S2196");
                                        this.Manager.Comment("reaching state \'S2436\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp268;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp268 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2676\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp268, "return of Release, state S2676");
                                        this.Manager.Comment("reaching state \'S2868\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp269;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp269 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3060\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp269, "return of Release, state S3060");
                                        this.Manager.Comment("reaching state \'S3252\'");
                                        goto label31;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label31:
;
                                    goto label33;
                                }
                                if ((temp281 == 1)) {
                                    this.Manager.Comment("reaching state \'S1580\'");
                                    bool temp271;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp271);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp271);
                                    this.Manager.Comment("reaching state \'S1748\'");
                                    int temp280 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker71)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker72)));
                                    if ((temp280 == 0)) {
                                        this.Manager.Comment("reaching state \'S1933\'");
                                        int temp272;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp273;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp273 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp272);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2197\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp272, "copyToHandleIndex of FastTransferSourceCopyTo, state S2197");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp273, "return of FastTransferSourceCopyTo, state S2197");
                                        this.Manager.Comment("reaching state \'S2437\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp274;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp274 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2677\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp274, "return of Release, state S2677");
                                        this.Manager.Comment("reaching state \'S2869\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp275;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp275 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3061\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp275, "return of Release, state S3061");
                                        this.Manager.Comment("reaching state \'S3253\'");
                                        goto label32;
                                    }
                                    if ((temp280 == 1)) {
                                        this.Manager.Comment("reaching state \'S1934\'");
                                        int temp276;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp277;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp277 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp276);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2198\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp276, "copyToHandleIndex of FastTransferSourceCopyTo, state S2198");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp277, "return of FastTransferSourceCopyTo, state S2198");
                                        this.Manager.Comment("reaching state \'S2438\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp278;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp278 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2678\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp278, "return of Release, state S2678");
                                        this.Manager.Comment("reaching state \'S2870\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp279;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp279 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3062\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp279, "return of Release, state S3062");
                                        this.Manager.Comment("reaching state \'S3254\'");
                                        goto label32;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label32:
;
                                    goto label33;
                                }
                                throw new InvalidOperationException("never reached");
                            label33:
;
                                goto label37;
                            }
                            if ((temp304 == 1)) {
                                this.Manager.Comment("reaching state \'S1332\'");
                                bool temp282;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp282);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp282);
                                this.Manager.Comment("reaching state \'S1452\'");
                                int temp303 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker74)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker77)));
                                if ((temp303 == 0)) {
                                    this.Manager.Comment("reaching state \'S1581\'");
                                    bool temp283;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp283);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp283);
                                    this.Manager.Comment("reaching state \'S1749\'");
                                    int temp292 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker75)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker76)));
                                    if ((temp292 == 0)) {
                                        this.Manager.Comment("reaching state \'S1935\'");
                                        int temp284;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp285;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp285 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp284);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2199\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp284, "copyToHandleIndex of FastTransferSourceCopyTo, state S2199");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp285, "return of FastTransferSourceCopyTo, state S2199");
                                        this.Manager.Comment("reaching state \'S2439\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp286;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp286 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2679\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp286, "return of Release, state S2679");
                                        this.Manager.Comment("reaching state \'S2871\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp287;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp287 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3063\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp287, "return of Release, state S3063");
                                        this.Manager.Comment("reaching state \'S3255\'");
                                        goto label34;
                                    }
                                    if ((temp292 == 1)) {
                                        this.Manager.Comment("reaching state \'S1936\'");
                                        int temp288;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp289;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp289 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp288);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2200\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp288, "copyToHandleIndex of FastTransferSourceCopyTo, state S2200");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp289, "return of FastTransferSourceCopyTo, state S2200");
                                        this.Manager.Comment("reaching state \'S2440\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp290;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp290 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2680\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp290, "return of Release, state S2680");
                                        this.Manager.Comment("reaching state \'S2872\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp291;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp291 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3064\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp291, "return of Release, state S3064");
                                        this.Manager.Comment("reaching state \'S3256\'");
                                        goto label34;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label34:
;
                                    goto label36;
                                }
                                if ((temp303 == 1)) {
                                    this.Manager.Comment("reaching state \'S1582\'");
                                    bool temp293;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp293);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp293);
                                    this.Manager.Comment("reaching state \'S1750\'");
                                    int temp302 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker78)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker79)));
                                    if ((temp302 == 0)) {
                                        this.Manager.Comment("reaching state \'S1937\'");
                                        int temp294;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp295;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp295 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp294);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2201\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp294, "copyToHandleIndex of FastTransferSourceCopyTo, state S2201");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp295, "return of FastTransferSourceCopyTo, state S2201");
                                        this.Manager.Comment("reaching state \'S2441\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp296;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp296 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2681\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp296, "return of Release, state S2681");
                                        this.Manager.Comment("reaching state \'S2873\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp297;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp297 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3065\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp297, "return of Release, state S3065");
                                        this.Manager.Comment("reaching state \'S3257\'");
                                        goto label35;
                                    }
                                    if ((temp302 == 1)) {
                                        this.Manager.Comment("reaching state \'S1938\'");
                                        int temp298;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp299;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp299 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp298);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2202\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp298, "copyToHandleIndex of FastTransferSourceCopyTo, state S2202");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp299, "return of FastTransferSourceCopyTo, state S2202");
                                        this.Manager.Comment("reaching state \'S2442\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp300;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp300 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2682\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp300, "return of Release, state S2682");
                                        this.Manager.Comment("reaching state \'S2874\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp301;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp301 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3066\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp301, "return of Release, state S3066");
                                        this.Manager.Comment("reaching state \'S3258\'");
                                        goto label35;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label35:
;
                                    goto label36;
                                }
                                throw new InvalidOperationException("never reached");
                            label36:
;
                                goto label37;
                            }
                            throw new InvalidOperationException("never reached");
                        label37:
;
                            goto label45;
                        }
                        if ((temp364 == 1)) {
                            this.Manager.Comment("reaching state \'S176\'");
                            int temp305;
                            int temp306;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp307;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp307 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp305, out temp306);
                            this.Manager.Comment("reaching state \'S248\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp305, "logonHandleIndex of Logon, state S248");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp306, "inboxFolderIdIndex of Logon, state S248");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp307, "return of Logon, state S248");
                            this.Manager.Comment("reaching state \'S320\'");
                            int temp308;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp309;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp309 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp308);
                            this.Manager.Comment("reaching state \'S392\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp308, "folderHandleIndex of OpenFolder, state S392");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp309, "return of OpenFolder, state S392");
                            this.Manager.Comment("reaching state \'S464\'");
                            int temp310;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp311;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp311 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp310);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S536\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp310, "messageHandleIndex of CreateMessage, state S536");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp311, "return of CreateMessage, state S536");
                            this.Manager.Comment("reaching state \'S608\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp312;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp312 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S680\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp312, "return of SetProperties, state S680");
                            this.Manager.Comment("reaching state \'S752\'");
                            int temp313;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp314;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp314 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp313);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S824\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp313, "messageIdIndex of SaveChangesMessage, state S824");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp314, "return of SaveChangesMessage, state S824");
                            this.Manager.Comment("reaching state \'S896\'");
                            int temp315;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp316;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp316 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp315);
                            this.Manager.Comment("reaching state \'S968\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp315, "attachmentHandleIndex of CreateAttachment, state S968");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp316, "return of CreateAttachment, state S968");
                            this.Manager.Comment("reaching state \'S1040\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp317;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp317 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1112\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp317, "return of SaveChangesAttachment, state S1112");
                            this.Manager.Comment("reaching state \'S1184\'");
                            bool temp318;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp318);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp318);
                            this.Manager.Comment("reaching state \'S1256\'");
                            int temp363 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker81)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker88)));
                            if ((temp363 == 0)) {
                                this.Manager.Comment("reaching state \'S1333\'");
                                bool temp319;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp319);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp319);
                                this.Manager.Comment("reaching state \'S1453\'");
                                int temp340 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker82)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker85)));
                                if ((temp340 == 0)) {
                                    this.Manager.Comment("reaching state \'S1583\'");
                                    bool temp320;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp320);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp320);
                                    this.Manager.Comment("reaching state \'S1751\'");
                                    int temp329 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker83)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker84)));
                                    if ((temp329 == 0)) {
                                        this.Manager.Comment("reaching state \'S1939\'");
                                        int temp321;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp322;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp322 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp321);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2203\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp321, "copyToHandleIndex of FastTransferSourceCopyTo, state S2203");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp322, "return of FastTransferSourceCopyTo, state S2203");
                                        this.Manager.Comment("reaching state \'S2443\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp323;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp323 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2683\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp323, "return of Release, state S2683");
                                        this.Manager.Comment("reaching state \'S2875\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp324;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp324 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3067\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp324, "return of Release, state S3067");
                                        this.Manager.Comment("reaching state \'S3259\'");
                                        goto label38;
                                    }
                                    if ((temp329 == 1)) {
                                        this.Manager.Comment("reaching state \'S1940\'");
                                        int temp325;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp326;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp326 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp325);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2204\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp325, "copyToHandleIndex of FastTransferSourceCopyTo, state S2204");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp326, "return of FastTransferSourceCopyTo, state S2204");
                                        this.Manager.Comment("reaching state \'S2444\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp327;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp327 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2684\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp327, "return of Release, state S2684");
                                        this.Manager.Comment("reaching state \'S2876\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp328;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp328 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3068\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp328, "return of Release, state S3068");
                                        this.Manager.Comment("reaching state \'S3260\'");
                                        goto label38;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label38:
;
                                    goto label40;
                                }
                                if ((temp340 == 1)) {
                                    this.Manager.Comment("reaching state \'S1584\'");
                                    bool temp330;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp330);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp330);
                                    this.Manager.Comment("reaching state \'S1752\'");
                                    int temp339 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker86)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker87)));
                                    if ((temp339 == 0)) {
                                        this.Manager.Comment("reaching state \'S1941\'");
                                        int temp331;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp332;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp332 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp331);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2205\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp331, "copyToHandleIndex of FastTransferSourceCopyTo, state S2205");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp332, "return of FastTransferSourceCopyTo, state S2205");
                                        this.Manager.Comment("reaching state \'S2445\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp333;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp333 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2685\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp333, "return of Release, state S2685");
                                        this.Manager.Comment("reaching state \'S2877\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp334;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp334 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3069\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp334, "return of Release, state S3069");
                                        this.Manager.Comment("reaching state \'S3261\'");
                                        goto label39;
                                    }
                                    if ((temp339 == 1)) {
                                        this.Manager.Comment("reaching state \'S1942\'");
                                        int temp335;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp336;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp336 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp335);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2206\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp335, "copyToHandleIndex of FastTransferSourceCopyTo, state S2206");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp336, "return of FastTransferSourceCopyTo, state S2206");
                                        this.Manager.Comment("reaching state \'S2446\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp337;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp337 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2686\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp337, "return of Release, state S2686");
                                        this.Manager.Comment("reaching state \'S2878\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp338;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp338 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3070\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp338, "return of Release, state S3070");
                                        this.Manager.Comment("reaching state \'S3262\'");
                                        goto label39;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label39:
;
                                    goto label40;
                                }
                                throw new InvalidOperationException("never reached");
                            label40:
;
                                goto label44;
                            }
                            if ((temp363 == 1)) {
                                this.Manager.Comment("reaching state \'S1334\'");
                                bool temp341;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp341);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp341);
                                this.Manager.Comment("reaching state \'S1454\'");
                                int temp362 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker89)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker92)));
                                if ((temp362 == 0)) {
                                    this.Manager.Comment("reaching state \'S1585\'");
                                    bool temp342;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp342);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp342);
                                    this.Manager.Comment("reaching state \'S1753\'");
                                    int temp351 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker90)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker91)));
                                    if ((temp351 == 0)) {
                                        this.Manager.Comment("reaching state \'S1943\'");
                                        int temp343;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp344;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp344 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp343);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2207\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp343, "copyToHandleIndex of FastTransferSourceCopyTo, state S2207");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp344, "return of FastTransferSourceCopyTo, state S2207");
                                        this.Manager.Comment("reaching state \'S2447\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp345;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp345 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2687\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp345, "return of Release, state S2687");
                                        this.Manager.Comment("reaching state \'S2879\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp346;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp346 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3071\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp346, "return of Release, state S3071");
                                        this.Manager.Comment("reaching state \'S3263\'");
                                        goto label41;
                                    }
                                    if ((temp351 == 1)) {
                                        this.Manager.Comment("reaching state \'S1944\'");
                                        int temp347;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp348;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp348 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp347);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2208\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp347, "copyToHandleIndex of FastTransferSourceCopyTo, state S2208");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp348, "return of FastTransferSourceCopyTo, state S2208");
                                        this.Manager.Comment("reaching state \'S2448\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp349;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp349 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2688\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp349, "return of Release, state S2688");
                                        this.Manager.Comment("reaching state \'S2880\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp350;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp350 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3072\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp350, "return of Release, state S3072");
                                        this.Manager.Comment("reaching state \'S3264\'");
                                        goto label41;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label41:
;
                                    goto label43;
                                }
                                if ((temp362 == 1)) {
                                    this.Manager.Comment("reaching state \'S1586\'");
                                    bool temp352;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp352);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp352);
                                    this.Manager.Comment("reaching state \'S1754\'");
                                    int temp361 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker93)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker94)));
                                    if ((temp361 == 0)) {
                                        this.Manager.Comment("reaching state \'S1945\'");
                                        int temp353;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp354;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp354 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp353);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2209\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp353, "copyToHandleIndex of FastTransferSourceCopyTo, state S2209");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp354, "return of FastTransferSourceCopyTo, state S2209");
                                        this.Manager.Comment("reaching state \'S2449\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp355;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp355 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2689\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp355, "return of Release, state S2689");
                                        this.Manager.Comment("reaching state \'S2881\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp356;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp356 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3073\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp356, "return of Release, state S3073");
                                        this.Manager.Comment("reaching state \'S3265\'");
                                        goto label42;
                                    }
                                    if ((temp361 == 1)) {
                                        this.Manager.Comment("reaching state \'S1946\'");
                                        int temp357;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp358;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp358 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp357);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2210\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp357, "copyToHandleIndex of FastTransferSourceCopyTo, state S2210");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp358, "return of FastTransferSourceCopyTo, state S2210");
                                        this.Manager.Comment("reaching state \'S2450\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp359;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp359 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2690\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp359, "return of Release, state S2690");
                                        this.Manager.Comment("reaching state \'S2882\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp360;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp360 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3074\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp360, "return of Release, state S3074");
                                        this.Manager.Comment("reaching state \'S3266\'");
                                        goto label42;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label42:
;
                                    goto label43;
                                }
                                throw new InvalidOperationException("never reached");
                            label43:
;
                                goto label44;
                            }
                            throw new InvalidOperationException("never reached");
                        label44:
;
                            goto label45;
                        }
                        throw new InvalidOperationException("never reached");
                    label45:
;
                        goto label61;
                    }
                    if ((temp485 == 1)) {
                        this.Manager.Comment("reaching state \'S102\'");
                        bool temp365;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp365);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp365);
                        this.Manager.Comment("reaching state \'S138\'");
                        int temp484 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker96)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker111)));
                        if ((temp484 == 0)) {
                            this.Manager.Comment("reaching state \'S177\'");
                            int temp366;
                            int temp367;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp368;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp368 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp366, out temp367);
                            this.Manager.Comment("reaching state \'S249\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp366, "logonHandleIndex of Logon, state S249");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp367, "inboxFolderIdIndex of Logon, state S249");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp368, "return of Logon, state S249");
                            this.Manager.Comment("reaching state \'S321\'");
                            int temp369;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp370;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp370 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp369);
                            this.Manager.Comment("reaching state \'S393\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp369, "folderHandleIndex of OpenFolder, state S393");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp370, "return of OpenFolder, state S393");
                            this.Manager.Comment("reaching state \'S465\'");
                            int temp371;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp372;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp372 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp371);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S537\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp371, "messageHandleIndex of CreateMessage, state S537");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp372, "return of CreateMessage, state S537");
                            this.Manager.Comment("reaching state \'S609\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp373;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp373 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S681\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp373, "return of SetProperties, state S681");
                            this.Manager.Comment("reaching state \'S753\'");
                            int temp374;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp375;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp375 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp374);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S825\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp374, "messageIdIndex of SaveChangesMessage, state S825");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp375, "return of SaveChangesMessage, state S825");
                            this.Manager.Comment("reaching state \'S897\'");
                            int temp376;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp377;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp377 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp376);
                            this.Manager.Comment("reaching state \'S969\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp376, "attachmentHandleIndex of CreateAttachment, state S969");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp377, "return of CreateAttachment, state S969");
                            this.Manager.Comment("reaching state \'S1041\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp378;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp378 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1113\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp378, "return of SaveChangesAttachment, state S1113");
                            this.Manager.Comment("reaching state \'S1185\'");
                            bool temp379;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp379);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp379);
                            this.Manager.Comment("reaching state \'S1257\'");
                            int temp424 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker97)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker104)));
                            if ((temp424 == 0)) {
                                this.Manager.Comment("reaching state \'S1335\'");
                                bool temp380;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp380);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp380);
                                this.Manager.Comment("reaching state \'S1455\'");
                                int temp401 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker98)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker101)));
                                if ((temp401 == 0)) {
                                    this.Manager.Comment("reaching state \'S1587\'");
                                    bool temp381;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp381);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp381);
                                    this.Manager.Comment("reaching state \'S1755\'");
                                    int temp390 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker99)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker100)));
                                    if ((temp390 == 0)) {
                                        this.Manager.Comment("reaching state \'S1947\'");
                                        int temp382;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp383;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp383 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp382);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2211\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp382, "copyToHandleIndex of FastTransferSourceCopyTo, state S2211");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp383, "return of FastTransferSourceCopyTo, state S2211");
                                        this.Manager.Comment("reaching state \'S2451\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp384;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp384 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2691\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp384, "return of Release, state S2691");
                                        this.Manager.Comment("reaching state \'S2883\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp385;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp385 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3075\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp385, "return of Release, state S3075");
                                        this.Manager.Comment("reaching state \'S3267\'");
                                        goto label46;
                                    }
                                    if ((temp390 == 1)) {
                                        this.Manager.Comment("reaching state \'S1948\'");
                                        int temp386;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp387;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp387 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp386);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2212\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp386, "copyToHandleIndex of FastTransferSourceCopyTo, state S2212");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp387, "return of FastTransferSourceCopyTo, state S2212");
                                        this.Manager.Comment("reaching state \'S2452\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp388;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp388 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2692\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp388, "return of Release, state S2692");
                                        this.Manager.Comment("reaching state \'S2884\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp389;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp389 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3076\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp389, "return of Release, state S3076");
                                        this.Manager.Comment("reaching state \'S3268\'");
                                        goto label46;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label46:
;
                                    goto label48;
                                }
                                if ((temp401 == 1)) {
                                    this.Manager.Comment("reaching state \'S1588\'");
                                    bool temp391;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp391);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp391);
                                    this.Manager.Comment("reaching state \'S1756\'");
                                    int temp400 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker102)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker103)));
                                    if ((temp400 == 0)) {
                                        this.Manager.Comment("reaching state \'S1949\'");
                                        int temp392;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp393;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp393 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp392);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2213\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp392, "copyToHandleIndex of FastTransferSourceCopyTo, state S2213");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp393, "return of FastTransferSourceCopyTo, state S2213");
                                        this.Manager.Comment("reaching state \'S2453\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp394;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp394 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2693\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp394, "return of Release, state S2693");
                                        this.Manager.Comment("reaching state \'S2885\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp395;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp395 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3077\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp395, "return of Release, state S3077");
                                        this.Manager.Comment("reaching state \'S3269\'");
                                        goto label47;
                                    }
                                    if ((temp400 == 1)) {
                                        this.Manager.Comment("reaching state \'S1950\'");
                                        int temp396;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp397;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp397 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp396);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2214\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp396, "copyToHandleIndex of FastTransferSourceCopyTo, state S2214");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp397, "return of FastTransferSourceCopyTo, state S2214");
                                        this.Manager.Comment("reaching state \'S2454\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp398;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp398 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2694\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp398, "return of Release, state S2694");
                                        this.Manager.Comment("reaching state \'S2886\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp399;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp399 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3078\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp399, "return of Release, state S3078");
                                        this.Manager.Comment("reaching state \'S3270\'");
                                        goto label47;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label47:
;
                                    goto label48;
                                }
                                throw new InvalidOperationException("never reached");
                            label48:
;
                                goto label52;
                            }
                            if ((temp424 == 1)) {
                                this.Manager.Comment("reaching state \'S1336\'");
                                bool temp402;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp402);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp402);
                                this.Manager.Comment("reaching state \'S1456\'");
                                int temp423 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker105)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker108)));
                                if ((temp423 == 0)) {
                                    this.Manager.Comment("reaching state \'S1589\'");
                                    bool temp403;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp403);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp403);
                                    this.Manager.Comment("reaching state \'S1757\'");
                                    int temp412 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker106)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker107)));
                                    if ((temp412 == 0)) {
                                        this.Manager.Comment("reaching state \'S1951\'");
                                        int temp404;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp405;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp405 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp404);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2215\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp404, "copyToHandleIndex of FastTransferSourceCopyTo, state S2215");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp405, "return of FastTransferSourceCopyTo, state S2215");
                                        this.Manager.Comment("reaching state \'S2455\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp406;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp406 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2695\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp406, "return of Release, state S2695");
                                        this.Manager.Comment("reaching state \'S2887\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp407;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp407 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3079\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp407, "return of Release, state S3079");
                                        this.Manager.Comment("reaching state \'S3271\'");
                                        goto label49;
                                    }
                                    if ((temp412 == 1)) {
                                        this.Manager.Comment("reaching state \'S1952\'");
                                        int temp408;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp409;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp409 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp408);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2216\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp408, "copyToHandleIndex of FastTransferSourceCopyTo, state S2216");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp409, "return of FastTransferSourceCopyTo, state S2216");
                                        this.Manager.Comment("reaching state \'S2456\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp410;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp410 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2696\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp410, "return of Release, state S2696");
                                        this.Manager.Comment("reaching state \'S2888\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp411;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp411 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3080\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp411, "return of Release, state S3080");
                                        this.Manager.Comment("reaching state \'S3272\'");
                                        goto label49;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label49:
;
                                    goto label51;
                                }
                                if ((temp423 == 1)) {
                                    this.Manager.Comment("reaching state \'S1590\'");
                                    bool temp413;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp413);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp413);
                                    this.Manager.Comment("reaching state \'S1758\'");
                                    int temp422 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker109)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker110)));
                                    if ((temp422 == 0)) {
                                        this.Manager.Comment("reaching state \'S1953\'");
                                        int temp414;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp415;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp415 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp414);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2217\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp414, "copyToHandleIndex of FastTransferSourceCopyTo, state S2217");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp415, "return of FastTransferSourceCopyTo, state S2217");
                                        this.Manager.Comment("reaching state \'S2457\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp416;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp416 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2697\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp416, "return of Release, state S2697");
                                        this.Manager.Comment("reaching state \'S2889\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp417;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp417 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3081\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp417, "return of Release, state S3081");
                                        this.Manager.Comment("reaching state \'S3273\'");
                                        goto label50;
                                    }
                                    if ((temp422 == 1)) {
                                        this.Manager.Comment("reaching state \'S1954\'");
                                        int temp418;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp419;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp419 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp418);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2218\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp418, "copyToHandleIndex of FastTransferSourceCopyTo, state S2218");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp419, "return of FastTransferSourceCopyTo, state S2218");
                                        this.Manager.Comment("reaching state \'S2458\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp420;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp420 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2698\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp420, "return of Release, state S2698");
                                        this.Manager.Comment("reaching state \'S2890\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp421;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp421 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3082\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp421, "return of Release, state S3082");
                                        this.Manager.Comment("reaching state \'S3274\'");
                                        goto label50;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label50:
;
                                    goto label51;
                                }
                                throw new InvalidOperationException("never reached");
                            label51:
;
                                goto label52;
                            }
                            throw new InvalidOperationException("never reached");
                        label52:
;
                            goto label60;
                        }
                        if ((temp484 == 1)) {
                            this.Manager.Comment("reaching state \'S178\'");
                            int temp425;
                            int temp426;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp427;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp427 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp425, out temp426);
                            this.Manager.Comment("reaching state \'S250\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp425, "logonHandleIndex of Logon, state S250");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp426, "inboxFolderIdIndex of Logon, state S250");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp427, "return of Logon, state S250");
                            this.Manager.Comment("reaching state \'S322\'");
                            int temp428;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp429;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp429 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp428);
                            this.Manager.Comment("reaching state \'S394\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp428, "folderHandleIndex of OpenFolder, state S394");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp429, "return of OpenFolder, state S394");
                            this.Manager.Comment("reaching state \'S466\'");
                            int temp430;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp431;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp431 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp430);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S538\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp430, "messageHandleIndex of CreateMessage, state S538");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp431, "return of CreateMessage, state S538");
                            this.Manager.Comment("reaching state \'S610\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp432;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp432 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S682\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp432, "return of SetProperties, state S682");
                            this.Manager.Comment("reaching state \'S754\'");
                            int temp433;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp434;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp434 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp433);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S826\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp433, "messageIdIndex of SaveChangesMessage, state S826");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp434, "return of SaveChangesMessage, state S826");
                            this.Manager.Comment("reaching state \'S898\'");
                            int temp435;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp436;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp436 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp435);
                            this.Manager.Comment("reaching state \'S970\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp435, "attachmentHandleIndex of CreateAttachment, state S970");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp436, "return of CreateAttachment, state S970");
                            this.Manager.Comment("reaching state \'S1042\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp437;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp437 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1114\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp437, "return of SaveChangesAttachment, state S1114");
                            this.Manager.Comment("reaching state \'S1186\'");
                            bool temp438;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp438);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp438);
                            this.Manager.Comment("reaching state \'S1258\'");
                            int temp483 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker112)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker119)));
                            if ((temp483 == 0)) {
                                this.Manager.Comment("reaching state \'S1337\'");
                                bool temp439;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp439);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp439);
                                this.Manager.Comment("reaching state \'S1457\'");
                                int temp460 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker113)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker116)));
                                if ((temp460 == 0)) {
                                    this.Manager.Comment("reaching state \'S1591\'");
                                    bool temp440;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp440);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp440);
                                    this.Manager.Comment("reaching state \'S1759\'");
                                    int temp449 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker114)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker115)));
                                    if ((temp449 == 0)) {
                                        this.Manager.Comment("reaching state \'S1955\'");
                                        int temp441;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp442;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp442 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp441);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2219\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp441, "copyToHandleIndex of FastTransferSourceCopyTo, state S2219");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp442, "return of FastTransferSourceCopyTo, state S2219");
                                        this.Manager.Comment("reaching state \'S2459\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp443;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp443 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2699\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp443, "return of Release, state S2699");
                                        this.Manager.Comment("reaching state \'S2891\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp444;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp444 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3083\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp444, "return of Release, state S3083");
                                        this.Manager.Comment("reaching state \'S3275\'");
                                        goto label53;
                                    }
                                    if ((temp449 == 1)) {
                                        this.Manager.Comment("reaching state \'S1956\'");
                                        int temp445;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp446;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp446 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp445);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2220\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp445, "copyToHandleIndex of FastTransferSourceCopyTo, state S2220");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp446, "return of FastTransferSourceCopyTo, state S2220");
                                        this.Manager.Comment("reaching state \'S2460\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp447;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp447 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2700\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp447, "return of Release, state S2700");
                                        this.Manager.Comment("reaching state \'S2892\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp448;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp448 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3084\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp448, "return of Release, state S3084");
                                        this.Manager.Comment("reaching state \'S3276\'");
                                        goto label53;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label53:
;
                                    goto label55;
                                }
                                if ((temp460 == 1)) {
                                    this.Manager.Comment("reaching state \'S1592\'");
                                    bool temp450;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp450);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp450);
                                    this.Manager.Comment("reaching state \'S1760\'");
                                    int temp459 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker117)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker118)));
                                    if ((temp459 == 0)) {
                                        this.Manager.Comment("reaching state \'S1957\'");
                                        int temp451;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp452;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp452 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp451);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2221\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp451, "copyToHandleIndex of FastTransferSourceCopyTo, state S2221");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp452, "return of FastTransferSourceCopyTo, state S2221");
                                        this.Manager.Comment("reaching state \'S2461\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp453;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp453 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2701\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp453, "return of Release, state S2701");
                                        this.Manager.Comment("reaching state \'S2893\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp454;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp454 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3085\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp454, "return of Release, state S3085");
                                        this.Manager.Comment("reaching state \'S3277\'");
                                        goto label54;
                                    }
                                    if ((temp459 == 1)) {
                                        this.Manager.Comment("reaching state \'S1958\'");
                                        int temp455;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp456;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp456 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp455);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2222\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp455, "copyToHandleIndex of FastTransferSourceCopyTo, state S2222");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp456, "return of FastTransferSourceCopyTo, state S2222");
                                        this.Manager.Comment("reaching state \'S2462\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp457;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp457 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2702\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp457, "return of Release, state S2702");
                                        this.Manager.Comment("reaching state \'S2894\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp458;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp458 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3086\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp458, "return of Release, state S3086");
                                        this.Manager.Comment("reaching state \'S3278\'");
                                        goto label54;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label54:
;
                                    goto label55;
                                }
                                throw new InvalidOperationException("never reached");
                            label55:
;
                                goto label59;
                            }
                            if ((temp483 == 1)) {
                                this.Manager.Comment("reaching state \'S1338\'");
                                bool temp461;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp461);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp461);
                                this.Manager.Comment("reaching state \'S1458\'");
                                int temp482 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker120)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker123)));
                                if ((temp482 == 0)) {
                                    this.Manager.Comment("reaching state \'S1593\'");
                                    bool temp462;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp462);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp462);
                                    this.Manager.Comment("reaching state \'S1761\'");
                                    int temp471 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker121)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker122)));
                                    if ((temp471 == 0)) {
                                        this.Manager.Comment("reaching state \'S1959\'");
                                        int temp463;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp464;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp464 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp463);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2223\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp463, "copyToHandleIndex of FastTransferSourceCopyTo, state S2223");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp464, "return of FastTransferSourceCopyTo, state S2223");
                                        this.Manager.Comment("reaching state \'S2463\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp465;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp465 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2703\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp465, "return of Release, state S2703");
                                        this.Manager.Comment("reaching state \'S2895\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp466;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp466 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3087\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp466, "return of Release, state S3087");
                                        this.Manager.Comment("reaching state \'S3279\'");
                                        goto label56;
                                    }
                                    if ((temp471 == 1)) {
                                        this.Manager.Comment("reaching state \'S1960\'");
                                        int temp467;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp468;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp468 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp467);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2224\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp467, "copyToHandleIndex of FastTransferSourceCopyTo, state S2224");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp468, "return of FastTransferSourceCopyTo, state S2224");
                                        this.Manager.Comment("reaching state \'S2464\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp469;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp469 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2704\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp469, "return of Release, state S2704");
                                        this.Manager.Comment("reaching state \'S2896\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp470;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp470 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3088\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp470, "return of Release, state S3088");
                                        this.Manager.Comment("reaching state \'S3280\'");
                                        goto label56;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label56:
;
                                    goto label58;
                                }
                                if ((temp482 == 1)) {
                                    this.Manager.Comment("reaching state \'S1594\'");
                                    bool temp472;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp472);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp472);
                                    this.Manager.Comment("reaching state \'S1762\'");
                                    int temp481 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker124)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker125)));
                                    if ((temp481 == 0)) {
                                        this.Manager.Comment("reaching state \'S1961\'");
                                        int temp473;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp474;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp474 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp473);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2225\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp473, "copyToHandleIndex of FastTransferSourceCopyTo, state S2225");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp474, "return of FastTransferSourceCopyTo, state S2225");
                                        this.Manager.Comment("reaching state \'S2465\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp475;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp475 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2705\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp475, "return of Release, state S2705");
                                        this.Manager.Comment("reaching state \'S2897\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp476;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp476 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3089\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp476, "return of Release, state S3089");
                                        this.Manager.Comment("reaching state \'S3281\'");
                                        goto label57;
                                    }
                                    if ((temp481 == 1)) {
                                        this.Manager.Comment("reaching state \'S1962\'");
                                        int temp477;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp478;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNa" +
                                                "me\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp478 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp477);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2226\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp477, "copyToHandleIndex of FastTransferSourceCopyTo, state S2226");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp478, "return of FastTransferSourceCopyTo, state S2226");
                                        this.Manager.Comment("reaching state \'S2466\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp479;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp479 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2706\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp479, "return of Release, state S2706");
                                        this.Manager.Comment("reaching state \'S2898\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp480;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp480 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3090\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp480, "return of Release, state S3090");
                                        this.Manager.Comment("reaching state \'S3282\'");
                                        goto label57;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label57:
;
                                    goto label58;
                                }
                                throw new InvalidOperationException("never reached");
                            label58:
;
                                goto label59;
                            }
                            throw new InvalidOperationException("never reached");
                        label59:
;
                            goto label60;
                        }
                        throw new InvalidOperationException("never reached");
                    label60:
;
                        goto label61;
                    }
                    throw new InvalidOperationException("never reached");
                label61:
;
                    goto label62;
                }
                throw new InvalidOperationException("never reached");
            label62:
;
                goto label63;
            }
            if ((temp487 == 1)) {
                this.Manager.Comment("reaching state \'S19\'");
                goto label63;
            }
            throw new InvalidOperationException("never reached");
        label63:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S54");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S81");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S136");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1253");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1447");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1739");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1739");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1447");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1740");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1740");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1253");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1448");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1741");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1741");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker14(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1448");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker15(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1742");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker16(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1742");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker17(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S136");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker18(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1254");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker19(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1449");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker20(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1743");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker21(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1743");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker22(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1449");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker23(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1744");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker24(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1744");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker25(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1254");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker26(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1450");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker27(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1745");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker28(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1745");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker29(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1450");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker30(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1746");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker31(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1746");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker32(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S81");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker33(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S135");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker34(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1251");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker35(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1443");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker36(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1731");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker37(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1731");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker38(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1443");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker39(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1732");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker40(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1732");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker41(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1251");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker42(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1444");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker43(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1733");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker44(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1733");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker45(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1444");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker46(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1734");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker47(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1734");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker48(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S135");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker49(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1252");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker50(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1445");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker51(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1735");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker52(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1735");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker53(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1445");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker54(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1736");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker55(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1736");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker56(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1252");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker57(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1446");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker58(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1737");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker59(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1737");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker60(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1446");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker61(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1738");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker62(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1738");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker63(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S54");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker64(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S82");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker65(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S137");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker66(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1255");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker67(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1451");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker68(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1747");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker69(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1747");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker70(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1451");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker71(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1748");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker72(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1748");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker73(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1255");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker74(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1452");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker75(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1749");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker76(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1749");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker77(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1452");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker78(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1750");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker79(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1750");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker80(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S137");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker81(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1256");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker82(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1453");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker83(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1751");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker84(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1751");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker85(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1453");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker86(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1752");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker87(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1752");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker88(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1256");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker89(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1454");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker90(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1753");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker91(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1753");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker92(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1454");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker93(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1754");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker94(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1754");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker95(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S82");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker96(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S138");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker97(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1257");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker98(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1455");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker99(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1755");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker100(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1755");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker101(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1455");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker102(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1756");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker103(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1756");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker104(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1257");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker105(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1456");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker106(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1757");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker107(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1757");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker108(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1456");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker109(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1758");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker110(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1758");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker111(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S138");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker112(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1258");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker113(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1457");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker114(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1759");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker115(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1759");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker116(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1457");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker117(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1760");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker118(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1760");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker119(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1258");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker120(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1458");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker121(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1761");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker122(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1761");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker123(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1458");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker124(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1762");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckRequirementEnabledChecker125(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1762");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S10
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1");
            this.Manager.Comment("reaching state \'S10\'");
            bool temp488;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp488);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp488);
            this.Manager.Comment("reaching state \'S11\'");
            int temp687 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp687 == 0)) {
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S41\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S50\'");
                bool temp489;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2117002,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2117002, out temp489);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp489);
                this.Manager.Comment("reaching state \'S59\'");
                int temp686 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker15)));
                if ((temp686 == 0)) {
                    this.Manager.Comment("reaching state \'S73\'");
                    bool temp490;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp490);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp490);
                    this.Manager.Comment("reaching state \'S91\'");
                    int temp587 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker1)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker8)));
                    if ((temp587 == 0)) {
                        this.Manager.Comment("reaching state \'S119\'");
                        bool temp491;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp491);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp491);
                        this.Manager.Comment("reaching state \'S155\'");
                        int temp538 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker2)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker5)));
                        if ((temp538 == 0)) {
                            this.Manager.Comment("reaching state \'S211\'");
                            int temp492;
                            int temp493;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp494;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp494 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp492, out temp493);
                            this.Manager.Comment("reaching state \'S283\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp492, "logonHandleIndex of Logon, state S283");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp493, "inboxFolderIdIndex of Logon, state S283");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp494, "return of Logon, state S283");
                            this.Manager.Comment("reaching state \'S355\'");
                            int temp495;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp496;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp496 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp495);
                            this.Manager.Comment("reaching state \'S427\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp495, "folderHandleIndex of OpenFolder, state S427");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp496, "return of OpenFolder, state S427");
                            this.Manager.Comment("reaching state \'S499\'");
                            int temp497;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp498;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp498 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp497);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S571\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp497, "messageHandleIndex of CreateMessage, state S571");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp498, "return of CreateMessage, state S571");
                            this.Manager.Comment("reaching state \'S643\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp499;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp499 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S715\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp499, "return of SetProperties, state S715");
                            this.Manager.Comment("reaching state \'S787\'");
                            int temp500;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp501;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp501 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp500);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S859\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp500, "messageIdIndex of SaveChangesMessage, state S859");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp501, "return of SaveChangesMessage, state S859");
                            this.Manager.Comment("reaching state \'S931\'");
                            int temp502;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp503;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp503 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp502);
                            this.Manager.Comment("reaching state \'S1003\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp502, "attachmentHandleIndex of CreateAttachment, state S1003");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp503, "return of CreateAttachment, state S1003");
                            this.Manager.Comment("reaching state \'S1075\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp504;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp504 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1147\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp504, "return of SaveChangesAttachment, state S1147");
                            this.Manager.Comment("reaching state \'S1219\'");
                            bool temp505;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp505);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp505);
                            this.Manager.Comment("reaching state \'S1291\'");
                            int temp514 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker3)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker4)));
                            if ((temp514 == 0)) {
                                this.Manager.Comment("reaching state \'S1403\'");
                                int temp506;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp507;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp507 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp506);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1523\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp506, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1523");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp507, "return of FastTransferSourceCopyProperties, state S1523");
                                this.Manager.Comment("reaching state \'S1691\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp508;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp508 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1859\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp508, "return of Release, state S1859");
                                this.Manager.Comment("reaching state \'S2123\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp509;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp509 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2387\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp509, "return of Release, state S2387");
                                this.Manager.Comment("reaching state \'S2627\'");
                                goto label64;
                            }
                            if ((temp514 == 1)) {
                                this.Manager.Comment("reaching state \'S1404\'");
                                int temp510;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp511;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp511 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp510);
                                this.Manager.Comment("reaching state \'S1524\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp510, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1524");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp511, "return of FastTransferSourceCopyProperties, state S1524");
                                this.Manager.Comment("reaching state \'S1692\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp512;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp512 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1860\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp512, "return of Release, state S1860");
                                this.Manager.Comment("reaching state \'S2124\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp513;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp513 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2388\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp513, "return of Release, state S2388");
                                this.Manager.Comment("reaching state \'S2628\'");
                                goto label64;
                            }
                            throw new InvalidOperationException("never reached");
                        label64:
;
                            goto label66;
                        }
                        if ((temp538 == 1)) {
                            this.Manager.Comment("reaching state \'S212\'");
                            int temp515;
                            int temp516;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp517;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp517 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp515, out temp516);
                            this.Manager.Comment("reaching state \'S284\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp515, "logonHandleIndex of Logon, state S284");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp516, "inboxFolderIdIndex of Logon, state S284");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp517, "return of Logon, state S284");
                            this.Manager.Comment("reaching state \'S356\'");
                            int temp518;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp519;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp519 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp518);
                            this.Manager.Comment("reaching state \'S428\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp518, "folderHandleIndex of OpenFolder, state S428");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp519, "return of OpenFolder, state S428");
                            this.Manager.Comment("reaching state \'S500\'");
                            int temp520;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp521;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp521 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp520);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S572\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp520, "messageHandleIndex of CreateMessage, state S572");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp521, "return of CreateMessage, state S572");
                            this.Manager.Comment("reaching state \'S644\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp522;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp522 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S716\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp522, "return of SetProperties, state S716");
                            this.Manager.Comment("reaching state \'S788\'");
                            int temp523;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp524;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp524 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp523);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S860\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp523, "messageIdIndex of SaveChangesMessage, state S860");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp524, "return of SaveChangesMessage, state S860");
                            this.Manager.Comment("reaching state \'S932\'");
                            int temp525;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp526;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp526 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp525);
                            this.Manager.Comment("reaching state \'S1004\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp525, "attachmentHandleIndex of CreateAttachment, state S1004");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp526, "return of CreateAttachment, state S1004");
                            this.Manager.Comment("reaching state \'S1076\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp527;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp527 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1148\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp527, "return of SaveChangesAttachment, state S1148");
                            this.Manager.Comment("reaching state \'S1220\'");
                            bool temp528;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp528);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp528);
                            this.Manager.Comment("reaching state \'S1292\'");
                            int temp537 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker6)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker7)));
                            if ((temp537 == 0)) {
                                this.Manager.Comment("reaching state \'S1405\'");
                                int temp529;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp530;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp530 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp529);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1525\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp529, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1525");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp530, "return of FastTransferSourceCopyProperties, state S1525");
                                this.Manager.Comment("reaching state \'S1693\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp531;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp531 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1861\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp531, "return of Release, state S1861");
                                this.Manager.Comment("reaching state \'S2125\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp532;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp532 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2389\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp532, "return of Release, state S2389");
                                this.Manager.Comment("reaching state \'S2629\'");
                                goto label65;
                            }
                            if ((temp537 == 1)) {
                                this.Manager.Comment("reaching state \'S1406\'");
                                int temp533;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp534;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp534 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp533);
                                this.Manager.Comment("reaching state \'S1526\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp533, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1526");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp534, "return of FastTransferSourceCopyProperties, state S1526");
                                this.Manager.Comment("reaching state \'S1694\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp535;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp535 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1862\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp535, "return of Release, state S1862");
                                this.Manager.Comment("reaching state \'S2126\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp536;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp536 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2390\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp536, "return of Release, state S2390");
                                this.Manager.Comment("reaching state \'S2630\'");
                                goto label65;
                            }
                            throw new InvalidOperationException("never reached");
                        label65:
;
                            goto label66;
                        }
                        throw new InvalidOperationException("never reached");
                    label66:
;
                        goto label70;
                    }
                    if ((temp587 == 1)) {
                        this.Manager.Comment("reaching state \'S120\'");
                        bool temp539;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp539);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp539);
                        this.Manager.Comment("reaching state \'S156\'");
                        int temp586 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker9)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker12)));
                        if ((temp586 == 0)) {
                            this.Manager.Comment("reaching state \'S213\'");
                            int temp540;
                            int temp541;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp542;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp542 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp540, out temp541);
                            this.Manager.Comment("reaching state \'S285\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp540, "logonHandleIndex of Logon, state S285");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp541, "inboxFolderIdIndex of Logon, state S285");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp542, "return of Logon, state S285");
                            this.Manager.Comment("reaching state \'S357\'");
                            int temp543;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp544;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp544 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp543);
                            this.Manager.Comment("reaching state \'S429\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp543, "folderHandleIndex of OpenFolder, state S429");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp544, "return of OpenFolder, state S429");
                            this.Manager.Comment("reaching state \'S501\'");
                            int temp545;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp546;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp546 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp545);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S573\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp545, "messageHandleIndex of CreateMessage, state S573");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp546, "return of CreateMessage, state S573");
                            this.Manager.Comment("reaching state \'S645\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp547;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp547 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S717\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp547, "return of SetProperties, state S717");
                            this.Manager.Comment("reaching state \'S789\'");
                            int temp548;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp549;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp549 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp548);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S861\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp548, "messageIdIndex of SaveChangesMessage, state S861");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp549, "return of SaveChangesMessage, state S861");
                            this.Manager.Comment("reaching state \'S933\'");
                            int temp550;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp551;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp551 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp550);
                            this.Manager.Comment("reaching state \'S1005\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp550, "attachmentHandleIndex of CreateAttachment, state S1005");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp551, "return of CreateAttachment, state S1005");
                            this.Manager.Comment("reaching state \'S1077\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp552;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp552 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1149\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp552, "return of SaveChangesAttachment, state S1149");
                            this.Manager.Comment("reaching state \'S1221\'");
                            bool temp553;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp553);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp553);
                            this.Manager.Comment("reaching state \'S1293\'");
                            int temp562 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker10)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker11)));
                            if ((temp562 == 0)) {
                                this.Manager.Comment("reaching state \'S1407\'");
                                int temp554;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp555;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp555 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp554);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1527\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp554, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1527");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp555, "return of FastTransferSourceCopyProperties, state S1527");
                                this.Manager.Comment("reaching state \'S1695\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp556;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp556 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1863\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp556, "return of Release, state S1863");
                                this.Manager.Comment("reaching state \'S2127\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp557;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp557 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2391\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp557, "return of Release, state S2391");
                                this.Manager.Comment("reaching state \'S2631\'");
                                goto label67;
                            }
                            if ((temp562 == 1)) {
                                this.Manager.Comment("reaching state \'S1408\'");
                                int temp558;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp559;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp559 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp558);
                                this.Manager.Comment("reaching state \'S1528\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp558, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1528");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp559, "return of FastTransferSourceCopyProperties, state S1528");
                                this.Manager.Comment("reaching state \'S1696\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp560;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp560 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1864\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp560, "return of Release, state S1864");
                                this.Manager.Comment("reaching state \'S2128\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp561;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp561 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2392\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp561, "return of Release, state S2392");
                                this.Manager.Comment("reaching state \'S2632\'");
                                goto label67;
                            }
                            throw new InvalidOperationException("never reached");
                        label67:
;
                            goto label69;
                        }
                        if ((temp586 == 1)) {
                            this.Manager.Comment("reaching state \'S214\'");
                            int temp563;
                            int temp564;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp565;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp565 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp563, out temp564);
                            this.Manager.Comment("reaching state \'S286\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp563, "logonHandleIndex of Logon, state S286");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp564, "inboxFolderIdIndex of Logon, state S286");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp565, "return of Logon, state S286");
                            this.Manager.Comment("reaching state \'S358\'");
                            int temp566;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp567;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp567 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp566);
                            this.Manager.Comment("reaching state \'S430\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp566, "folderHandleIndex of OpenFolder, state S430");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp567, "return of OpenFolder, state S430");
                            this.Manager.Comment("reaching state \'S502\'");
                            int temp568;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp569;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp569 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp568);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S574\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp568, "messageHandleIndex of CreateMessage, state S574");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp569, "return of CreateMessage, state S574");
                            this.Manager.Comment("reaching state \'S646\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp570;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp570 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S718\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp570, "return of SetProperties, state S718");
                            this.Manager.Comment("reaching state \'S790\'");
                            int temp571;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp572;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp572 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp571);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S862\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp571, "messageIdIndex of SaveChangesMessage, state S862");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp572, "return of SaveChangesMessage, state S862");
                            this.Manager.Comment("reaching state \'S934\'");
                            int temp573;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp574;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp574 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp573);
                            this.Manager.Comment("reaching state \'S1006\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp573, "attachmentHandleIndex of CreateAttachment, state S1006");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp574, "return of CreateAttachment, state S1006");
                            this.Manager.Comment("reaching state \'S1078\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp575;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp575 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1150\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp575, "return of SaveChangesAttachment, state S1150");
                            this.Manager.Comment("reaching state \'S1222\'");
                            bool temp576;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp576);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp576);
                            this.Manager.Comment("reaching state \'S1294\'");
                            int temp585 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker13)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker14)));
                            if ((temp585 == 0)) {
                                this.Manager.Comment("reaching state \'S1409\'");
                                int temp577;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp578;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp578 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp577);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1529\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp577, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1529");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp578, "return of FastTransferSourceCopyProperties, state S1529");
                                this.Manager.Comment("reaching state \'S1697\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp579;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp579 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1865\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp579, "return of Release, state S1865");
                                this.Manager.Comment("reaching state \'S2129\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp580;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp580 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2393\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp580, "return of Release, state S2393");
                                this.Manager.Comment("reaching state \'S2633\'");
                                goto label68;
                            }
                            if ((temp585 == 1)) {
                                this.Manager.Comment("reaching state \'S1410\'");
                                int temp581;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp582;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp582 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp581);
                                this.Manager.Comment("reaching state \'S1530\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp581, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1530");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp582, "return of FastTransferSourceCopyProperties, state S1530");
                                this.Manager.Comment("reaching state \'S1698\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp583;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp583 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1866\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp583, "return of Release, state S1866");
                                this.Manager.Comment("reaching state \'S2130\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp584;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp584 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2394\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp584, "return of Release, state S2394");
                                this.Manager.Comment("reaching state \'S2634\'");
                                goto label68;
                            }
                            throw new InvalidOperationException("never reached");
                        label68:
;
                            goto label69;
                        }
                        throw new InvalidOperationException("never reached");
                    label69:
;
                        goto label70;
                    }
                    throw new InvalidOperationException("never reached");
                label70:
;
                    goto label78;
                }
                if ((temp686 == 1)) {
                    this.Manager.Comment("reaching state \'S74\'");
                    bool temp588;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp588);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp588);
                    this.Manager.Comment("reaching state \'S92\'");
                    int temp685 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker16)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker23)));
                    if ((temp685 == 0)) {
                        this.Manager.Comment("reaching state \'S121\'");
                        bool temp589;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp589);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp589);
                        this.Manager.Comment("reaching state \'S157\'");
                        int temp636 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker17)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker20)));
                        if ((temp636 == 0)) {
                            this.Manager.Comment("reaching state \'S215\'");
                            int temp590;
                            int temp591;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp592;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp592 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp590, out temp591);
                            this.Manager.Comment("reaching state \'S287\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp590, "logonHandleIndex of Logon, state S287");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp591, "inboxFolderIdIndex of Logon, state S287");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp592, "return of Logon, state S287");
                            this.Manager.Comment("reaching state \'S359\'");
                            int temp593;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp594;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp594 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp593);
                            this.Manager.Comment("reaching state \'S431\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp593, "folderHandleIndex of OpenFolder, state S431");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp594, "return of OpenFolder, state S431");
                            this.Manager.Comment("reaching state \'S503\'");
                            int temp595;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp596;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp596 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp595);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S575\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp595, "messageHandleIndex of CreateMessage, state S575");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp596, "return of CreateMessage, state S575");
                            this.Manager.Comment("reaching state \'S647\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp597;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp597 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S719\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp597, "return of SetProperties, state S719");
                            this.Manager.Comment("reaching state \'S791\'");
                            int temp598;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp599;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp599 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp598);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S863\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp598, "messageIdIndex of SaveChangesMessage, state S863");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp599, "return of SaveChangesMessage, state S863");
                            this.Manager.Comment("reaching state \'S935\'");
                            int temp600;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp601;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp601 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp600);
                            this.Manager.Comment("reaching state \'S1007\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp600, "attachmentHandleIndex of CreateAttachment, state S1007");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp601, "return of CreateAttachment, state S1007");
                            this.Manager.Comment("reaching state \'S1079\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp602;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp602 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1151\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp602, "return of SaveChangesAttachment, state S1151");
                            this.Manager.Comment("reaching state \'S1223\'");
                            bool temp603;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp603);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp603);
                            this.Manager.Comment("reaching state \'S1295\'");
                            int temp612 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker18)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker19)));
                            if ((temp612 == 0)) {
                                this.Manager.Comment("reaching state \'S1411\'");
                                int temp604;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp605;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp605 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp604);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1531\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp604, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1531");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp605, "return of FastTransferSourceCopyProperties, state S1531");
                                this.Manager.Comment("reaching state \'S1699\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp606;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp606 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1867\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp606, "return of Release, state S1867");
                                this.Manager.Comment("reaching state \'S2131\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp607;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp607 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2395\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp607, "return of Release, state S2395");
                                this.Manager.Comment("reaching state \'S2635\'");
                                goto label71;
                            }
                            if ((temp612 == 1)) {
                                this.Manager.Comment("reaching state \'S1412\'");
                                int temp608;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp609;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp609 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp608);
                                this.Manager.Comment("reaching state \'S1532\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp608, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1532");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp609, "return of FastTransferSourceCopyProperties, state S1532");
                                this.Manager.Comment("reaching state \'S1700\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp610;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp610 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1868\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp610, "return of Release, state S1868");
                                this.Manager.Comment("reaching state \'S2132\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp611;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp611 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2396\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp611, "return of Release, state S2396");
                                this.Manager.Comment("reaching state \'S2636\'");
                                goto label71;
                            }
                            throw new InvalidOperationException("never reached");
                        label71:
;
                            goto label73;
                        }
                        if ((temp636 == 1)) {
                            this.Manager.Comment("reaching state \'S216\'");
                            int temp613;
                            int temp614;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp615;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp615 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp613, out temp614);
                            this.Manager.Comment("reaching state \'S288\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp613, "logonHandleIndex of Logon, state S288");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp614, "inboxFolderIdIndex of Logon, state S288");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp615, "return of Logon, state S288");
                            this.Manager.Comment("reaching state \'S360\'");
                            int temp616;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp617;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp617 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp616);
                            this.Manager.Comment("reaching state \'S432\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp616, "folderHandleIndex of OpenFolder, state S432");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp617, "return of OpenFolder, state S432");
                            this.Manager.Comment("reaching state \'S504\'");
                            int temp618;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp619;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp619 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp618);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S576\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp618, "messageHandleIndex of CreateMessage, state S576");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp619, "return of CreateMessage, state S576");
                            this.Manager.Comment("reaching state \'S648\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp620;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp620 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S720\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp620, "return of SetProperties, state S720");
                            this.Manager.Comment("reaching state \'S792\'");
                            int temp621;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp622;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp622 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp621);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S864\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp621, "messageIdIndex of SaveChangesMessage, state S864");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp622, "return of SaveChangesMessage, state S864");
                            this.Manager.Comment("reaching state \'S936\'");
                            int temp623;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp624;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp624 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp623);
                            this.Manager.Comment("reaching state \'S1008\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp623, "attachmentHandleIndex of CreateAttachment, state S1008");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp624, "return of CreateAttachment, state S1008");
                            this.Manager.Comment("reaching state \'S1080\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp625;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp625 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1152\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp625, "return of SaveChangesAttachment, state S1152");
                            this.Manager.Comment("reaching state \'S1224\'");
                            bool temp626;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp626);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp626);
                            this.Manager.Comment("reaching state \'S1296\'");
                            int temp635 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker21)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker22)));
                            if ((temp635 == 0)) {
                                this.Manager.Comment("reaching state \'S1413\'");
                                int temp627;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp628;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp628 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp627);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1533\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp627, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1533");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp628, "return of FastTransferSourceCopyProperties, state S1533");
                                this.Manager.Comment("reaching state \'S1701\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp629;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp629 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1869\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp629, "return of Release, state S1869");
                                this.Manager.Comment("reaching state \'S2133\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp630;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp630 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2397\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp630, "return of Release, state S2397");
                                this.Manager.Comment("reaching state \'S2637\'");
                                goto label72;
                            }
                            if ((temp635 == 1)) {
                                this.Manager.Comment("reaching state \'S1414\'");
                                int temp631;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp632;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp632 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp631);
                                this.Manager.Comment("reaching state \'S1534\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp631, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1534");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp632, "return of FastTransferSourceCopyProperties, state S1534");
                                this.Manager.Comment("reaching state \'S1702\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp633;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp633 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1870\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp633, "return of Release, state S1870");
                                this.Manager.Comment("reaching state \'S2134\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp634;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp634 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2398\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp634, "return of Release, state S2398");
                                this.Manager.Comment("reaching state \'S2638\'");
                                goto label72;
                            }
                            throw new InvalidOperationException("never reached");
                        label72:
;
                            goto label73;
                        }
                        throw new InvalidOperationException("never reached");
                    label73:
;
                        goto label77;
                    }
                    if ((temp685 == 1)) {
                        this.Manager.Comment("reaching state \'S122\'");
                        bool temp637;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp637);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp637);
                        this.Manager.Comment("reaching state \'S158\'");
                        int temp684 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker24)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker27)));
                        if ((temp684 == 0)) {
                            this.Manager.Comment("reaching state \'S217\'");
                            int temp638;
                            int temp639;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp640;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp640 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp638, out temp639);
                            this.Manager.Comment("reaching state \'S289\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp638, "logonHandleIndex of Logon, state S289");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp639, "inboxFolderIdIndex of Logon, state S289");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp640, "return of Logon, state S289");
                            this.Manager.Comment("reaching state \'S361\'");
                            int temp641;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp642;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp642 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp641);
                            this.Manager.Comment("reaching state \'S433\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp641, "folderHandleIndex of OpenFolder, state S433");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp642, "return of OpenFolder, state S433");
                            this.Manager.Comment("reaching state \'S505\'");
                            int temp643;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp644;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp644 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp643);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S577\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp643, "messageHandleIndex of CreateMessage, state S577");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp644, "return of CreateMessage, state S577");
                            this.Manager.Comment("reaching state \'S649\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp645;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp645 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S721\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp645, "return of SetProperties, state S721");
                            this.Manager.Comment("reaching state \'S793\'");
                            int temp646;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp647;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp647 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp646);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S865\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp646, "messageIdIndex of SaveChangesMessage, state S865");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp647, "return of SaveChangesMessage, state S865");
                            this.Manager.Comment("reaching state \'S937\'");
                            int temp648;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp649;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp649 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp648);
                            this.Manager.Comment("reaching state \'S1009\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp648, "attachmentHandleIndex of CreateAttachment, state S1009");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp649, "return of CreateAttachment, state S1009");
                            this.Manager.Comment("reaching state \'S1081\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp650;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp650 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1153\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp650, "return of SaveChangesAttachment, state S1153");
                            this.Manager.Comment("reaching state \'S1225\'");
                            bool temp651;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp651);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp651);
                            this.Manager.Comment("reaching state \'S1297\'");
                            int temp660 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker25)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker26)));
                            if ((temp660 == 0)) {
                                this.Manager.Comment("reaching state \'S1415\'");
                                int temp652;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp653;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp653 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp652);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1535\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp652, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1535");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp653, "return of FastTransferSourceCopyProperties, state S1535");
                                this.Manager.Comment("reaching state \'S1703\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp654;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp654 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1871\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp654, "return of Release, state S1871");
                                this.Manager.Comment("reaching state \'S2135\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp655;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp655 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2399\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp655, "return of Release, state S2399");
                                this.Manager.Comment("reaching state \'S2639\'");
                                goto label74;
                            }
                            if ((temp660 == 1)) {
                                this.Manager.Comment("reaching state \'S1416\'");
                                int temp656;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp657;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp657 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp656);
                                this.Manager.Comment("reaching state \'S1536\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp656, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1536");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp657, "return of FastTransferSourceCopyProperties, state S1536");
                                this.Manager.Comment("reaching state \'S1704\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp658;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp658 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1872\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp658, "return of Release, state S1872");
                                this.Manager.Comment("reaching state \'S2136\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp659;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp659 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2400\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp659, "return of Release, state S2400");
                                this.Manager.Comment("reaching state \'S2640\'");
                                goto label74;
                            }
                            throw new InvalidOperationException("never reached");
                        label74:
;
                            goto label76;
                        }
                        if ((temp684 == 1)) {
                            this.Manager.Comment("reaching state \'S218\'");
                            int temp661;
                            int temp662;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp663;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp663 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp661, out temp662);
                            this.Manager.Comment("reaching state \'S290\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp661, "logonHandleIndex of Logon, state S290");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp662, "inboxFolderIdIndex of Logon, state S290");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp663, "return of Logon, state S290");
                            this.Manager.Comment("reaching state \'S362\'");
                            int temp664;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp665;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp665 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp664);
                            this.Manager.Comment("reaching state \'S434\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp664, "folderHandleIndex of OpenFolder, state S434");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp665, "return of OpenFolder, state S434");
                            this.Manager.Comment("reaching state \'S506\'");
                            int temp666;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp667;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp667 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp666);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S578\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp666, "messageHandleIndex of CreateMessage, state S578");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp667, "return of CreateMessage, state S578");
                            this.Manager.Comment("reaching state \'S650\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp668;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp668 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S722\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp668, "return of SetProperties, state S722");
                            this.Manager.Comment("reaching state \'S794\'");
                            int temp669;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp670;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp670 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp669);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S866\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp669, "messageIdIndex of SaveChangesMessage, state S866");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp670, "return of SaveChangesMessage, state S866");
                            this.Manager.Comment("reaching state \'S938\'");
                            int temp671;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp672;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp672 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp671);
                            this.Manager.Comment("reaching state \'S1010\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp671, "attachmentHandleIndex of CreateAttachment, state S1010");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp672, "return of CreateAttachment, state S1010");
                            this.Manager.Comment("reaching state \'S1082\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp673;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp673 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1154\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp673, "return of SaveChangesAttachment, state S1154");
                            this.Manager.Comment("reaching state \'S1226\'");
                            bool temp674;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp674);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp674);
                            this.Manager.Comment("reaching state \'S1298\'");
                            int temp683 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker28)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker29)));
                            if ((temp683 == 0)) {
                                this.Manager.Comment("reaching state \'S1417\'");
                                int temp675;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp676;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp676 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp675);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1537\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp675, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1537");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp676, "return of FastTransferSourceCopyProperties, state S1537");
                                this.Manager.Comment("reaching state \'S1705\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp677;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp677 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1873\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp677, "return of Release, state S1873");
                                this.Manager.Comment("reaching state \'S2137\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp678;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp678 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2401\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp678, "return of Release, state S2401");
                                this.Manager.Comment("reaching state \'S2641\'");
                                goto label75;
                            }
                            if ((temp683 == 1)) {
                                this.Manager.Comment("reaching state \'S1418\'");
                                int temp679;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp680;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp680 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp679);
                                this.Manager.Comment("reaching state \'S1538\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp679, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1538");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp680, "return of FastTransferSourceCopyProperties, state S1538");
                                this.Manager.Comment("reaching state \'S1706\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp681;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp681 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1874\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp681, "return of Release, state S1874");
                                this.Manager.Comment("reaching state \'S2138\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp682;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp682 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2402\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp682, "return of Release, state S2402");
                                this.Manager.Comment("reaching state \'S2642\'");
                                goto label75;
                            }
                            throw new InvalidOperationException("never reached");
                        label75:
;
                            goto label76;
                        }
                        throw new InvalidOperationException("never reached");
                    label76:
;
                        goto label77;
                    }
                    throw new InvalidOperationException("never reached");
                label77:
;
                    goto label78;
                }
                throw new InvalidOperationException("never reached");
            label78:
;
                goto label79;
            }
            if ((temp687 == 1)) {
                this.Manager.Comment("reaching state \'S29\'");
                goto label79;
            }
            throw new InvalidOperationException("never reached");
        label79:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S59");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S91");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S155");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1291");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1291");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S155");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1292");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1292");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S91");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S156");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1293");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1293");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S156");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1294");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker14(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1294");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker15(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S59");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker16(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S92");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker17(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S157");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker18(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1295");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker19(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1295");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker20(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S157");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker21(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1296");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker22(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1296");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker23(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S92");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker24(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S158");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker25(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1297");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker26(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1297");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker27(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S158");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker28(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1298");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckRequirementEnabledChecker29(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1298");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        #endregion
        
        #region Test Starting in S12
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2");
            this.Manager.Comment("reaching state \'S12\'");
            bool temp688;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp688);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp688);
            this.Manager.Comment("reaching state \'S13\'");
            int temp839 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp839 == 0)) {
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S51\'");
                bool temp689;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2117002,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2117002, out temp689);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp689);
                this.Manager.Comment("reaching state \'S60\'");
                int temp838 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker7)));
                if ((temp838 == 0)) {
                    this.Manager.Comment("reaching state \'S75\'");
                    bool temp690;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp690);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp690);
                    this.Manager.Comment("reaching state \'S93\'");
                    int temp763 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker1)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker4)));
                    if ((temp763 == 0)) {
                        this.Manager.Comment("reaching state \'S123\'");
                        bool temp691;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp691);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp691);
                        this.Manager.Comment("reaching state \'S159\'");
                        int temp726 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker2)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker3)));
                        if ((temp726 == 0)) {
                            this.Manager.Comment("reaching state \'S219\'");
                            int temp692;
                            int temp693;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp694;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp694 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp692, out temp693);
                            this.Manager.Comment("reaching state \'S291\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp692, "logonHandleIndex of Logon, state S291");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp693, "inboxFolderIdIndex of Logon, state S291");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp694, "return of Logon, state S291");
                            this.Manager.Comment("reaching state \'S363\'");
                            int temp695;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp696;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp696 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp695);
                            this.Manager.Comment("reaching state \'S435\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp695, "folderHandleIndex of OpenFolder, state S435");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp696, "return of OpenFolder, state S435");
                            this.Manager.Comment("reaching state \'S507\'");
                            int temp697;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp698;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp698 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp697);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S579\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp697, "messageHandleIndex of CreateMessage, state S579");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp698, "return of CreateMessage, state S579");
                            this.Manager.Comment("reaching state \'S651\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp699;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp699 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S723\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp699, "return of SetProperties, state S723");
                            this.Manager.Comment("reaching state \'S795\'");
                            int temp700;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp701;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp701 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp700);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S867\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp700, "messageIdIndex of SaveChangesMessage, state S867");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp701, "return of SaveChangesMessage, state S867");
                            this.Manager.Comment("reaching state \'S939\'");
                            int temp702;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp703;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp703 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp702);
                            this.Manager.Comment("reaching state \'S1011\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp702, "attachmentHandleIndex of CreateAttachment, state S1011");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp703, "return of CreateAttachment, state S1011");
                            this.Manager.Comment("reaching state \'S1083\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp704;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp704 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1155\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp704, "return of SaveChangesAttachment, state S1155");
                            this.Manager.Comment("reaching state \'S1227\'");
                            int temp705;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp706;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,BestBody,RecoverMode,[2]," +
                                    "out _)\'");
                            temp706 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp705);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1299\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp705, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1299");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp706, "return of FastTransferSourceCopyMessages, state S1299");
                            this.Manager.Comment("reaching state \'S1419\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp707;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp707 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1539\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp707, "return of Release, state S1539");
                            this.Manager.Comment("reaching state \'S1707\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp708;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp708 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1875\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp708, "return of Release, state S1875");
                            this.Manager.Comment("reaching state \'S2139\'");
                            goto label80;
                        }
                        if ((temp726 == 1)) {
                            this.Manager.Comment("reaching state \'S220\'");
                            int temp709;
                            int temp710;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp711;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp711 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp709, out temp710);
                            this.Manager.Comment("reaching state \'S292\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp709, "logonHandleIndex of Logon, state S292");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp710, "inboxFolderIdIndex of Logon, state S292");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp711, "return of Logon, state S292");
                            this.Manager.Comment("reaching state \'S364\'");
                            int temp712;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp713;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp713 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp712);
                            this.Manager.Comment("reaching state \'S436\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp712, "folderHandleIndex of OpenFolder, state S436");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp713, "return of OpenFolder, state S436");
                            this.Manager.Comment("reaching state \'S508\'");
                            int temp714;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp715;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp715 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp714);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S580\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp714, "messageHandleIndex of CreateMessage, state S580");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp715, "return of CreateMessage, state S580");
                            this.Manager.Comment("reaching state \'S652\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp716;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp716 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S724\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp716, "return of SetProperties, state S724");
                            this.Manager.Comment("reaching state \'S796\'");
                            int temp717;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp718;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp718 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp717);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S868\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp717, "messageIdIndex of SaveChangesMessage, state S868");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp718, "return of SaveChangesMessage, state S868");
                            this.Manager.Comment("reaching state \'S940\'");
                            int temp719;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp720;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp720 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp719);
                            this.Manager.Comment("reaching state \'S1012\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp719, "attachmentHandleIndex of CreateAttachment, state S1012");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp720, "return of CreateAttachment, state S1012");
                            this.Manager.Comment("reaching state \'S1084\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp721;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp721 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1156\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp721, "return of SaveChangesAttachment, state S1156");
                            this.Manager.Comment("reaching state \'S1228\'");
                            int temp722;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp723;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,BestBody,RecoverMode,[2]," +
                                    "out _)\'");
                            temp723 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp722);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1300\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp722, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1300");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp723, "return of FastTransferSourceCopyMessages, state S1300");
                            this.Manager.Comment("reaching state \'S1420\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp724;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp724 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1540\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp724, "return of Release, state S1540");
                            this.Manager.Comment("reaching state \'S1708\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp725;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp725 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1876\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp725, "return of Release, state S1876");
                            this.Manager.Comment("reaching state \'S2140\'");
                            goto label80;
                        }
                        throw new InvalidOperationException("never reached");
                    label80:
;
                        goto label82;
                    }
                    if ((temp763 == 1)) {
                        this.Manager.Comment("reaching state \'S124\'");
                        bool temp727;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp727);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp727);
                        this.Manager.Comment("reaching state \'S160\'");
                        int temp762 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker5)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker6)));
                        if ((temp762 == 0)) {
                            this.Manager.Comment("reaching state \'S221\'");
                            int temp728;
                            int temp729;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp730;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp730 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp728, out temp729);
                            this.Manager.Comment("reaching state \'S293\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp728, "logonHandleIndex of Logon, state S293");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp729, "inboxFolderIdIndex of Logon, state S293");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp730, "return of Logon, state S293");
                            this.Manager.Comment("reaching state \'S365\'");
                            int temp731;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp732;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp732 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp731);
                            this.Manager.Comment("reaching state \'S437\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp731, "folderHandleIndex of OpenFolder, state S437");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp732, "return of OpenFolder, state S437");
                            this.Manager.Comment("reaching state \'S509\'");
                            int temp733;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp734;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp734 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp733);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S581\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp733, "messageHandleIndex of CreateMessage, state S581");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp734, "return of CreateMessage, state S581");
                            this.Manager.Comment("reaching state \'S653\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp735;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp735 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S725\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp735, "return of SetProperties, state S725");
                            this.Manager.Comment("reaching state \'S797\'");
                            int temp736;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp737;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp737 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp736);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S869\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp736, "messageIdIndex of SaveChangesMessage, state S869");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp737, "return of SaveChangesMessage, state S869");
                            this.Manager.Comment("reaching state \'S941\'");
                            int temp738;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp739;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp739 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp738);
                            this.Manager.Comment("reaching state \'S1013\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp738, "attachmentHandleIndex of CreateAttachment, state S1013");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp739, "return of CreateAttachment, state S1013");
                            this.Manager.Comment("reaching state \'S1085\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp740;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp740 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1157\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp740, "return of SaveChangesAttachment, state S1157");
                            this.Manager.Comment("reaching state \'S1229\'");
                            int temp741;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp742;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,BestBody,RecoverMode,[2]," +
                                    "out _)\'");
                            temp742 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp741);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1301\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp741, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1301");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp742, "return of FastTransferSourceCopyMessages, state S1301");
                            this.Manager.Comment("reaching state \'S1421\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp743;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp743 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1541\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp743, "return of Release, state S1541");
                            this.Manager.Comment("reaching state \'S1709\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp744;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp744 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1877\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp744, "return of Release, state S1877");
                            this.Manager.Comment("reaching state \'S2141\'");
                            goto label81;
                        }
                        if ((temp762 == 1)) {
                            this.Manager.Comment("reaching state \'S222\'");
                            int temp745;
                            int temp746;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp747;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp747 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp745, out temp746);
                            this.Manager.Comment("reaching state \'S294\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp745, "logonHandleIndex of Logon, state S294");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp746, "inboxFolderIdIndex of Logon, state S294");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp747, "return of Logon, state S294");
                            this.Manager.Comment("reaching state \'S366\'");
                            int temp748;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp749;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp749 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp748);
                            this.Manager.Comment("reaching state \'S438\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp748, "folderHandleIndex of OpenFolder, state S438");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp749, "return of OpenFolder, state S438");
                            this.Manager.Comment("reaching state \'S510\'");
                            int temp750;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp751;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp751 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp750);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S582\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp750, "messageHandleIndex of CreateMessage, state S582");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp751, "return of CreateMessage, state S582");
                            this.Manager.Comment("reaching state \'S654\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp752;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp752 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S726\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp752, "return of SetProperties, state S726");
                            this.Manager.Comment("reaching state \'S798\'");
                            int temp753;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp754;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp754 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp753);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S870\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp753, "messageIdIndex of SaveChangesMessage, state S870");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp754, "return of SaveChangesMessage, state S870");
                            this.Manager.Comment("reaching state \'S942\'");
                            int temp755;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp756;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp756 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp755);
                            this.Manager.Comment("reaching state \'S1014\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp755, "attachmentHandleIndex of CreateAttachment, state S1014");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp756, "return of CreateAttachment, state S1014");
                            this.Manager.Comment("reaching state \'S1086\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp757;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp757 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1158\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp757, "return of SaveChangesAttachment, state S1158");
                            this.Manager.Comment("reaching state \'S1230\'");
                            int temp758;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp759;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,BestBody,RecoverMode,[2]," +
                                    "out _)\'");
                            temp759 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp758);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1302\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp758, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1302");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp759, "return of FastTransferSourceCopyMessages, state S1302");
                            this.Manager.Comment("reaching state \'S1422\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp760;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp760 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1542\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp760, "return of Release, state S1542");
                            this.Manager.Comment("reaching state \'S1710\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp761;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp761 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1878\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp761, "return of Release, state S1878");
                            this.Manager.Comment("reaching state \'S2142\'");
                            goto label81;
                        }
                        throw new InvalidOperationException("never reached");
                    label81:
;
                        goto label82;
                    }
                    throw new InvalidOperationException("never reached");
                label82:
;
                    goto label86;
                }
                if ((temp838 == 1)) {
                    this.Manager.Comment("reaching state \'S76\'");
                    bool temp764;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp764);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp764);
                    this.Manager.Comment("reaching state \'S94\'");
                    int temp837 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker8)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker11)));
                    if ((temp837 == 0)) {
                        this.Manager.Comment("reaching state \'S125\'");
                        bool temp765;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp765);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp765);
                        this.Manager.Comment("reaching state \'S161\'");
                        int temp800 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker9)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker10)));
                        if ((temp800 == 0)) {
                            this.Manager.Comment("reaching state \'S223\'");
                            int temp766;
                            int temp767;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp768;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp768 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp766, out temp767);
                            this.Manager.Comment("reaching state \'S295\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp766, "logonHandleIndex of Logon, state S295");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp767, "inboxFolderIdIndex of Logon, state S295");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp768, "return of Logon, state S295");
                            this.Manager.Comment("reaching state \'S367\'");
                            int temp769;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp770;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp770 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp769);
                            this.Manager.Comment("reaching state \'S439\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp769, "folderHandleIndex of OpenFolder, state S439");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp770, "return of OpenFolder, state S439");
                            this.Manager.Comment("reaching state \'S511\'");
                            int temp771;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp772;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp772 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp771);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S583\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp771, "messageHandleIndex of CreateMessage, state S583");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp772, "return of CreateMessage, state S583");
                            this.Manager.Comment("reaching state \'S655\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp773;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp773 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S727\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp773, "return of SetProperties, state S727");
                            this.Manager.Comment("reaching state \'S799\'");
                            int temp774;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp775;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp775 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp774);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S871\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp774, "messageIdIndex of SaveChangesMessage, state S871");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp775, "return of SaveChangesMessage, state S871");
                            this.Manager.Comment("reaching state \'S943\'");
                            int temp776;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp777;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp777 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp776);
                            this.Manager.Comment("reaching state \'S1015\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp776, "attachmentHandleIndex of CreateAttachment, state S1015");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp777, "return of CreateAttachment, state S1015");
                            this.Manager.Comment("reaching state \'S1087\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp778;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp778 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1159\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp778, "return of SaveChangesAttachment, state S1159");
                            this.Manager.Comment("reaching state \'S1231\'");
                            int temp779;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp780;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,BestBody,RecoverMode,[2]," +
                                    "out _)\'");
                            temp780 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp779);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1303\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp779, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1303");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp780, "return of FastTransferSourceCopyMessages, state S1303");
                            this.Manager.Comment("reaching state \'S1423\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp781;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp781 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1543\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp781, "return of Release, state S1543");
                            this.Manager.Comment("reaching state \'S1711\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp782;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp782 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1879\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp782, "return of Release, state S1879");
                            this.Manager.Comment("reaching state \'S2143\'");
                            goto label83;
                        }
                        if ((temp800 == 1)) {
                            this.Manager.Comment("reaching state \'S224\'");
                            int temp783;
                            int temp784;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp785;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp785 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp783, out temp784);
                            this.Manager.Comment("reaching state \'S296\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp783, "logonHandleIndex of Logon, state S296");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp784, "inboxFolderIdIndex of Logon, state S296");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp785, "return of Logon, state S296");
                            this.Manager.Comment("reaching state \'S368\'");
                            int temp786;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp787;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp787 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp786);
                            this.Manager.Comment("reaching state \'S440\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp786, "folderHandleIndex of OpenFolder, state S440");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp787, "return of OpenFolder, state S440");
                            this.Manager.Comment("reaching state \'S512\'");
                            int temp788;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp789;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp789 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp788);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S584\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp788, "messageHandleIndex of CreateMessage, state S584");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp789, "return of CreateMessage, state S584");
                            this.Manager.Comment("reaching state \'S656\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp790;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp790 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S728\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp790, "return of SetProperties, state S728");
                            this.Manager.Comment("reaching state \'S800\'");
                            int temp791;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp792;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp792 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp791);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S872\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp791, "messageIdIndex of SaveChangesMessage, state S872");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp792, "return of SaveChangesMessage, state S872");
                            this.Manager.Comment("reaching state \'S944\'");
                            int temp793;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp794;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp794 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp793);
                            this.Manager.Comment("reaching state \'S1016\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp793, "attachmentHandleIndex of CreateAttachment, state S1016");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp794, "return of CreateAttachment, state S1016");
                            this.Manager.Comment("reaching state \'S1088\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp795;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp795 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1160\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp795, "return of SaveChangesAttachment, state S1160");
                            this.Manager.Comment("reaching state \'S1232\'");
                            int temp796;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp797;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,BestBody,RecoverMode,[2]," +
                                    "out _)\'");
                            temp797 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp796);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1304\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp796, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1304");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp797, "return of FastTransferSourceCopyMessages, state S1304");
                            this.Manager.Comment("reaching state \'S1424\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp798;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp798 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1544\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp798, "return of Release, state S1544");
                            this.Manager.Comment("reaching state \'S1712\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp799;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp799 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1880\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp799, "return of Release, state S1880");
                            this.Manager.Comment("reaching state \'S2144\'");
                            goto label83;
                        }
                        throw new InvalidOperationException("never reached");
                    label83:
;
                        goto label85;
                    }
                    if ((temp837 == 1)) {
                        this.Manager.Comment("reaching state \'S126\'");
                        bool temp801;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp801);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp801);
                        this.Manager.Comment("reaching state \'S162\'");
                        int temp836 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker12)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker13)));
                        if ((temp836 == 0)) {
                            this.Manager.Comment("reaching state \'S225\'");
                            int temp802;
                            int temp803;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp804;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp804 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp802, out temp803);
                            this.Manager.Comment("reaching state \'S297\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp802, "logonHandleIndex of Logon, state S297");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp803, "inboxFolderIdIndex of Logon, state S297");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp804, "return of Logon, state S297");
                            this.Manager.Comment("reaching state \'S369\'");
                            int temp805;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp806;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp806 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp805);
                            this.Manager.Comment("reaching state \'S441\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp805, "folderHandleIndex of OpenFolder, state S441");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp806, "return of OpenFolder, state S441");
                            this.Manager.Comment("reaching state \'S513\'");
                            int temp807;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp808;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp808 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp807);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S585\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp807, "messageHandleIndex of CreateMessage, state S585");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp808, "return of CreateMessage, state S585");
                            this.Manager.Comment("reaching state \'S657\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp809;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp809 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S729\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp809, "return of SetProperties, state S729");
                            this.Manager.Comment("reaching state \'S801\'");
                            int temp810;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp811;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp811 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp810);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S873\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp810, "messageIdIndex of SaveChangesMessage, state S873");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp811, "return of SaveChangesMessage, state S873");
                            this.Manager.Comment("reaching state \'S945\'");
                            int temp812;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp813;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp813 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp812);
                            this.Manager.Comment("reaching state \'S1017\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp812, "attachmentHandleIndex of CreateAttachment, state S1017");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp813, "return of CreateAttachment, state S1017");
                            this.Manager.Comment("reaching state \'S1089\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp814;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp814 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1161\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp814, "return of SaveChangesAttachment, state S1161");
                            this.Manager.Comment("reaching state \'S1233\'");
                            int temp815;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp816;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,BestBody,RecoverMode,[2]," +
                                    "out _)\'");
                            temp816 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp815);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1305\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp815, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1305");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp816, "return of FastTransferSourceCopyMessages, state S1305");
                            this.Manager.Comment("reaching state \'S1425\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp817;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp817 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1545\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp817, "return of Release, state S1545");
                            this.Manager.Comment("reaching state \'S1713\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp818;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp818 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1881\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp818, "return of Release, state S1881");
                            this.Manager.Comment("reaching state \'S2145\'");
                            goto label84;
                        }
                        if ((temp836 == 1)) {
                            this.Manager.Comment("reaching state \'S226\'");
                            int temp819;
                            int temp820;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp821;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp821 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp819, out temp820);
                            this.Manager.Comment("reaching state \'S298\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp819, "logonHandleIndex of Logon, state S298");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp820, "inboxFolderIdIndex of Logon, state S298");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp821, "return of Logon, state S298");
                            this.Manager.Comment("reaching state \'S370\'");
                            int temp822;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp823;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp823 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp822);
                            this.Manager.Comment("reaching state \'S442\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp822, "folderHandleIndex of OpenFolder, state S442");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp823, "return of OpenFolder, state S442");
                            this.Manager.Comment("reaching state \'S514\'");
                            int temp824;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp825;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp825 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp824);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S586\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp824, "messageHandleIndex of CreateMessage, state S586");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp825, "return of CreateMessage, state S586");
                            this.Manager.Comment("reaching state \'S658\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp826;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp826 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S730\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp826, "return of SetProperties, state S730");
                            this.Manager.Comment("reaching state \'S802\'");
                            int temp827;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp828;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp828 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp827);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S874\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp827, "messageIdIndex of SaveChangesMessage, state S874");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp828, "return of SaveChangesMessage, state S874");
                            this.Manager.Comment("reaching state \'S946\'");
                            int temp829;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp830;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp830 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp829);
                            this.Manager.Comment("reaching state \'S1018\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp829, "attachmentHandleIndex of CreateAttachment, state S1018");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp830, "return of CreateAttachment, state S1018");
                            this.Manager.Comment("reaching state \'S1090\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp831;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp831 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1162\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp831, "return of SaveChangesAttachment, state S1162");
                            this.Manager.Comment("reaching state \'S1234\'");
                            int temp832;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp833;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,BestBody,RecoverMode,[2]," +
                                    "out _)\'");
                            temp833 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp832);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1306\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp832, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1306");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp833, "return of FastTransferSourceCopyMessages, state S1306");
                            this.Manager.Comment("reaching state \'S1426\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp834;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp834 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1546\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp834, "return of Release, state S1546");
                            this.Manager.Comment("reaching state \'S1714\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp835;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp835 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1882\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp835, "return of Release, state S1882");
                            this.Manager.Comment("reaching state \'S2146\'");
                            goto label84;
                        }
                        throw new InvalidOperationException("never reached");
                    label84:
;
                        goto label85;
                    }
                    throw new InvalidOperationException("never reached");
                label85:
;
                    goto label86;
                }
                throw new InvalidOperationException("never reached");
            label86:
;
                goto label87;
            }
            if ((temp839 == 1)) {
                this.Manager.Comment("reaching state \'S31\'");
                goto label87;
            }
            throw new InvalidOperationException("never reached");
        label87:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S60");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S93");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S159");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S159");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S93");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S160");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S160");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S60");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S94");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S161");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S161");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S94");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S162");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S162");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        #endregion
        
        #region Test Starting in S14
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3");
            this.Manager.Comment("reaching state \'S14\'");
            bool temp840;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp840);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp840);
            this.Manager.Comment("reaching state \'S15\'");
            int temp991 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp991 == 0)) {
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S43\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S52\'");
                bool temp841;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2117002,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2117002, out temp841);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp841);
                this.Manager.Comment("reaching state \'S61\'");
                int temp990 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker7)));
                if ((temp990 == 0)) {
                    this.Manager.Comment("reaching state \'S77\'");
                    bool temp842;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp842);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp842);
                    this.Manager.Comment("reaching state \'S95\'");
                    int temp915 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker1)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker4)));
                    if ((temp915 == 0)) {
                        this.Manager.Comment("reaching state \'S127\'");
                        bool temp843;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp843);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp843);
                        this.Manager.Comment("reaching state \'S163\'");
                        int temp878 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker2)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker3)));
                        if ((temp878 == 0)) {
                            this.Manager.Comment("reaching state \'S227\'");
                            int temp844;
                            int temp845;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp846;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp846 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp844, out temp845);
                            this.Manager.Comment("reaching state \'S299\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp844, "logonHandleIndex of Logon, state S299");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp845, "inboxFolderIdIndex of Logon, state S299");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp846, "return of Logon, state S299");
                            this.Manager.Comment("reaching state \'S371\'");
                            int temp847;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp848;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp848 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp847);
                            this.Manager.Comment("reaching state \'S443\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp847, "folderHandleIndex of OpenFolder, state S443");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp848, "return of OpenFolder, state S443");
                            this.Manager.Comment("reaching state \'S515\'");
                            int temp849;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp850;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp850 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp849);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S587\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp849, "messageHandleIndex of CreateMessage, state S587");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp850, "return of CreateMessage, state S587");
                            this.Manager.Comment("reaching state \'S659\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp851;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp851 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S731\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp851, "return of SetProperties, state S731");
                            this.Manager.Comment("reaching state \'S803\'");
                            int temp852;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp853;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp853 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp852);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S875\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp852, "messageIdIndex of SaveChangesMessage, state S875");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp853, "return of SaveChangesMessage, state S875");
                            this.Manager.Comment("reaching state \'S947\'");
                            int temp854;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp855;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp855 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp854);
                            this.Manager.Comment("reaching state \'S1019\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp854, "attachmentHandleIndex of CreateAttachment, state S1019");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp855, "return of CreateAttachment, state S1019");
                            this.Manager.Comment("reaching state \'S1091\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp856;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp856 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1163\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp856, "return of SaveChangesAttachment, state S1163");
                            this.Manager.Comment("reaching state \'S1235\'");
                            int temp857;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp858;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,Move,Unicode|ForceUnicode" +
                                    ",[2],out _)\'");
                            temp858 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, ((Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp857);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1307\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp857, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1307");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp858, "return of FastTransferSourceCopyMessages, state S1307");
                            this.Manager.Comment("reaching state \'S1427\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp859;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp859 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1547\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp859, "return of Release, state S1547");
                            this.Manager.Comment("reaching state \'S1715\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp860;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp860 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1883\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp860, "return of Release, state S1883");
                            this.Manager.Comment("reaching state \'S2147\'");
                            goto label88;
                        }
                        if ((temp878 == 1)) {
                            this.Manager.Comment("reaching state \'S228\'");
                            int temp861;
                            int temp862;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp863;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp863 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp861, out temp862);
                            this.Manager.Comment("reaching state \'S300\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp861, "logonHandleIndex of Logon, state S300");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp862, "inboxFolderIdIndex of Logon, state S300");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp863, "return of Logon, state S300");
                            this.Manager.Comment("reaching state \'S372\'");
                            int temp864;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp865;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp865 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp864);
                            this.Manager.Comment("reaching state \'S444\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp864, "folderHandleIndex of OpenFolder, state S444");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp865, "return of OpenFolder, state S444");
                            this.Manager.Comment("reaching state \'S516\'");
                            int temp866;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp867;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp867 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp866);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S588\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp866, "messageHandleIndex of CreateMessage, state S588");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp867, "return of CreateMessage, state S588");
                            this.Manager.Comment("reaching state \'S660\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp868;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp868 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S732\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp868, "return of SetProperties, state S732");
                            this.Manager.Comment("reaching state \'S804\'");
                            int temp869;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp870;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp870 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp869);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S876\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp869, "messageIdIndex of SaveChangesMessage, state S876");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp870, "return of SaveChangesMessage, state S876");
                            this.Manager.Comment("reaching state \'S948\'");
                            int temp871;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp872;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp872 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp871);
                            this.Manager.Comment("reaching state \'S1020\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp871, "attachmentHandleIndex of CreateAttachment, state S1020");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp872, "return of CreateAttachment, state S1020");
                            this.Manager.Comment("reaching state \'S1092\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp873;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp873 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1164\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp873, "return of SaveChangesAttachment, state S1164");
                            this.Manager.Comment("reaching state \'S1236\'");
                            int temp874;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp875;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,Move,Unicode|ForceUnicode" +
                                    ",[2],out _)\'");
                            temp875 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, ((Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp874);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1308\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp874, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1308");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp875, "return of FastTransferSourceCopyMessages, state S1308");
                            this.Manager.Comment("reaching state \'S1428\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp876;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp876 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1548\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp876, "return of Release, state S1548");
                            this.Manager.Comment("reaching state \'S1716\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp877;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp877 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1884\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp877, "return of Release, state S1884");
                            this.Manager.Comment("reaching state \'S2148\'");
                            goto label88;
                        }
                        throw new InvalidOperationException("never reached");
                    label88:
;
                        goto label90;
                    }
                    if ((temp915 == 1)) {
                        this.Manager.Comment("reaching state \'S128\'");
                        bool temp879;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp879);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp879);
                        this.Manager.Comment("reaching state \'S164\'");
                        int temp914 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker5)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker6)));
                        if ((temp914 == 0)) {
                            this.Manager.Comment("reaching state \'S229\'");
                            int temp880;
                            int temp881;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp882;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp882 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp880, out temp881);
                            this.Manager.Comment("reaching state \'S301\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp880, "logonHandleIndex of Logon, state S301");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp881, "inboxFolderIdIndex of Logon, state S301");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp882, "return of Logon, state S301");
                            this.Manager.Comment("reaching state \'S373\'");
                            int temp883;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp884;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp884 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp883);
                            this.Manager.Comment("reaching state \'S445\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp883, "folderHandleIndex of OpenFolder, state S445");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp884, "return of OpenFolder, state S445");
                            this.Manager.Comment("reaching state \'S517\'");
                            int temp885;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp886;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp886 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp885);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S589\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp885, "messageHandleIndex of CreateMessage, state S589");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp886, "return of CreateMessage, state S589");
                            this.Manager.Comment("reaching state \'S661\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp887;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp887 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S733\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp887, "return of SetProperties, state S733");
                            this.Manager.Comment("reaching state \'S805\'");
                            int temp888;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp889;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp889 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp888);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S877\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp888, "messageIdIndex of SaveChangesMessage, state S877");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp889, "return of SaveChangesMessage, state S877");
                            this.Manager.Comment("reaching state \'S949\'");
                            int temp890;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp891;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp891 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp890);
                            this.Manager.Comment("reaching state \'S1021\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp890, "attachmentHandleIndex of CreateAttachment, state S1021");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp891, "return of CreateAttachment, state S1021");
                            this.Manager.Comment("reaching state \'S1093\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp892;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp892 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1165\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp892, "return of SaveChangesAttachment, state S1165");
                            this.Manager.Comment("reaching state \'S1237\'");
                            int temp893;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp894;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,Move,Unicode|ForceUnicode" +
                                    ",[2],out _)\'");
                            temp894 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, ((Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp893);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1309\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp893, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1309");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp894, "return of FastTransferSourceCopyMessages, state S1309");
                            this.Manager.Comment("reaching state \'S1429\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp895;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp895 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1549\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp895, "return of Release, state S1549");
                            this.Manager.Comment("reaching state \'S1717\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp896;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp896 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1885\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp896, "return of Release, state S1885");
                            this.Manager.Comment("reaching state \'S2149\'");
                            goto label89;
                        }
                        if ((temp914 == 1)) {
                            this.Manager.Comment("reaching state \'S230\'");
                            int temp897;
                            int temp898;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp899;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp899 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp897, out temp898);
                            this.Manager.Comment("reaching state \'S302\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp897, "logonHandleIndex of Logon, state S302");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp898, "inboxFolderIdIndex of Logon, state S302");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp899, "return of Logon, state S302");
                            this.Manager.Comment("reaching state \'S374\'");
                            int temp900;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp901;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp901 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp900);
                            this.Manager.Comment("reaching state \'S446\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp900, "folderHandleIndex of OpenFolder, state S446");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp901, "return of OpenFolder, state S446");
                            this.Manager.Comment("reaching state \'S518\'");
                            int temp902;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp903;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp903 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp902);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S590\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp902, "messageHandleIndex of CreateMessage, state S590");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp903, "return of CreateMessage, state S590");
                            this.Manager.Comment("reaching state \'S662\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp904;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp904 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S734\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp904, "return of SetProperties, state S734");
                            this.Manager.Comment("reaching state \'S806\'");
                            int temp905;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp906;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp906 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp905);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S878\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp905, "messageIdIndex of SaveChangesMessage, state S878");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp906, "return of SaveChangesMessage, state S878");
                            this.Manager.Comment("reaching state \'S950\'");
                            int temp907;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp908;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp908 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp907);
                            this.Manager.Comment("reaching state \'S1022\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp907, "attachmentHandleIndex of CreateAttachment, state S1022");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp908, "return of CreateAttachment, state S1022");
                            this.Manager.Comment("reaching state \'S1094\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp909;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp909 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1166\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp909, "return of SaveChangesAttachment, state S1166");
                            this.Manager.Comment("reaching state \'S1238\'");
                            int temp910;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp911;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,Move,Unicode|ForceUnicode" +
                                    ",[2],out _)\'");
                            temp911 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, ((Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp910);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1310\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp910, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1310");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp911, "return of FastTransferSourceCopyMessages, state S1310");
                            this.Manager.Comment("reaching state \'S1430\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp912;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp912 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1550\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp912, "return of Release, state S1550");
                            this.Manager.Comment("reaching state \'S1718\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp913;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp913 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1886\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp913, "return of Release, state S1886");
                            this.Manager.Comment("reaching state \'S2150\'");
                            goto label89;
                        }
                        throw new InvalidOperationException("never reached");
                    label89:
;
                        goto label90;
                    }
                    throw new InvalidOperationException("never reached");
                label90:
;
                    goto label94;
                }
                if ((temp990 == 1)) {
                    this.Manager.Comment("reaching state \'S78\'");
                    bool temp916;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp916);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp916);
                    this.Manager.Comment("reaching state \'S96\'");
                    int temp989 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker8)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker11)));
                    if ((temp989 == 0)) {
                        this.Manager.Comment("reaching state \'S129\'");
                        bool temp917;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp917);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp917);
                        this.Manager.Comment("reaching state \'S165\'");
                        int temp952 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker9)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker10)));
                        if ((temp952 == 0)) {
                            this.Manager.Comment("reaching state \'S231\'");
                            int temp918;
                            int temp919;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp920;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp920 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp918, out temp919);
                            this.Manager.Comment("reaching state \'S303\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp918, "logonHandleIndex of Logon, state S303");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp919, "inboxFolderIdIndex of Logon, state S303");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp920, "return of Logon, state S303");
                            this.Manager.Comment("reaching state \'S375\'");
                            int temp921;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp922;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp922 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp921);
                            this.Manager.Comment("reaching state \'S447\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp921, "folderHandleIndex of OpenFolder, state S447");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp922, "return of OpenFolder, state S447");
                            this.Manager.Comment("reaching state \'S519\'");
                            int temp923;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp924;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp924 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp923);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S591\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp923, "messageHandleIndex of CreateMessage, state S591");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp924, "return of CreateMessage, state S591");
                            this.Manager.Comment("reaching state \'S663\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp925;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp925 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S735\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp925, "return of SetProperties, state S735");
                            this.Manager.Comment("reaching state \'S807\'");
                            int temp926;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp927;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp927 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp926);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S879\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp926, "messageIdIndex of SaveChangesMessage, state S879");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp927, "return of SaveChangesMessage, state S879");
                            this.Manager.Comment("reaching state \'S951\'");
                            int temp928;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp929;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp929 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp928);
                            this.Manager.Comment("reaching state \'S1023\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp928, "attachmentHandleIndex of CreateAttachment, state S1023");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp929, "return of CreateAttachment, state S1023");
                            this.Manager.Comment("reaching state \'S1095\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp930;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp930 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1167\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp930, "return of SaveChangesAttachment, state S1167");
                            this.Manager.Comment("reaching state \'S1239\'");
                            int temp931;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp932;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,Move,Unicode|ForceUnicode" +
                                    ",[2],out _)\'");
                            temp932 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, ((Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp931);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1311\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp931, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1311");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp932, "return of FastTransferSourceCopyMessages, state S1311");
                            this.Manager.Comment("reaching state \'S1431\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp933;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp933 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1551\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp933, "return of Release, state S1551");
                            this.Manager.Comment("reaching state \'S1719\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp934;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp934 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1887\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp934, "return of Release, state S1887");
                            this.Manager.Comment("reaching state \'S2151\'");
                            goto label91;
                        }
                        if ((temp952 == 1)) {
                            this.Manager.Comment("reaching state \'S232\'");
                            int temp935;
                            int temp936;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp937;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp937 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp935, out temp936);
                            this.Manager.Comment("reaching state \'S304\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp935, "logonHandleIndex of Logon, state S304");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp936, "inboxFolderIdIndex of Logon, state S304");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp937, "return of Logon, state S304");
                            this.Manager.Comment("reaching state \'S376\'");
                            int temp938;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp939;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp939 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp938);
                            this.Manager.Comment("reaching state \'S448\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp938, "folderHandleIndex of OpenFolder, state S448");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp939, "return of OpenFolder, state S448");
                            this.Manager.Comment("reaching state \'S520\'");
                            int temp940;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp941;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp941 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp940);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S592\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp940, "messageHandleIndex of CreateMessage, state S592");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp941, "return of CreateMessage, state S592");
                            this.Manager.Comment("reaching state \'S664\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp942;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp942 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S736\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp942, "return of SetProperties, state S736");
                            this.Manager.Comment("reaching state \'S808\'");
                            int temp943;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp944;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp944 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp943);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S880\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp943, "messageIdIndex of SaveChangesMessage, state S880");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp944, "return of SaveChangesMessage, state S880");
                            this.Manager.Comment("reaching state \'S952\'");
                            int temp945;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp946;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp946 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp945);
                            this.Manager.Comment("reaching state \'S1024\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp945, "attachmentHandleIndex of CreateAttachment, state S1024");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp946, "return of CreateAttachment, state S1024");
                            this.Manager.Comment("reaching state \'S1096\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp947;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp947 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1168\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp947, "return of SaveChangesAttachment, state S1168");
                            this.Manager.Comment("reaching state \'S1240\'");
                            int temp948;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp949;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,Move,Unicode|ForceUnicode" +
                                    ",[2],out _)\'");
                            temp949 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, ((Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp948);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1312\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp948, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1312");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp949, "return of FastTransferSourceCopyMessages, state S1312");
                            this.Manager.Comment("reaching state \'S1432\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp950;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp950 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1552\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp950, "return of Release, state S1552");
                            this.Manager.Comment("reaching state \'S1720\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp951;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp951 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1888\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp951, "return of Release, state S1888");
                            this.Manager.Comment("reaching state \'S2152\'");
                            goto label91;
                        }
                        throw new InvalidOperationException("never reached");
                    label91:
;
                        goto label93;
                    }
                    if ((temp989 == 1)) {
                        this.Manager.Comment("reaching state \'S130\'");
                        bool temp953;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp953);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp953);
                        this.Manager.Comment("reaching state \'S166\'");
                        int temp988 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker12)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker13)));
                        if ((temp988 == 0)) {
                            this.Manager.Comment("reaching state \'S233\'");
                            int temp954;
                            int temp955;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp956;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp956 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp954, out temp955);
                            this.Manager.Comment("reaching state \'S305\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp954, "logonHandleIndex of Logon, state S305");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp955, "inboxFolderIdIndex of Logon, state S305");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp956, "return of Logon, state S305");
                            this.Manager.Comment("reaching state \'S377\'");
                            int temp957;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp958;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp958 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp957);
                            this.Manager.Comment("reaching state \'S449\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp957, "folderHandleIndex of OpenFolder, state S449");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp958, "return of OpenFolder, state S449");
                            this.Manager.Comment("reaching state \'S521\'");
                            int temp959;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp960;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp960 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp959);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S593\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp959, "messageHandleIndex of CreateMessage, state S593");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp960, "return of CreateMessage, state S593");
                            this.Manager.Comment("reaching state \'S665\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp961;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp961 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S737\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp961, "return of SetProperties, state S737");
                            this.Manager.Comment("reaching state \'S809\'");
                            int temp962;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp963;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp963 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp962);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S881\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp962, "messageIdIndex of SaveChangesMessage, state S881");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp963, "return of SaveChangesMessage, state S881");
                            this.Manager.Comment("reaching state \'S953\'");
                            int temp964;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp965;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp965 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp964);
                            this.Manager.Comment("reaching state \'S1025\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp964, "attachmentHandleIndex of CreateAttachment, state S1025");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp965, "return of CreateAttachment, state S1025");
                            this.Manager.Comment("reaching state \'S1097\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp966;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp966 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1169\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp966, "return of SaveChangesAttachment, state S1169");
                            this.Manager.Comment("reaching state \'S1241\'");
                            int temp967;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp968;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,Move,Unicode|ForceUnicode" +
                                    ",[2],out _)\'");
                            temp968 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, ((Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp967);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1313\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp967, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1313");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp968, "return of FastTransferSourceCopyMessages, state S1313");
                            this.Manager.Comment("reaching state \'S1433\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp969;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp969 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1553\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp969, "return of Release, state S1553");
                            this.Manager.Comment("reaching state \'S1721\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp970;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp970 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1889\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp970, "return of Release, state S1889");
                            this.Manager.Comment("reaching state \'S2153\'");
                            goto label92;
                        }
                        if ((temp988 == 1)) {
                            this.Manager.Comment("reaching state \'S234\'");
                            int temp971;
                            int temp972;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp973;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp973 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp971, out temp972);
                            this.Manager.Comment("reaching state \'S306\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp971, "logonHandleIndex of Logon, state S306");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp972, "inboxFolderIdIndex of Logon, state S306");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp973, "return of Logon, state S306");
                            this.Manager.Comment("reaching state \'S378\'");
                            int temp974;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp975;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp975 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp974);
                            this.Manager.Comment("reaching state \'S450\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp974, "folderHandleIndex of OpenFolder, state S450");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp975, "return of OpenFolder, state S450");
                            this.Manager.Comment("reaching state \'S522\'");
                            int temp976;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp977;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp977 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp976);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S594\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp976, "messageHandleIndex of CreateMessage, state S594");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp977, "return of CreateMessage, state S594");
                            this.Manager.Comment("reaching state \'S666\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp978;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp978 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S738\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp978, "return of SetProperties, state S738");
                            this.Manager.Comment("reaching state \'S810\'");
                            int temp979;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp980;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp980 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp979);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S882\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp979, "messageIdIndex of SaveChangesMessage, state S882");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp980, "return of SaveChangesMessage, state S882");
                            this.Manager.Comment("reaching state \'S954\'");
                            int temp981;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp982;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp982 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp981);
                            this.Manager.Comment("reaching state \'S1026\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp981, "attachmentHandleIndex of CreateAttachment, state S1026");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp982, "return of CreateAttachment, state S1026");
                            this.Manager.Comment("reaching state \'S1098\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp983;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp983 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1170\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp983, "return of SaveChangesAttachment, state S1170");
                            this.Manager.Comment("reaching state \'S1242\'");
                            int temp984;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp985;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,Move,Unicode|ForceUnicode" +
                                    ",[2],out _)\'");
                            temp985 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, ((Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp984);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1314\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp984, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1314");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp985, "return of FastTransferSourceCopyMessages, state S1314");
                            this.Manager.Comment("reaching state \'S1434\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp986;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp986 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1554\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp986, "return of Release, state S1554");
                            this.Manager.Comment("reaching state \'S1722\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp987;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp987 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1890\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp987, "return of Release, state S1890");
                            this.Manager.Comment("reaching state \'S2154\'");
                            goto label92;
                        }
                        throw new InvalidOperationException("never reached");
                    label92:
;
                        goto label93;
                    }
                    throw new InvalidOperationException("never reached");
                label93:
;
                    goto label94;
                }
                throw new InvalidOperationException("never reached");
            label94:
;
                goto label95;
            }
            if ((temp991 == 1)) {
                this.Manager.Comment("reaching state \'S33\'");
                goto label95;
            }
            throw new InvalidOperationException("never reached");
        label95:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S61");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S95");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S163");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S163");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S95");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S164");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S164");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S61");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S96");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S165");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S165");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S96");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S166");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S166");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite3CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        #endregion
        
        #region Test Starting in S16
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4");
            this.Manager.Comment("reaching state \'S16\'");
            bool temp992;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp992);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp992);
            this.Manager.Comment("reaching state \'S17\'");
            int temp1143 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp1143 == 0)) {
                this.Manager.Comment("reaching state \'S34\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S53\'");
                bool temp993;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2117002,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2117002, out temp993);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp993);
                this.Manager.Comment("reaching state \'S62\'");
                int temp1142 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker7)));
                if ((temp1142 == 0)) {
                    this.Manager.Comment("reaching state \'S79\'");
                    bool temp994;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp994);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp994);
                    this.Manager.Comment("reaching state \'S97\'");
                    int temp1067 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker1)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker4)));
                    if ((temp1067 == 0)) {
                        this.Manager.Comment("reaching state \'S131\'");
                        bool temp995;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp995);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp995);
                        this.Manager.Comment("reaching state \'S167\'");
                        int temp1030 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker2)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker3)));
                        if ((temp1030 == 0)) {
                            this.Manager.Comment("reaching state \'S235\'");
                            int temp996;
                            int temp997;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp998;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp998 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp996, out temp997);
                            this.Manager.Comment("reaching state \'S307\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp996, "logonHandleIndex of Logon, state S307");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp997, "inboxFolderIdIndex of Logon, state S307");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp998, "return of Logon, state S307");
                            this.Manager.Comment("reaching state \'S379\'");
                            int temp999;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1000;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1000 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp999);
                            this.Manager.Comment("reaching state \'S451\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp999, "folderHandleIndex of OpenFolder, state S451");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1000, "return of OpenFolder, state S451");
                            this.Manager.Comment("reaching state \'S523\'");
                            int temp1001;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1002;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1002 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1001);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S595\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1001, "messageHandleIndex of CreateMessage, state S595");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1002, "return of CreateMessage, state S595");
                            this.Manager.Comment("reaching state \'S667\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1003;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1003 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S739\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1003, "return of SetProperties, state S739");
                            this.Manager.Comment("reaching state \'S811\'");
                            int temp1004;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1005;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1005 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1004);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S883\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1004, "messageIdIndex of SaveChangesMessage, state S883");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1005, "return of SaveChangesMessage, state S883");
                            this.Manager.Comment("reaching state \'S955\'");
                            int temp1006;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1007;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1007 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1006);
                            this.Manager.Comment("reaching state \'S1027\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1006, "attachmentHandleIndex of CreateAttachment, state S1027");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1007, "return of CreateAttachment, state S1027");
                            this.Manager.Comment("reaching state \'S1099\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1008;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1008 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1171\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1008, "return of SaveChangesAttachment, state S1171");
                            this.Manager.Comment("reaching state \'S1243\'");
                            int temp1009;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1010;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,SendEntryId,Unicode,[2],o" +
                                    "ut _)\'");
                            temp1010 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.SendEntryId, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp1009);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1315\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1009, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1315");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1010, "return of FastTransferSourceCopyMessages, state S1315");
                            this.Manager.Comment("reaching state \'S1435\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1011;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp1011 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1555\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1011, "return of Release, state S1555");
                            this.Manager.Comment("reaching state \'S1723\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1012;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp1012 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1891\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1012, "return of Release, state S1891");
                            this.Manager.Comment("reaching state \'S2155\'");
                            goto label96;
                        }
                        if ((temp1030 == 1)) {
                            this.Manager.Comment("reaching state \'S236\'");
                            int temp1013;
                            int temp1014;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1015;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1015 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1013, out temp1014);
                            this.Manager.Comment("reaching state \'S308\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1013, "logonHandleIndex of Logon, state S308");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1014, "inboxFolderIdIndex of Logon, state S308");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1015, "return of Logon, state S308");
                            this.Manager.Comment("reaching state \'S380\'");
                            int temp1016;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1017;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1017 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1016);
                            this.Manager.Comment("reaching state \'S452\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1016, "folderHandleIndex of OpenFolder, state S452");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1017, "return of OpenFolder, state S452");
                            this.Manager.Comment("reaching state \'S524\'");
                            int temp1018;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1019;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1019 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1018);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S596\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1018, "messageHandleIndex of CreateMessage, state S596");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1019, "return of CreateMessage, state S596");
                            this.Manager.Comment("reaching state \'S668\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1020;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1020 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S740\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1020, "return of SetProperties, state S740");
                            this.Manager.Comment("reaching state \'S812\'");
                            int temp1021;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1022;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1022 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1021);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S884\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1021, "messageIdIndex of SaveChangesMessage, state S884");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1022, "return of SaveChangesMessage, state S884");
                            this.Manager.Comment("reaching state \'S956\'");
                            int temp1023;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1024;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1024 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1023);
                            this.Manager.Comment("reaching state \'S1028\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1023, "attachmentHandleIndex of CreateAttachment, state S1028");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1024, "return of CreateAttachment, state S1028");
                            this.Manager.Comment("reaching state \'S1100\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1025;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1025 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1172\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1025, "return of SaveChangesAttachment, state S1172");
                            this.Manager.Comment("reaching state \'S1244\'");
                            int temp1026;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1027;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,SendEntryId,Unicode,[2],o" +
                                    "ut _)\'");
                            temp1027 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.SendEntryId, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp1026);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1316\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1026, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1316");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1027, "return of FastTransferSourceCopyMessages, state S1316");
                            this.Manager.Comment("reaching state \'S1436\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1028;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp1028 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1556\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1028, "return of Release, state S1556");
                            this.Manager.Comment("reaching state \'S1724\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1029;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp1029 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1892\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1029, "return of Release, state S1892");
                            this.Manager.Comment("reaching state \'S2156\'");
                            goto label96;
                        }
                        throw new InvalidOperationException("never reached");
                    label96:
;
                        goto label98;
                    }
                    if ((temp1067 == 1)) {
                        this.Manager.Comment("reaching state \'S132\'");
                        bool temp1031;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1031);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1031);
                        this.Manager.Comment("reaching state \'S168\'");
                        int temp1066 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker5)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker6)));
                        if ((temp1066 == 0)) {
                            this.Manager.Comment("reaching state \'S237\'");
                            int temp1032;
                            int temp1033;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1034;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1034 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1032, out temp1033);
                            this.Manager.Comment("reaching state \'S309\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1032, "logonHandleIndex of Logon, state S309");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1033, "inboxFolderIdIndex of Logon, state S309");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1034, "return of Logon, state S309");
                            this.Manager.Comment("reaching state \'S381\'");
                            int temp1035;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1036;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1036 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1035);
                            this.Manager.Comment("reaching state \'S453\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1035, "folderHandleIndex of OpenFolder, state S453");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1036, "return of OpenFolder, state S453");
                            this.Manager.Comment("reaching state \'S525\'");
                            int temp1037;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1038;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1038 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1037);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S597\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1037, "messageHandleIndex of CreateMessage, state S597");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1038, "return of CreateMessage, state S597");
                            this.Manager.Comment("reaching state \'S669\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1039;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1039 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S741\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1039, "return of SetProperties, state S741");
                            this.Manager.Comment("reaching state \'S813\'");
                            int temp1040;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1041;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1041 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1040);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S885\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1040, "messageIdIndex of SaveChangesMessage, state S885");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1041, "return of SaveChangesMessage, state S885");
                            this.Manager.Comment("reaching state \'S957\'");
                            int temp1042;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1043;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1043 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1042);
                            this.Manager.Comment("reaching state \'S1029\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1042, "attachmentHandleIndex of CreateAttachment, state S1029");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1043, "return of CreateAttachment, state S1029");
                            this.Manager.Comment("reaching state \'S1101\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1044;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1044 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1173\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1044, "return of SaveChangesAttachment, state S1173");
                            this.Manager.Comment("reaching state \'S1245\'");
                            int temp1045;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1046;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,SendEntryId,Unicode,[2],o" +
                                    "ut _)\'");
                            temp1046 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.SendEntryId, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp1045);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1317\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1045, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1317");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1046, "return of FastTransferSourceCopyMessages, state S1317");
                            this.Manager.Comment("reaching state \'S1437\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1047;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp1047 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1557\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1047, "return of Release, state S1557");
                            this.Manager.Comment("reaching state \'S1725\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1048;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp1048 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1893\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1048, "return of Release, state S1893");
                            this.Manager.Comment("reaching state \'S2157\'");
                            goto label97;
                        }
                        if ((temp1066 == 1)) {
                            this.Manager.Comment("reaching state \'S238\'");
                            int temp1049;
                            int temp1050;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1051;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1051 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1049, out temp1050);
                            this.Manager.Comment("reaching state \'S310\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1049, "logonHandleIndex of Logon, state S310");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1050, "inboxFolderIdIndex of Logon, state S310");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1051, "return of Logon, state S310");
                            this.Manager.Comment("reaching state \'S382\'");
                            int temp1052;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1053;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1053 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1052);
                            this.Manager.Comment("reaching state \'S454\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1052, "folderHandleIndex of OpenFolder, state S454");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1053, "return of OpenFolder, state S454");
                            this.Manager.Comment("reaching state \'S526\'");
                            int temp1054;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1055;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1055 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1054);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S598\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1054, "messageHandleIndex of CreateMessage, state S598");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1055, "return of CreateMessage, state S598");
                            this.Manager.Comment("reaching state \'S670\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1056;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1056 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S742\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1056, "return of SetProperties, state S742");
                            this.Manager.Comment("reaching state \'S814\'");
                            int temp1057;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1058;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1058 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1057);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S886\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1057, "messageIdIndex of SaveChangesMessage, state S886");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1058, "return of SaveChangesMessage, state S886");
                            this.Manager.Comment("reaching state \'S958\'");
                            int temp1059;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1060;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1060 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1059);
                            this.Manager.Comment("reaching state \'S1030\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1059, "attachmentHandleIndex of CreateAttachment, state S1030");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1060, "return of CreateAttachment, state S1030");
                            this.Manager.Comment("reaching state \'S1102\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1061;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1061 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1174\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1061, "return of SaveChangesAttachment, state S1174");
                            this.Manager.Comment("reaching state \'S1246\'");
                            int temp1062;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1063;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,SendEntryId,Unicode,[2],o" +
                                    "ut _)\'");
                            temp1063 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.SendEntryId, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp1062);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1318\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1062, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1318");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1063, "return of FastTransferSourceCopyMessages, state S1318");
                            this.Manager.Comment("reaching state \'S1438\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1064;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp1064 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1558\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1064, "return of Release, state S1558");
                            this.Manager.Comment("reaching state \'S1726\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1065;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp1065 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1894\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1065, "return of Release, state S1894");
                            this.Manager.Comment("reaching state \'S2158\'");
                            goto label97;
                        }
                        throw new InvalidOperationException("never reached");
                    label97:
;
                        goto label98;
                    }
                    throw new InvalidOperationException("never reached");
                label98:
;
                    goto label102;
                }
                if ((temp1142 == 1)) {
                    this.Manager.Comment("reaching state \'S80\'");
                    bool temp1068;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp1068);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1068);
                    this.Manager.Comment("reaching state \'S98\'");
                    int temp1141 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker8)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker11)));
                    if ((temp1141 == 0)) {
                        this.Manager.Comment("reaching state \'S133\'");
                        bool temp1069;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1069);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1069);
                        this.Manager.Comment("reaching state \'S169\'");
                        int temp1104 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker9)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker10)));
                        if ((temp1104 == 0)) {
                            this.Manager.Comment("reaching state \'S239\'");
                            int temp1070;
                            int temp1071;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1072;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1072 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1070, out temp1071);
                            this.Manager.Comment("reaching state \'S311\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1070, "logonHandleIndex of Logon, state S311");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1071, "inboxFolderIdIndex of Logon, state S311");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1072, "return of Logon, state S311");
                            this.Manager.Comment("reaching state \'S383\'");
                            int temp1073;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1074;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1074 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1073);
                            this.Manager.Comment("reaching state \'S455\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1073, "folderHandleIndex of OpenFolder, state S455");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1074, "return of OpenFolder, state S455");
                            this.Manager.Comment("reaching state \'S527\'");
                            int temp1075;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1076;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1076 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1075);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S599\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1075, "messageHandleIndex of CreateMessage, state S599");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1076, "return of CreateMessage, state S599");
                            this.Manager.Comment("reaching state \'S671\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1077;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1077 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S743\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1077, "return of SetProperties, state S743");
                            this.Manager.Comment("reaching state \'S815\'");
                            int temp1078;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1079;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1079 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1078);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S887\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1078, "messageIdIndex of SaveChangesMessage, state S887");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1079, "return of SaveChangesMessage, state S887");
                            this.Manager.Comment("reaching state \'S959\'");
                            int temp1080;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1081;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1081 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1080);
                            this.Manager.Comment("reaching state \'S1031\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1080, "attachmentHandleIndex of CreateAttachment, state S1031");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1081, "return of CreateAttachment, state S1031");
                            this.Manager.Comment("reaching state \'S1103\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1082;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1082 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1175\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1082, "return of SaveChangesAttachment, state S1175");
                            this.Manager.Comment("reaching state \'S1247\'");
                            int temp1083;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1084;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,SendEntryId,Unicode,[2],o" +
                                    "ut _)\'");
                            temp1084 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.SendEntryId, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp1083);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1319\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1083, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1319");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1084, "return of FastTransferSourceCopyMessages, state S1319");
                            this.Manager.Comment("reaching state \'S1439\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1085;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp1085 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1559\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1085, "return of Release, state S1559");
                            this.Manager.Comment("reaching state \'S1727\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1086;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp1086 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1895\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1086, "return of Release, state S1895");
                            this.Manager.Comment("reaching state \'S2159\'");
                            goto label99;
                        }
                        if ((temp1104 == 1)) {
                            this.Manager.Comment("reaching state \'S240\'");
                            int temp1087;
                            int temp1088;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1089;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1089 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1087, out temp1088);
                            this.Manager.Comment("reaching state \'S312\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1087, "logonHandleIndex of Logon, state S312");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1088, "inboxFolderIdIndex of Logon, state S312");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1089, "return of Logon, state S312");
                            this.Manager.Comment("reaching state \'S384\'");
                            int temp1090;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1091;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1091 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1090);
                            this.Manager.Comment("reaching state \'S456\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1090, "folderHandleIndex of OpenFolder, state S456");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1091, "return of OpenFolder, state S456");
                            this.Manager.Comment("reaching state \'S528\'");
                            int temp1092;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1093;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1093 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1092);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S600\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1092, "messageHandleIndex of CreateMessage, state S600");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1093, "return of CreateMessage, state S600");
                            this.Manager.Comment("reaching state \'S672\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1094;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1094 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S744\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1094, "return of SetProperties, state S744");
                            this.Manager.Comment("reaching state \'S816\'");
                            int temp1095;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1096;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1096 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1095);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S888\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1095, "messageIdIndex of SaveChangesMessage, state S888");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1096, "return of SaveChangesMessage, state S888");
                            this.Manager.Comment("reaching state \'S960\'");
                            int temp1097;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1098;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1098 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1097);
                            this.Manager.Comment("reaching state \'S1032\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1097, "attachmentHandleIndex of CreateAttachment, state S1032");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1098, "return of CreateAttachment, state S1032");
                            this.Manager.Comment("reaching state \'S1104\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1099;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1099 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1176\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1099, "return of SaveChangesAttachment, state S1176");
                            this.Manager.Comment("reaching state \'S1248\'");
                            int temp1100;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1101;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,SendEntryId,Unicode,[2],o" +
                                    "ut _)\'");
                            temp1101 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.SendEntryId, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp1100);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1320\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1100, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1320");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1101, "return of FastTransferSourceCopyMessages, state S1320");
                            this.Manager.Comment("reaching state \'S1440\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1102;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp1102 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1560\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1102, "return of Release, state S1560");
                            this.Manager.Comment("reaching state \'S1728\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1103;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp1103 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1896\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1103, "return of Release, state S1896");
                            this.Manager.Comment("reaching state \'S2160\'");
                            goto label99;
                        }
                        throw new InvalidOperationException("never reached");
                    label99:
;
                        goto label101;
                    }
                    if ((temp1141 == 1)) {
                        this.Manager.Comment("reaching state \'S134\'");
                        bool temp1105;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1105);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1105);
                        this.Manager.Comment("reaching state \'S170\'");
                        int temp1140 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker12)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker13)));
                        if ((temp1140 == 0)) {
                            this.Manager.Comment("reaching state \'S241\'");
                            int temp1106;
                            int temp1107;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1108;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1108 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1106, out temp1107);
                            this.Manager.Comment("reaching state \'S313\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1106, "logonHandleIndex of Logon, state S313");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1107, "inboxFolderIdIndex of Logon, state S313");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1108, "return of Logon, state S313");
                            this.Manager.Comment("reaching state \'S385\'");
                            int temp1109;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1110;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1110 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1109);
                            this.Manager.Comment("reaching state \'S457\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1109, "folderHandleIndex of OpenFolder, state S457");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1110, "return of OpenFolder, state S457");
                            this.Manager.Comment("reaching state \'S529\'");
                            int temp1111;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1112;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1112 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1111);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S601\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1111, "messageHandleIndex of CreateMessage, state S601");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1112, "return of CreateMessage, state S601");
                            this.Manager.Comment("reaching state \'S673\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1113;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1113 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S745\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1113, "return of SetProperties, state S745");
                            this.Manager.Comment("reaching state \'S817\'");
                            int temp1114;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1115;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1115 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1114);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S889\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1114, "messageIdIndex of SaveChangesMessage, state S889");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1115, "return of SaveChangesMessage, state S889");
                            this.Manager.Comment("reaching state \'S961\'");
                            int temp1116;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1117;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1117 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1116);
                            this.Manager.Comment("reaching state \'S1033\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1116, "attachmentHandleIndex of CreateAttachment, state S1033");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1117, "return of CreateAttachment, state S1033");
                            this.Manager.Comment("reaching state \'S1105\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1118;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1118 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1177\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1118, "return of SaveChangesAttachment, state S1177");
                            this.Manager.Comment("reaching state \'S1249\'");
                            int temp1119;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1120;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,SendEntryId,Unicode,[2],o" +
                                    "ut _)\'");
                            temp1120 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.SendEntryId, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp1119);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1321\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1119, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1321");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1120, "return of FastTransferSourceCopyMessages, state S1321");
                            this.Manager.Comment("reaching state \'S1441\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1121;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp1121 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1561\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1121, "return of Release, state S1561");
                            this.Manager.Comment("reaching state \'S1729\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1122;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp1122 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1897\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1122, "return of Release, state S1897");
                            this.Manager.Comment("reaching state \'S2161\'");
                            goto label100;
                        }
                        if ((temp1140 == 1)) {
                            this.Manager.Comment("reaching state \'S242\'");
                            int temp1123;
                            int temp1124;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1125;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1125 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1123, out temp1124);
                            this.Manager.Comment("reaching state \'S314\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1123, "logonHandleIndex of Logon, state S314");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1124, "inboxFolderIdIndex of Logon, state S314");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1125, "return of Logon, state S314");
                            this.Manager.Comment("reaching state \'S386\'");
                            int temp1126;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1127;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1127 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1126);
                            this.Manager.Comment("reaching state \'S458\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1126, "folderHandleIndex of OpenFolder, state S458");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1127, "return of OpenFolder, state S458");
                            this.Manager.Comment("reaching state \'S530\'");
                            int temp1128;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1129;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1129 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1128);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S602\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1128, "messageHandleIndex of CreateMessage, state S602");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1129, "return of CreateMessage, state S602");
                            this.Manager.Comment("reaching state \'S674\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1130;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1130 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S746\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1130, "return of SetProperties, state S746");
                            this.Manager.Comment("reaching state \'S818\'");
                            int temp1131;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1132;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1132 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1131);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S890\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1131, "messageIdIndex of SaveChangesMessage, state S890");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1132, "return of SaveChangesMessage, state S890");
                            this.Manager.Comment("reaching state \'S962\'");
                            int temp1133;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1134;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1134 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1133);
                            this.Manager.Comment("reaching state \'S1034\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1133, "attachmentHandleIndex of CreateAttachment, state S1034");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1134, "return of CreateAttachment, state S1034");
                            this.Manager.Comment("reaching state \'S1106\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1135;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1135 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1178\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1135, "return of SaveChangesAttachment, state S1178");
                            this.Manager.Comment("reaching state \'S1250\'");
                            int temp1136;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1137;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,2,SendEntryId,Unicode,[2],o" +
                                    "ut _)\'");
                            temp1137 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 2, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.SendEntryId, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        2,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp1136);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S1322\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 5]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1136, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S1322");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1137, "return of FastTransferSourceCopyMessages, state S1322");
                            this.Manager.Comment("reaching state \'S1442\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1138;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp1138 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S1562\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1138, "return of Release, state S1562");
                            this.Manager.Comment("reaching state \'S1730\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1139;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp1139 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S1898\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1139, "return of Release, state S1898");
                            this.Manager.Comment("reaching state \'S2162\'");
                            goto label100;
                        }
                        throw new InvalidOperationException("never reached");
                    label100:
;
                        goto label101;
                    }
                    throw new InvalidOperationException("never reached");
                label101:
;
                    goto label102;
                }
                throw new InvalidOperationException("never reached");
            label102:
;
                goto label103;
            }
            if ((temp1143 == 1)) {
                this.Manager.Comment("reaching state \'S35\'");
                goto label103;
            }
            throw new InvalidOperationException("never reached");
        label103:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S62");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S97");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S167");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S167");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S97");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S168");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S168");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S62");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S98");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S169");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S169");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S98");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S170");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S170");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite4CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp1144;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp1144);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp1144);
            this.Manager.Comment("reaching state \'S3\'");
            int temp1631 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp1631 == 0)) {
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S46\'");
                bool temp1145;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2117002,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2117002, out temp1145);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1145);
                this.Manager.Comment("reaching state \'S55\'");
                int temp1630 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker63)));
                if ((temp1630 == 0)) {
                    this.Manager.Comment("reaching state \'S65\'");
                    bool temp1146;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp1146);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1146);
                    this.Manager.Comment("reaching state \'S83\'");
                    int temp1387 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker1)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker32)));
                    if ((temp1387 == 0)) {
                        this.Manager.Comment("reaching state \'S103\'");
                        bool temp1147;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1147);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1147);
                        this.Manager.Comment("reaching state \'S139\'");
                        int temp1266 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker2)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker17)));
                        if ((temp1266 == 0)) {
                            this.Manager.Comment("reaching state \'S179\'");
                            int temp1148;
                            int temp1149;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1150;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1150 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1148, out temp1149);
                            this.Manager.Comment("reaching state \'S251\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1148, "logonHandleIndex of Logon, state S251");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1149, "inboxFolderIdIndex of Logon, state S251");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1150, "return of Logon, state S251");
                            this.Manager.Comment("reaching state \'S323\'");
                            int temp1151;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1152;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1152 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1151);
                            this.Manager.Comment("reaching state \'S395\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1151, "folderHandleIndex of OpenFolder, state S395");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1152, "return of OpenFolder, state S395");
                            this.Manager.Comment("reaching state \'S467\'");
                            int temp1153;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1154;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1154 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1153);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S539\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1153, "messageHandleIndex of CreateMessage, state S539");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1154, "return of CreateMessage, state S539");
                            this.Manager.Comment("reaching state \'S611\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1155;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1155 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S683\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1155, "return of SetProperties, state S683");
                            this.Manager.Comment("reaching state \'S755\'");
                            int temp1156;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1157;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1157 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1156);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S827\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1156, "messageIdIndex of SaveChangesMessage, state S827");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1157, "return of SaveChangesMessage, state S827");
                            this.Manager.Comment("reaching state \'S899\'");
                            int temp1158;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1159;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1159 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1158);
                            this.Manager.Comment("reaching state \'S971\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1158, "attachmentHandleIndex of CreateAttachment, state S971");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1159, "return of CreateAttachment, state S971");
                            this.Manager.Comment("reaching state \'S1043\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1160;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1160 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1115\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1160, "return of SaveChangesAttachment, state S1115");
                            this.Manager.Comment("reaching state \'S1187\'");
                            bool temp1161;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1161);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1161);
                            this.Manager.Comment("reaching state \'S1259\'");
                            int temp1206 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker3)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker10)));
                            if ((temp1206 == 0)) {
                                this.Manager.Comment("reaching state \'S1339\'");
                                bool temp1162;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1162);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1162);
                                this.Manager.Comment("reaching state \'S1459\'");
                                int temp1183 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker4)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker7)));
                                if ((temp1183 == 0)) {
                                    this.Manager.Comment("reaching state \'S1595\'");
                                    bool temp1163;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1163);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1163);
                                    this.Manager.Comment("reaching state \'S1763\'");
                                    int temp1172 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker5)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker6)));
                                    if ((temp1172 == 0)) {
                                        this.Manager.Comment("reaching state \'S1963\'");
                                        int temp1164;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1165;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,None,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1165 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1164);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2227\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1164, "copyToHandleIndex of FastTransferSourceCopyTo, state S2227");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1165, "return of FastTransferSourceCopyTo, state S2227");
                                        this.Manager.Comment("reaching state \'S2467\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1166;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1166 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2707\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1166, "return of Release, state S2707");
                                        this.Manager.Comment("reaching state \'S2899\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1167;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1167 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3091\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1167, "return of Release, state S3091");
                                        this.Manager.Comment("reaching state \'S3283\'");
                                        goto label104;
                                    }
                                    if ((temp1172 == 1)) {
                                        this.Manager.Comment("reaching state \'S1964\'");
                                        int temp1168;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1169;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1169 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1168);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2228\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1168, "copyToHandleIndex of FastTransferSourceCopyTo, state S2228");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1169, "return of FastTransferSourceCopyTo, state S2228");
                                        this.Manager.Comment("reaching state \'S2468\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1170;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1170 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2708\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1170, "return of Release, state S2708");
                                        this.Manager.Comment("reaching state \'S2900\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1171;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1171 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3092\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1171, "return of Release, state S3092");
                                        this.Manager.Comment("reaching state \'S3284\'");
                                        goto label104;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label104:
;
                                    goto label106;
                                }
                                if ((temp1183 == 1)) {
                                    this.Manager.Comment("reaching state \'S1596\'");
                                    bool temp1173;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1173);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1173);
                                    this.Manager.Comment("reaching state \'S1764\'");
                                    int temp1182 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker8)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker9)));
                                    if ((temp1182 == 0)) {
                                        this.Manager.Comment("reaching state \'S1965\'");
                                        int temp1174;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1175;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1175 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1174);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2229\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1174, "copyToHandleIndex of FastTransferSourceCopyTo, state S2229");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1175, "return of FastTransferSourceCopyTo, state S2229");
                                        this.Manager.Comment("reaching state \'S2469\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1176;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1176 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2709\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1176, "return of Release, state S2709");
                                        this.Manager.Comment("reaching state \'S2901\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1177;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1177 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3093\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1177, "return of Release, state S3093");
                                        this.Manager.Comment("reaching state \'S3285\'");
                                        goto label105;
                                    }
                                    if ((temp1182 == 1)) {
                                        this.Manager.Comment("reaching state \'S1966\'");
                                        int temp1178;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1179;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1179 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1178);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2230\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1178, "copyToHandleIndex of FastTransferSourceCopyTo, state S2230");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1179, "return of FastTransferSourceCopyTo, state S2230");
                                        this.Manager.Comment("reaching state \'S2470\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1180;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1180 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2710\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1180, "return of Release, state S2710");
                                        this.Manager.Comment("reaching state \'S2902\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1181;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1181 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3094\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1181, "return of Release, state S3094");
                                        this.Manager.Comment("reaching state \'S3286\'");
                                        goto label105;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label105:
;
                                    goto label106;
                                }
                                throw new InvalidOperationException("never reached");
                            label106:
;
                                goto label110;
                            }
                            if ((temp1206 == 1)) {
                                this.Manager.Comment("reaching state \'S1340\'");
                                bool temp1184;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1184);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1184);
                                this.Manager.Comment("reaching state \'S1460\'");
                                int temp1205 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker11)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker14)));
                                if ((temp1205 == 0)) {
                                    this.Manager.Comment("reaching state \'S1597\'");
                                    bool temp1185;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1185);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1185);
                                    this.Manager.Comment("reaching state \'S1765\'");
                                    int temp1194 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker12)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker13)));
                                    if ((temp1194 == 0)) {
                                        this.Manager.Comment("reaching state \'S1967\'");
                                        int temp1186;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1187;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1187 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1186);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2231\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1186, "copyToHandleIndex of FastTransferSourceCopyTo, state S2231");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1187, "return of FastTransferSourceCopyTo, state S2231");
                                        this.Manager.Comment("reaching state \'S2471\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1188;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1188 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2711\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1188, "return of Release, state S2711");
                                        this.Manager.Comment("reaching state \'S2903\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1189;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1189 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3095\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1189, "return of Release, state S3095");
                                        this.Manager.Comment("reaching state \'S3287\'");
                                        goto label107;
                                    }
                                    if ((temp1194 == 1)) {
                                        this.Manager.Comment("reaching state \'S1968\'");
                                        int temp1190;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1191;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1191 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1190);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2232\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1190, "copyToHandleIndex of FastTransferSourceCopyTo, state S2232");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1191, "return of FastTransferSourceCopyTo, state S2232");
                                        this.Manager.Comment("reaching state \'S2472\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1192;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1192 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2712\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1192, "return of Release, state S2712");
                                        this.Manager.Comment("reaching state \'S2904\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1193;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1193 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3096\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1193, "return of Release, state S3096");
                                        this.Manager.Comment("reaching state \'S3288\'");
                                        goto label107;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label107:
;
                                    goto label109;
                                }
                                if ((temp1205 == 1)) {
                                    this.Manager.Comment("reaching state \'S1598\'");
                                    bool temp1195;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1195);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1195);
                                    this.Manager.Comment("reaching state \'S1766\'");
                                    int temp1204 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker15)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker16)));
                                    if ((temp1204 == 0)) {
                                        this.Manager.Comment("reaching state \'S1969\'");
                                        int temp1196;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1197;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1197 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1196);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2233\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1196, "copyToHandleIndex of FastTransferSourceCopyTo, state S2233");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1197, "return of FastTransferSourceCopyTo, state S2233");
                                        this.Manager.Comment("reaching state \'S2473\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1198;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1198 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2713\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1198, "return of Release, state S2713");
                                        this.Manager.Comment("reaching state \'S2905\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1199;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1199 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3097\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1199, "return of Release, state S3097");
                                        this.Manager.Comment("reaching state \'S3289\'");
                                        goto label108;
                                    }
                                    if ((temp1204 == 1)) {
                                        this.Manager.Comment("reaching state \'S1970\'");
                                        int temp1200;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1201;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1201 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1200);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2234\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1200, "copyToHandleIndex of FastTransferSourceCopyTo, state S2234");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1201, "return of FastTransferSourceCopyTo, state S2234");
                                        this.Manager.Comment("reaching state \'S2474\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1202;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1202 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2714\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1202, "return of Release, state S2714");
                                        this.Manager.Comment("reaching state \'S2906\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1203;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1203 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3098\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1203, "return of Release, state S3098");
                                        this.Manager.Comment("reaching state \'S3290\'");
                                        goto label108;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label108:
;
                                    goto label109;
                                }
                                throw new InvalidOperationException("never reached");
                            label109:
;
                                goto label110;
                            }
                            throw new InvalidOperationException("never reached");
                        label110:
;
                            goto label118;
                        }
                        if ((temp1266 == 1)) {
                            this.Manager.Comment("reaching state \'S180\'");
                            int temp1207;
                            int temp1208;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1209;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1209 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1207, out temp1208);
                            this.Manager.Comment("reaching state \'S252\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1207, "logonHandleIndex of Logon, state S252");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1208, "inboxFolderIdIndex of Logon, state S252");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1209, "return of Logon, state S252");
                            this.Manager.Comment("reaching state \'S324\'");
                            int temp1210;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1211;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1211 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1210);
                            this.Manager.Comment("reaching state \'S396\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1210, "folderHandleIndex of OpenFolder, state S396");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1211, "return of OpenFolder, state S396");
                            this.Manager.Comment("reaching state \'S468\'");
                            int temp1212;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1213;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1213 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1212);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S540\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1212, "messageHandleIndex of CreateMessage, state S540");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1213, "return of CreateMessage, state S540");
                            this.Manager.Comment("reaching state \'S612\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1214;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1214 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S684\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1214, "return of SetProperties, state S684");
                            this.Manager.Comment("reaching state \'S756\'");
                            int temp1215;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1216;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1216 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1215);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S828\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1215, "messageIdIndex of SaveChangesMessage, state S828");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1216, "return of SaveChangesMessage, state S828");
                            this.Manager.Comment("reaching state \'S900\'");
                            int temp1217;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1218;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1218 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1217);
                            this.Manager.Comment("reaching state \'S972\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1217, "attachmentHandleIndex of CreateAttachment, state S972");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1218, "return of CreateAttachment, state S972");
                            this.Manager.Comment("reaching state \'S1044\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1219;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1219 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1116\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1219, "return of SaveChangesAttachment, state S1116");
                            this.Manager.Comment("reaching state \'S1188\'");
                            bool temp1220;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1220);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1220);
                            this.Manager.Comment("reaching state \'S1260\'");
                            int temp1265 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker18)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker25)));
                            if ((temp1265 == 0)) {
                                this.Manager.Comment("reaching state \'S1341\'");
                                bool temp1221;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1221);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1221);
                                this.Manager.Comment("reaching state \'S1461\'");
                                int temp1242 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker19)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker22)));
                                if ((temp1242 == 0)) {
                                    this.Manager.Comment("reaching state \'S1599\'");
                                    bool temp1222;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1222);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1222);
                                    this.Manager.Comment("reaching state \'S1767\'");
                                    int temp1231 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker20)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker21)));
                                    if ((temp1231 == 0)) {
                                        this.Manager.Comment("reaching state \'S1971\'");
                                        int temp1223;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1224;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1224 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1223);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2235\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1223, "copyToHandleIndex of FastTransferSourceCopyTo, state S2235");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1224, "return of FastTransferSourceCopyTo, state S2235");
                                        this.Manager.Comment("reaching state \'S2475\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1225;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1225 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2715\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1225, "return of Release, state S2715");
                                        this.Manager.Comment("reaching state \'S2907\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1226;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1226 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3099\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1226, "return of Release, state S3099");
                                        this.Manager.Comment("reaching state \'S3291\'");
                                        goto label111;
                                    }
                                    if ((temp1231 == 1)) {
                                        this.Manager.Comment("reaching state \'S1972\'");
                                        int temp1227;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1228;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1228 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1227);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2236\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1227, "copyToHandleIndex of FastTransferSourceCopyTo, state S2236");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1228, "return of FastTransferSourceCopyTo, state S2236");
                                        this.Manager.Comment("reaching state \'S2476\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1229;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1229 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2716\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1229, "return of Release, state S2716");
                                        this.Manager.Comment("reaching state \'S2908\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1230;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1230 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3100\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1230, "return of Release, state S3100");
                                        this.Manager.Comment("reaching state \'S3292\'");
                                        goto label111;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label111:
;
                                    goto label113;
                                }
                                if ((temp1242 == 1)) {
                                    this.Manager.Comment("reaching state \'S1600\'");
                                    bool temp1232;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1232);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1232);
                                    this.Manager.Comment("reaching state \'S1768\'");
                                    int temp1241 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker23)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker24)));
                                    if ((temp1241 == 0)) {
                                        this.Manager.Comment("reaching state \'S1973\'");
                                        int temp1233;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1234;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1234 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1233);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2237\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1233, "copyToHandleIndex of FastTransferSourceCopyTo, state S2237");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1234, "return of FastTransferSourceCopyTo, state S2237");
                                        this.Manager.Comment("reaching state \'S2477\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1235;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1235 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2717\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1235, "return of Release, state S2717");
                                        this.Manager.Comment("reaching state \'S2909\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1236;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1236 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3101\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1236, "return of Release, state S3101");
                                        this.Manager.Comment("reaching state \'S3293\'");
                                        goto label112;
                                    }
                                    if ((temp1241 == 1)) {
                                        this.Manager.Comment("reaching state \'S1974\'");
                                        int temp1237;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1238;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1238 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1237);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2238\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1237, "copyToHandleIndex of FastTransferSourceCopyTo, state S2238");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1238, "return of FastTransferSourceCopyTo, state S2238");
                                        this.Manager.Comment("reaching state \'S2478\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1239;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1239 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2718\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1239, "return of Release, state S2718");
                                        this.Manager.Comment("reaching state \'S2910\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1240;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1240 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3102\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1240, "return of Release, state S3102");
                                        this.Manager.Comment("reaching state \'S3294\'");
                                        goto label112;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label112:
;
                                    goto label113;
                                }
                                throw new InvalidOperationException("never reached");
                            label113:
;
                                goto label117;
                            }
                            if ((temp1265 == 1)) {
                                this.Manager.Comment("reaching state \'S1342\'");
                                bool temp1243;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1243);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1243);
                                this.Manager.Comment("reaching state \'S1462\'");
                                int temp1264 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker26)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker29)));
                                if ((temp1264 == 0)) {
                                    this.Manager.Comment("reaching state \'S1601\'");
                                    bool temp1244;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1244);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1244);
                                    this.Manager.Comment("reaching state \'S1769\'");
                                    int temp1253 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker27)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker28)));
                                    if ((temp1253 == 0)) {
                                        this.Manager.Comment("reaching state \'S1975\'");
                                        int temp1245;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1246;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1246 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1245);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2239\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1245, "copyToHandleIndex of FastTransferSourceCopyTo, state S2239");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1246, "return of FastTransferSourceCopyTo, state S2239");
                                        this.Manager.Comment("reaching state \'S2479\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1247;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1247 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2719\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1247, "return of Release, state S2719");
                                        this.Manager.Comment("reaching state \'S2911\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1248;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1248 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3103\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1248, "return of Release, state S3103");
                                        this.Manager.Comment("reaching state \'S3295\'");
                                        goto label114;
                                    }
                                    if ((temp1253 == 1)) {
                                        this.Manager.Comment("reaching state \'S1976\'");
                                        int temp1249;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1250;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1250 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1249);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2240\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1249, "copyToHandleIndex of FastTransferSourceCopyTo, state S2240");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1250, "return of FastTransferSourceCopyTo, state S2240");
                                        this.Manager.Comment("reaching state \'S2480\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1251;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1251 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2720\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1251, "return of Release, state S2720");
                                        this.Manager.Comment("reaching state \'S2912\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1252;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1252 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3104\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1252, "return of Release, state S3104");
                                        this.Manager.Comment("reaching state \'S3296\'");
                                        goto label114;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label114:
;
                                    goto label116;
                                }
                                if ((temp1264 == 1)) {
                                    this.Manager.Comment("reaching state \'S1602\'");
                                    bool temp1254;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1254);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1254);
                                    this.Manager.Comment("reaching state \'S1770\'");
                                    int temp1263 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker30)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker31)));
                                    if ((temp1263 == 0)) {
                                        this.Manager.Comment("reaching state \'S1977\'");
                                        int temp1255;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1256;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1256 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1255);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2241\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1255, "copyToHandleIndex of FastTransferSourceCopyTo, state S2241");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1256, "return of FastTransferSourceCopyTo, state S2241");
                                        this.Manager.Comment("reaching state \'S2481\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1257;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1257 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2721\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1257, "return of Release, state S2721");
                                        this.Manager.Comment("reaching state \'S2913\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1258;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1258 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3105\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1258, "return of Release, state S3105");
                                        this.Manager.Comment("reaching state \'S3297\'");
                                        goto label115;
                                    }
                                    if ((temp1263 == 1)) {
                                        this.Manager.Comment("reaching state \'S1978\'");
                                        int temp1259;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1260;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1260 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1259);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2242\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1259, "copyToHandleIndex of FastTransferSourceCopyTo, state S2242");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1260, "return of FastTransferSourceCopyTo, state S2242");
                                        this.Manager.Comment("reaching state \'S2482\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1261;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1261 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2722\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1261, "return of Release, state S2722");
                                        this.Manager.Comment("reaching state \'S2914\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1262;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1262 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3106\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1262, "return of Release, state S3106");
                                        this.Manager.Comment("reaching state \'S3298\'");
                                        goto label115;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label115:
;
                                    goto label116;
                                }
                                throw new InvalidOperationException("never reached");
                            label116:
;
                                goto label117;
                            }
                            throw new InvalidOperationException("never reached");
                        label117:
;
                            goto label118;
                        }
                        throw new InvalidOperationException("never reached");
                    label118:
;
                        goto label134;
                    }
                    if ((temp1387 == 1)) {
                        this.Manager.Comment("reaching state \'S104\'");
                        bool temp1267;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1267);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1267);
                        this.Manager.Comment("reaching state \'S140\'");
                        int temp1386 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker33)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker48)));
                        if ((temp1386 == 0)) {
                            this.Manager.Comment("reaching state \'S181\'");
                            int temp1268;
                            int temp1269;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1270;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1270 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1268, out temp1269);
                            this.Manager.Comment("reaching state \'S253\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1268, "logonHandleIndex of Logon, state S253");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1269, "inboxFolderIdIndex of Logon, state S253");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1270, "return of Logon, state S253");
                            this.Manager.Comment("reaching state \'S325\'");
                            int temp1271;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1272;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1272 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1271);
                            this.Manager.Comment("reaching state \'S397\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1271, "folderHandleIndex of OpenFolder, state S397");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1272, "return of OpenFolder, state S397");
                            this.Manager.Comment("reaching state \'S469\'");
                            int temp1273;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1274;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1274 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1273);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S541\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1273, "messageHandleIndex of CreateMessage, state S541");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1274, "return of CreateMessage, state S541");
                            this.Manager.Comment("reaching state \'S613\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1275;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1275 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S685\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1275, "return of SetProperties, state S685");
                            this.Manager.Comment("reaching state \'S757\'");
                            int temp1276;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1277;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1277 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1276);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S829\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1276, "messageIdIndex of SaveChangesMessage, state S829");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1277, "return of SaveChangesMessage, state S829");
                            this.Manager.Comment("reaching state \'S901\'");
                            int temp1278;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1279;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1279 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1278);
                            this.Manager.Comment("reaching state \'S973\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1278, "attachmentHandleIndex of CreateAttachment, state S973");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1279, "return of CreateAttachment, state S973");
                            this.Manager.Comment("reaching state \'S1045\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1280;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1280 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1117\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1280, "return of SaveChangesAttachment, state S1117");
                            this.Manager.Comment("reaching state \'S1189\'");
                            bool temp1281;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1281);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1281);
                            this.Manager.Comment("reaching state \'S1261\'");
                            int temp1326 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker34)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker41)));
                            if ((temp1326 == 0)) {
                                this.Manager.Comment("reaching state \'S1343\'");
                                bool temp1282;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1282);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1282);
                                this.Manager.Comment("reaching state \'S1463\'");
                                int temp1303 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker35)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker38)));
                                if ((temp1303 == 0)) {
                                    this.Manager.Comment("reaching state \'S1603\'");
                                    bool temp1283;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1283);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1283);
                                    this.Manager.Comment("reaching state \'S1771\'");
                                    int temp1292 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker36)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker37)));
                                    if ((temp1292 == 0)) {
                                        this.Manager.Comment("reaching state \'S1979\'");
                                        int temp1284;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1285;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1285 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1284);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2243\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1284, "copyToHandleIndex of FastTransferSourceCopyTo, state S2243");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1285, "return of FastTransferSourceCopyTo, state S2243");
                                        this.Manager.Comment("reaching state \'S2483\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1286;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1286 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2723\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1286, "return of Release, state S2723");
                                        this.Manager.Comment("reaching state \'S2915\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1287;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1287 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3107\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1287, "return of Release, state S3107");
                                        this.Manager.Comment("reaching state \'S3299\'");
                                        goto label119;
                                    }
                                    if ((temp1292 == 1)) {
                                        this.Manager.Comment("reaching state \'S1980\'");
                                        int temp1288;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1289;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1289 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1288);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2244\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1288, "copyToHandleIndex of FastTransferSourceCopyTo, state S2244");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1289, "return of FastTransferSourceCopyTo, state S2244");
                                        this.Manager.Comment("reaching state \'S2484\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1290;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1290 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2724\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1290, "return of Release, state S2724");
                                        this.Manager.Comment("reaching state \'S2916\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1291;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1291 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3108\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1291, "return of Release, state S3108");
                                        this.Manager.Comment("reaching state \'S3300\'");
                                        goto label119;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label119:
;
                                    goto label121;
                                }
                                if ((temp1303 == 1)) {
                                    this.Manager.Comment("reaching state \'S1604\'");
                                    bool temp1293;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1293);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1293);
                                    this.Manager.Comment("reaching state \'S1772\'");
                                    int temp1302 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker39)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker40)));
                                    if ((temp1302 == 0)) {
                                        this.Manager.Comment("reaching state \'S1981\'");
                                        int temp1294;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1295;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1295 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1294);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2245\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1294, "copyToHandleIndex of FastTransferSourceCopyTo, state S2245");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1295, "return of FastTransferSourceCopyTo, state S2245");
                                        this.Manager.Comment("reaching state \'S2485\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1296;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1296 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2725\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1296, "return of Release, state S2725");
                                        this.Manager.Comment("reaching state \'S2917\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1297;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1297 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3109\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1297, "return of Release, state S3109");
                                        this.Manager.Comment("reaching state \'S3301\'");
                                        goto label120;
                                    }
                                    if ((temp1302 == 1)) {
                                        this.Manager.Comment("reaching state \'S1982\'");
                                        int temp1298;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1299;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1299 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1298);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2246\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1298, "copyToHandleIndex of FastTransferSourceCopyTo, state S2246");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1299, "return of FastTransferSourceCopyTo, state S2246");
                                        this.Manager.Comment("reaching state \'S2486\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1300;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1300 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2726\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1300, "return of Release, state S2726");
                                        this.Manager.Comment("reaching state \'S2918\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1301;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1301 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3110\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1301, "return of Release, state S3110");
                                        this.Manager.Comment("reaching state \'S3302\'");
                                        goto label120;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label120:
;
                                    goto label121;
                                }
                                throw new InvalidOperationException("never reached");
                            label121:
;
                                goto label125;
                            }
                            if ((temp1326 == 1)) {
                                this.Manager.Comment("reaching state \'S1344\'");
                                bool temp1304;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1304);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1304);
                                this.Manager.Comment("reaching state \'S1464\'");
                                int temp1325 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker42)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker45)));
                                if ((temp1325 == 0)) {
                                    this.Manager.Comment("reaching state \'S1605\'");
                                    bool temp1305;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1305);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1305);
                                    this.Manager.Comment("reaching state \'S1773\'");
                                    int temp1314 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker43)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker44)));
                                    if ((temp1314 == 0)) {
                                        this.Manager.Comment("reaching state \'S1983\'");
                                        int temp1306;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1307;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1307 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1306);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2247\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1306, "copyToHandleIndex of FastTransferSourceCopyTo, state S2247");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1307, "return of FastTransferSourceCopyTo, state S2247");
                                        this.Manager.Comment("reaching state \'S2487\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1308;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1308 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2727\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1308, "return of Release, state S2727");
                                        this.Manager.Comment("reaching state \'S2919\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1309;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1309 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3111\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1309, "return of Release, state S3111");
                                        this.Manager.Comment("reaching state \'S3303\'");
                                        goto label122;
                                    }
                                    if ((temp1314 == 1)) {
                                        this.Manager.Comment("reaching state \'S1984\'");
                                        int temp1310;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1311;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1311 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1310);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2248\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1310, "copyToHandleIndex of FastTransferSourceCopyTo, state S2248");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1311, "return of FastTransferSourceCopyTo, state S2248");
                                        this.Manager.Comment("reaching state \'S2488\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1312;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1312 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2728\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1312, "return of Release, state S2728");
                                        this.Manager.Comment("reaching state \'S2920\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1313;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1313 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3112\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1313, "return of Release, state S3112");
                                        this.Manager.Comment("reaching state \'S3304\'");
                                        goto label122;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label122:
;
                                    goto label124;
                                }
                                if ((temp1325 == 1)) {
                                    this.Manager.Comment("reaching state \'S1606\'");
                                    bool temp1315;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1315);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1315);
                                    this.Manager.Comment("reaching state \'S1774\'");
                                    int temp1324 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker46)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker47)));
                                    if ((temp1324 == 0)) {
                                        this.Manager.Comment("reaching state \'S1985\'");
                                        int temp1316;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1317;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1317 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1316);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2249\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1316, "copyToHandleIndex of FastTransferSourceCopyTo, state S2249");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1317, "return of FastTransferSourceCopyTo, state S2249");
                                        this.Manager.Comment("reaching state \'S2489\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1318;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1318 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2729\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1318, "return of Release, state S2729");
                                        this.Manager.Comment("reaching state \'S2921\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1319;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1319 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3113\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1319, "return of Release, state S3113");
                                        this.Manager.Comment("reaching state \'S3305\'");
                                        goto label123;
                                    }
                                    if ((temp1324 == 1)) {
                                        this.Manager.Comment("reaching state \'S1986\'");
                                        int temp1320;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1321;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1321 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1320);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2250\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1320, "copyToHandleIndex of FastTransferSourceCopyTo, state S2250");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1321, "return of FastTransferSourceCopyTo, state S2250");
                                        this.Manager.Comment("reaching state \'S2490\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1322;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1322 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2730\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1322, "return of Release, state S2730");
                                        this.Manager.Comment("reaching state \'S2922\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1323;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1323 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3114\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1323, "return of Release, state S3114");
                                        this.Manager.Comment("reaching state \'S3306\'");
                                        goto label123;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label123:
;
                                    goto label124;
                                }
                                throw new InvalidOperationException("never reached");
                            label124:
;
                                goto label125;
                            }
                            throw new InvalidOperationException("never reached");
                        label125:
;
                            goto label133;
                        }
                        if ((temp1386 == 1)) {
                            this.Manager.Comment("reaching state \'S182\'");
                            int temp1327;
                            int temp1328;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1329;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1329 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1327, out temp1328);
                            this.Manager.Comment("reaching state \'S254\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1327, "logonHandleIndex of Logon, state S254");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1328, "inboxFolderIdIndex of Logon, state S254");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1329, "return of Logon, state S254");
                            this.Manager.Comment("reaching state \'S326\'");
                            int temp1330;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1331;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1331 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1330);
                            this.Manager.Comment("reaching state \'S398\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1330, "folderHandleIndex of OpenFolder, state S398");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1331, "return of OpenFolder, state S398");
                            this.Manager.Comment("reaching state \'S470\'");
                            int temp1332;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1333;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1333 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1332);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S542\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1332, "messageHandleIndex of CreateMessage, state S542");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1333, "return of CreateMessage, state S542");
                            this.Manager.Comment("reaching state \'S614\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1334;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1334 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S686\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1334, "return of SetProperties, state S686");
                            this.Manager.Comment("reaching state \'S758\'");
                            int temp1335;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1336;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1336 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1335);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S830\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1335, "messageIdIndex of SaveChangesMessage, state S830");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1336, "return of SaveChangesMessage, state S830");
                            this.Manager.Comment("reaching state \'S902\'");
                            int temp1337;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1338;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1338 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1337);
                            this.Manager.Comment("reaching state \'S974\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1337, "attachmentHandleIndex of CreateAttachment, state S974");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1338, "return of CreateAttachment, state S974");
                            this.Manager.Comment("reaching state \'S1046\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1339;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1339 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1118\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1339, "return of SaveChangesAttachment, state S1118");
                            this.Manager.Comment("reaching state \'S1190\'");
                            bool temp1340;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1340);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1340);
                            this.Manager.Comment("reaching state \'S1262\'");
                            int temp1385 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker49)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker56)));
                            if ((temp1385 == 0)) {
                                this.Manager.Comment("reaching state \'S1345\'");
                                bool temp1341;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1341);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1341);
                                this.Manager.Comment("reaching state \'S1465\'");
                                int temp1362 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker50)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker53)));
                                if ((temp1362 == 0)) {
                                    this.Manager.Comment("reaching state \'S1607\'");
                                    bool temp1342;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1342);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1342);
                                    this.Manager.Comment("reaching state \'S1775\'");
                                    int temp1351 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker51)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker52)));
                                    if ((temp1351 == 0)) {
                                        this.Manager.Comment("reaching state \'S1987\'");
                                        int temp1343;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1344;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1344 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1343);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2251\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1343, "copyToHandleIndex of FastTransferSourceCopyTo, state S2251");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1344, "return of FastTransferSourceCopyTo, state S2251");
                                        this.Manager.Comment("reaching state \'S2491\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1345;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1345 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2731\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1345, "return of Release, state S2731");
                                        this.Manager.Comment("reaching state \'S2923\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1346;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1346 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3115\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1346, "return of Release, state S3115");
                                        this.Manager.Comment("reaching state \'S3307\'");
                                        goto label126;
                                    }
                                    if ((temp1351 == 1)) {
                                        this.Manager.Comment("reaching state \'S1988\'");
                                        int temp1347;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1348;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1348 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1347);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2252\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1347, "copyToHandleIndex of FastTransferSourceCopyTo, state S2252");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1348, "return of FastTransferSourceCopyTo, state S2252");
                                        this.Manager.Comment("reaching state \'S2492\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1349;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1349 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2732\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1349, "return of Release, state S2732");
                                        this.Manager.Comment("reaching state \'S2924\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1350;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1350 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3116\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1350, "return of Release, state S3116");
                                        this.Manager.Comment("reaching state \'S3308\'");
                                        goto label126;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label126:
;
                                    goto label128;
                                }
                                if ((temp1362 == 1)) {
                                    this.Manager.Comment("reaching state \'S1608\'");
                                    bool temp1352;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1352);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1352);
                                    this.Manager.Comment("reaching state \'S1776\'");
                                    int temp1361 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker54)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker55)));
                                    if ((temp1361 == 0)) {
                                        this.Manager.Comment("reaching state \'S1989\'");
                                        int temp1353;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1354;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1354 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1353);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2253\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1353, "copyToHandleIndex of FastTransferSourceCopyTo, state S2253");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1354, "return of FastTransferSourceCopyTo, state S2253");
                                        this.Manager.Comment("reaching state \'S2493\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1355;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1355 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2733\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1355, "return of Release, state S2733");
                                        this.Manager.Comment("reaching state \'S2925\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1356;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1356 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3117\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1356, "return of Release, state S3117");
                                        this.Manager.Comment("reaching state \'S3309\'");
                                        goto label127;
                                    }
                                    if ((temp1361 == 1)) {
                                        this.Manager.Comment("reaching state \'S1990\'");
                                        int temp1357;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1358;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1358 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1357);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2254\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1357, "copyToHandleIndex of FastTransferSourceCopyTo, state S2254");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1358, "return of FastTransferSourceCopyTo, state S2254");
                                        this.Manager.Comment("reaching state \'S2494\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1359;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1359 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2734\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1359, "return of Release, state S2734");
                                        this.Manager.Comment("reaching state \'S2926\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1360;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1360 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3118\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1360, "return of Release, state S3118");
                                        this.Manager.Comment("reaching state \'S3310\'");
                                        goto label127;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label127:
;
                                    goto label128;
                                }
                                throw new InvalidOperationException("never reached");
                            label128:
;
                                goto label132;
                            }
                            if ((temp1385 == 1)) {
                                this.Manager.Comment("reaching state \'S1346\'");
                                bool temp1363;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1363);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1363);
                                this.Manager.Comment("reaching state \'S1466\'");
                                int temp1384 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker57)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker60)));
                                if ((temp1384 == 0)) {
                                    this.Manager.Comment("reaching state \'S1609\'");
                                    bool temp1364;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1364);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1364);
                                    this.Manager.Comment("reaching state \'S1777\'");
                                    int temp1373 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker58)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker59)));
                                    if ((temp1373 == 0)) {
                                        this.Manager.Comment("reaching state \'S1991\'");
                                        int temp1365;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1366;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1366 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1365);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2255\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1365, "copyToHandleIndex of FastTransferSourceCopyTo, state S2255");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1366, "return of FastTransferSourceCopyTo, state S2255");
                                        this.Manager.Comment("reaching state \'S2495\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1367;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1367 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2735\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1367, "return of Release, state S2735");
                                        this.Manager.Comment("reaching state \'S2927\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1368;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1368 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3119\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1368, "return of Release, state S3119");
                                        this.Manager.Comment("reaching state \'S3311\'");
                                        goto label129;
                                    }
                                    if ((temp1373 == 1)) {
                                        this.Manager.Comment("reaching state \'S1992\'");
                                        int temp1369;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1370;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1370 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1369);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2256\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1369, "copyToHandleIndex of FastTransferSourceCopyTo, state S2256");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1370, "return of FastTransferSourceCopyTo, state S2256");
                                        this.Manager.Comment("reaching state \'S2496\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1371;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1371 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2736\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1371, "return of Release, state S2736");
                                        this.Manager.Comment("reaching state \'S2928\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1372;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1372 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3120\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1372, "return of Release, state S3120");
                                        this.Manager.Comment("reaching state \'S3312\'");
                                        goto label129;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label129:
;
                                    goto label131;
                                }
                                if ((temp1384 == 1)) {
                                    this.Manager.Comment("reaching state \'S1610\'");
                                    bool temp1374;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1374);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1374);
                                    this.Manager.Comment("reaching state \'S1778\'");
                                    int temp1383 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker61)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker62)));
                                    if ((temp1383 == 0)) {
                                        this.Manager.Comment("reaching state \'S1993\'");
                                        int temp1375;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1376;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1376 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1375);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2257\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1375, "copyToHandleIndex of FastTransferSourceCopyTo, state S2257");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1376, "return of FastTransferSourceCopyTo, state S2257");
                                        this.Manager.Comment("reaching state \'S2497\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1377;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1377 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2737\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1377, "return of Release, state S2737");
                                        this.Manager.Comment("reaching state \'S2929\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1378;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1378 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3121\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1378, "return of Release, state S3121");
                                        this.Manager.Comment("reaching state \'S3313\'");
                                        goto label130;
                                    }
                                    if ((temp1383 == 1)) {
                                        this.Manager.Comment("reaching state \'S1994\'");
                                        int temp1379;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1380;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1380 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1379);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2258\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1379, "copyToHandleIndex of FastTransferSourceCopyTo, state S2258");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1380, "return of FastTransferSourceCopyTo, state S2258");
                                        this.Manager.Comment("reaching state \'S2498\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1381;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1381 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2738\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1381, "return of Release, state S2738");
                                        this.Manager.Comment("reaching state \'S2930\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1382;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1382 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3122\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1382, "return of Release, state S3122");
                                        this.Manager.Comment("reaching state \'S3314\'");
                                        goto label130;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label130:
;
                                    goto label131;
                                }
                                throw new InvalidOperationException("never reached");
                            label131:
;
                                goto label132;
                            }
                            throw new InvalidOperationException("never reached");
                        label132:
;
                            goto label133;
                        }
                        throw new InvalidOperationException("never reached");
                    label133:
;
                        goto label134;
                    }
                    throw new InvalidOperationException("never reached");
                label134:
;
                    goto label166;
                }
                if ((temp1630 == 1)) {
                    this.Manager.Comment("reaching state \'S66\'");
                    bool temp1388;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp1388);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1388);
                    this.Manager.Comment("reaching state \'S84\'");
                    int temp1629 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker64)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker95)));
                    if ((temp1629 == 0)) {
                        this.Manager.Comment("reaching state \'S105\'");
                        bool temp1389;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1389);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1389);
                        this.Manager.Comment("reaching state \'S141\'");
                        int temp1508 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker65)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker80)));
                        if ((temp1508 == 0)) {
                            this.Manager.Comment("reaching state \'S183\'");
                            int temp1390;
                            int temp1391;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1392;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1392 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1390, out temp1391);
                            this.Manager.Comment("reaching state \'S255\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1390, "logonHandleIndex of Logon, state S255");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1391, "inboxFolderIdIndex of Logon, state S255");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1392, "return of Logon, state S255");
                            this.Manager.Comment("reaching state \'S327\'");
                            int temp1393;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1394;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1394 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1393);
                            this.Manager.Comment("reaching state \'S399\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1393, "folderHandleIndex of OpenFolder, state S399");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1394, "return of OpenFolder, state S399");
                            this.Manager.Comment("reaching state \'S471\'");
                            int temp1395;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1396;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1396 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1395);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S543\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1395, "messageHandleIndex of CreateMessage, state S543");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1396, "return of CreateMessage, state S543");
                            this.Manager.Comment("reaching state \'S615\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1397;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1397 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S687\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1397, "return of SetProperties, state S687");
                            this.Manager.Comment("reaching state \'S759\'");
                            int temp1398;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1399;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1399 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1398);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S831\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1398, "messageIdIndex of SaveChangesMessage, state S831");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1399, "return of SaveChangesMessage, state S831");
                            this.Manager.Comment("reaching state \'S903\'");
                            int temp1400;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1401;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1401 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1400);
                            this.Manager.Comment("reaching state \'S975\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1400, "attachmentHandleIndex of CreateAttachment, state S975");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1401, "return of CreateAttachment, state S975");
                            this.Manager.Comment("reaching state \'S1047\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1402;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1402 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1119\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1402, "return of SaveChangesAttachment, state S1119");
                            this.Manager.Comment("reaching state \'S1191\'");
                            bool temp1403;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1403);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1403);
                            this.Manager.Comment("reaching state \'S1263\'");
                            int temp1448 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker66)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker73)));
                            if ((temp1448 == 0)) {
                                this.Manager.Comment("reaching state \'S1347\'");
                                bool temp1404;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1404);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1404);
                                this.Manager.Comment("reaching state \'S1467\'");
                                int temp1425 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker67)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker70)));
                                if ((temp1425 == 0)) {
                                    this.Manager.Comment("reaching state \'S1611\'");
                                    bool temp1405;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1405);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1405);
                                    this.Manager.Comment("reaching state \'S1779\'");
                                    int temp1414 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker68)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker69)));
                                    if ((temp1414 == 0)) {
                                        this.Manager.Comment("reaching state \'S1995\'");
                                        int temp1406;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1407;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1407 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1406);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2259\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1406, "copyToHandleIndex of FastTransferSourceCopyTo, state S2259");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1407, "return of FastTransferSourceCopyTo, state S2259");
                                        this.Manager.Comment("reaching state \'S2499\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1408;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1408 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2739\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1408, "return of Release, state S2739");
                                        this.Manager.Comment("reaching state \'S2931\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1409;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1409 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3123\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1409, "return of Release, state S3123");
                                        this.Manager.Comment("reaching state \'S3315\'");
                                        goto label135;
                                    }
                                    if ((temp1414 == 1)) {
                                        this.Manager.Comment("reaching state \'S1996\'");
                                        int temp1410;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1411;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1411 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1410);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2260\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1410, "copyToHandleIndex of FastTransferSourceCopyTo, state S2260");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1411, "return of FastTransferSourceCopyTo, state S2260");
                                        this.Manager.Comment("reaching state \'S2500\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1412;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1412 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2740\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1412, "return of Release, state S2740");
                                        this.Manager.Comment("reaching state \'S2932\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1413;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1413 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3124\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1413, "return of Release, state S3124");
                                        this.Manager.Comment("reaching state \'S3316\'");
                                        goto label135;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label135:
;
                                    goto label137;
                                }
                                if ((temp1425 == 1)) {
                                    this.Manager.Comment("reaching state \'S1612\'");
                                    bool temp1415;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1415);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1415);
                                    this.Manager.Comment("reaching state \'S1780\'");
                                    int temp1424 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker71)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker72)));
                                    if ((temp1424 == 0)) {
                                        this.Manager.Comment("reaching state \'S1997\'");
                                        int temp1416;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1417;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1417 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1416);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2261\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1416, "copyToHandleIndex of FastTransferSourceCopyTo, state S2261");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1417, "return of FastTransferSourceCopyTo, state S2261");
                                        this.Manager.Comment("reaching state \'S2501\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1418;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1418 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2741\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1418, "return of Release, state S2741");
                                        this.Manager.Comment("reaching state \'S2933\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1419;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1419 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3125\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1419, "return of Release, state S3125");
                                        this.Manager.Comment("reaching state \'S3317\'");
                                        goto label136;
                                    }
                                    if ((temp1424 == 1)) {
                                        this.Manager.Comment("reaching state \'S1998\'");
                                        int temp1420;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1421;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1421 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1420);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2262\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1420, "copyToHandleIndex of FastTransferSourceCopyTo, state S2262");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1421, "return of FastTransferSourceCopyTo, state S2262");
                                        this.Manager.Comment("reaching state \'S2502\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1422;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1422 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2742\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1422, "return of Release, state S2742");
                                        this.Manager.Comment("reaching state \'S2934\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1423;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1423 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3126\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1423, "return of Release, state S3126");
                                        this.Manager.Comment("reaching state \'S3318\'");
                                        goto label136;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label136:
;
                                    goto label137;
                                }
                                throw new InvalidOperationException("never reached");
                            label137:
;
                                goto label141;
                            }
                            if ((temp1448 == 1)) {
                                this.Manager.Comment("reaching state \'S1348\'");
                                bool temp1426;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1426);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1426);
                                this.Manager.Comment("reaching state \'S1468\'");
                                int temp1447 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker74)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker77)));
                                if ((temp1447 == 0)) {
                                    this.Manager.Comment("reaching state \'S1613\'");
                                    bool temp1427;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1427);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1427);
                                    this.Manager.Comment("reaching state \'S1781\'");
                                    int temp1436 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker75)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker76)));
                                    if ((temp1436 == 0)) {
                                        this.Manager.Comment("reaching state \'S1999\'");
                                        int temp1428;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1429;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1429 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1428);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2263\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1428, "copyToHandleIndex of FastTransferSourceCopyTo, state S2263");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1429, "return of FastTransferSourceCopyTo, state S2263");
                                        this.Manager.Comment("reaching state \'S2503\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1430;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1430 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2743\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1430, "return of Release, state S2743");
                                        this.Manager.Comment("reaching state \'S2935\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1431;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1431 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3127\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1431, "return of Release, state S3127");
                                        this.Manager.Comment("reaching state \'S3319\'");
                                        goto label138;
                                    }
                                    if ((temp1436 == 1)) {
                                        this.Manager.Comment("reaching state \'S2000\'");
                                        int temp1432;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1433;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1433 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1432);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2264\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1432, "copyToHandleIndex of FastTransferSourceCopyTo, state S2264");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1433, "return of FastTransferSourceCopyTo, state S2264");
                                        this.Manager.Comment("reaching state \'S2504\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1434;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1434 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2744\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1434, "return of Release, state S2744");
                                        this.Manager.Comment("reaching state \'S2936\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1435;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1435 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3128\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1435, "return of Release, state S3128");
                                        this.Manager.Comment("reaching state \'S3320\'");
                                        goto label138;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label138:
;
                                    goto label140;
                                }
                                if ((temp1447 == 1)) {
                                    this.Manager.Comment("reaching state \'S1614\'");
                                    bool temp1437;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1437);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1437);
                                    this.Manager.Comment("reaching state \'S1782\'");
                                    int temp1446 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker78)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker79)));
                                    if ((temp1446 == 0)) {
                                        this.Manager.Comment("reaching state \'S2001\'");
                                        int temp1438;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1439;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1439 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1438);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2265\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1438, "copyToHandleIndex of FastTransferSourceCopyTo, state S2265");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1439, "return of FastTransferSourceCopyTo, state S2265");
                                        this.Manager.Comment("reaching state \'S2505\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1440;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1440 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2745\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1440, "return of Release, state S2745");
                                        this.Manager.Comment("reaching state \'S2937\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1441;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1441 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3129\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1441, "return of Release, state S3129");
                                        this.Manager.Comment("reaching state \'S3321\'");
                                        goto label139;
                                    }
                                    if ((temp1446 == 1)) {
                                        this.Manager.Comment("reaching state \'S2002\'");
                                        int temp1442;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1443;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1443 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1442);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2266\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1442, "copyToHandleIndex of FastTransferSourceCopyTo, state S2266");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1443, "return of FastTransferSourceCopyTo, state S2266");
                                        this.Manager.Comment("reaching state \'S2506\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1444;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1444 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2746\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1444, "return of Release, state S2746");
                                        this.Manager.Comment("reaching state \'S2938\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1445;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1445 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3130\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1445, "return of Release, state S3130");
                                        this.Manager.Comment("reaching state \'S3322\'");
                                        goto label139;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label139:
;
                                    goto label140;
                                }
                                throw new InvalidOperationException("never reached");
                            label140:
;
                                goto label141;
                            }
                            throw new InvalidOperationException("never reached");
                        label141:
;
                            goto label149;
                        }
                        if ((temp1508 == 1)) {
                            this.Manager.Comment("reaching state \'S184\'");
                            int temp1449;
                            int temp1450;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1451;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1451 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1449, out temp1450);
                            this.Manager.Comment("reaching state \'S256\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1449, "logonHandleIndex of Logon, state S256");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1450, "inboxFolderIdIndex of Logon, state S256");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1451, "return of Logon, state S256");
                            this.Manager.Comment("reaching state \'S328\'");
                            int temp1452;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1453;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1453 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1452);
                            this.Manager.Comment("reaching state \'S400\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1452, "folderHandleIndex of OpenFolder, state S400");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1453, "return of OpenFolder, state S400");
                            this.Manager.Comment("reaching state \'S472\'");
                            int temp1454;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1455;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1455 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1454);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S544\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1454, "messageHandleIndex of CreateMessage, state S544");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1455, "return of CreateMessage, state S544");
                            this.Manager.Comment("reaching state \'S616\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1456;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1456 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S688\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1456, "return of SetProperties, state S688");
                            this.Manager.Comment("reaching state \'S760\'");
                            int temp1457;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1458;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1458 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1457);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S832\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1457, "messageIdIndex of SaveChangesMessage, state S832");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1458, "return of SaveChangesMessage, state S832");
                            this.Manager.Comment("reaching state \'S904\'");
                            int temp1459;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1460;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1460 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1459);
                            this.Manager.Comment("reaching state \'S976\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1459, "attachmentHandleIndex of CreateAttachment, state S976");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1460, "return of CreateAttachment, state S976");
                            this.Manager.Comment("reaching state \'S1048\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1461;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1461 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1120\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1461, "return of SaveChangesAttachment, state S1120");
                            this.Manager.Comment("reaching state \'S1192\'");
                            bool temp1462;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1462);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1462);
                            this.Manager.Comment("reaching state \'S1264\'");
                            int temp1507 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker81)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker88)));
                            if ((temp1507 == 0)) {
                                this.Manager.Comment("reaching state \'S1349\'");
                                bool temp1463;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1463);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1463);
                                this.Manager.Comment("reaching state \'S1469\'");
                                int temp1484 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker82)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker85)));
                                if ((temp1484 == 0)) {
                                    this.Manager.Comment("reaching state \'S1615\'");
                                    bool temp1464;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1464);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1464);
                                    this.Manager.Comment("reaching state \'S1783\'");
                                    int temp1473 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker83)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker84)));
                                    if ((temp1473 == 0)) {
                                        this.Manager.Comment("reaching state \'S2003\'");
                                        int temp1465;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1466;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1466 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1465);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2267\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1465, "copyToHandleIndex of FastTransferSourceCopyTo, state S2267");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1466, "return of FastTransferSourceCopyTo, state S2267");
                                        this.Manager.Comment("reaching state \'S2507\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1467;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1467 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2747\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1467, "return of Release, state S2747");
                                        this.Manager.Comment("reaching state \'S2939\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1468;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1468 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3131\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1468, "return of Release, state S3131");
                                        this.Manager.Comment("reaching state \'S3323\'");
                                        goto label142;
                                    }
                                    if ((temp1473 == 1)) {
                                        this.Manager.Comment("reaching state \'S2004\'");
                                        int temp1469;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1470;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1470 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1469);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2268\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1469, "copyToHandleIndex of FastTransferSourceCopyTo, state S2268");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1470, "return of FastTransferSourceCopyTo, state S2268");
                                        this.Manager.Comment("reaching state \'S2508\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1471;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1471 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2748\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1471, "return of Release, state S2748");
                                        this.Manager.Comment("reaching state \'S2940\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1472;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1472 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3132\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1472, "return of Release, state S3132");
                                        this.Manager.Comment("reaching state \'S3324\'");
                                        goto label142;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label142:
;
                                    goto label144;
                                }
                                if ((temp1484 == 1)) {
                                    this.Manager.Comment("reaching state \'S1616\'");
                                    bool temp1474;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1474);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1474);
                                    this.Manager.Comment("reaching state \'S1784\'");
                                    int temp1483 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker86)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker87)));
                                    if ((temp1483 == 0)) {
                                        this.Manager.Comment("reaching state \'S2005\'");
                                        int temp1475;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1476;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1476 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1475);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2269\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1475, "copyToHandleIndex of FastTransferSourceCopyTo, state S2269");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1476, "return of FastTransferSourceCopyTo, state S2269");
                                        this.Manager.Comment("reaching state \'S2509\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1477;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1477 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2749\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1477, "return of Release, state S2749");
                                        this.Manager.Comment("reaching state \'S2941\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1478;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1478 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3133\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1478, "return of Release, state S3133");
                                        this.Manager.Comment("reaching state \'S3325\'");
                                        goto label143;
                                    }
                                    if ((temp1483 == 1)) {
                                        this.Manager.Comment("reaching state \'S2006\'");
                                        int temp1479;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1480;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1480 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1479);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2270\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1479, "copyToHandleIndex of FastTransferSourceCopyTo, state S2270");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1480, "return of FastTransferSourceCopyTo, state S2270");
                                        this.Manager.Comment("reaching state \'S2510\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1481;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1481 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2750\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1481, "return of Release, state S2750");
                                        this.Manager.Comment("reaching state \'S2942\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1482;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1482 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3134\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1482, "return of Release, state S3134");
                                        this.Manager.Comment("reaching state \'S3326\'");
                                        goto label143;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label143:
;
                                    goto label144;
                                }
                                throw new InvalidOperationException("never reached");
                            label144:
;
                                goto label148;
                            }
                            if ((temp1507 == 1)) {
                                this.Manager.Comment("reaching state \'S1350\'");
                                bool temp1485;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1485);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1485);
                                this.Manager.Comment("reaching state \'S1470\'");
                                int temp1506 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker89)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker92)));
                                if ((temp1506 == 0)) {
                                    this.Manager.Comment("reaching state \'S1617\'");
                                    bool temp1486;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1486);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1486);
                                    this.Manager.Comment("reaching state \'S1785\'");
                                    int temp1495 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker90)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker91)));
                                    if ((temp1495 == 0)) {
                                        this.Manager.Comment("reaching state \'S2007\'");
                                        int temp1487;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1488;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1488 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1487);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2271\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1487, "copyToHandleIndex of FastTransferSourceCopyTo, state S2271");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1488, "return of FastTransferSourceCopyTo, state S2271");
                                        this.Manager.Comment("reaching state \'S2511\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1489;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1489 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2751\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1489, "return of Release, state S2751");
                                        this.Manager.Comment("reaching state \'S2943\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1490;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1490 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3135\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1490, "return of Release, state S3135");
                                        this.Manager.Comment("reaching state \'S3327\'");
                                        goto label145;
                                    }
                                    if ((temp1495 == 1)) {
                                        this.Manager.Comment("reaching state \'S2008\'");
                                        int temp1491;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1492;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1492 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1491);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2272\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1491, "copyToHandleIndex of FastTransferSourceCopyTo, state S2272");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1492, "return of FastTransferSourceCopyTo, state S2272");
                                        this.Manager.Comment("reaching state \'S2512\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1493;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1493 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2752\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1493, "return of Release, state S2752");
                                        this.Manager.Comment("reaching state \'S2944\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1494;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1494 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3136\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1494, "return of Release, state S3136");
                                        this.Manager.Comment("reaching state \'S3328\'");
                                        goto label145;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label145:
;
                                    goto label147;
                                }
                                if ((temp1506 == 1)) {
                                    this.Manager.Comment("reaching state \'S1618\'");
                                    bool temp1496;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1496);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1496);
                                    this.Manager.Comment("reaching state \'S1786\'");
                                    int temp1505 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker93)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker94)));
                                    if ((temp1505 == 0)) {
                                        this.Manager.Comment("reaching state \'S2009\'");
                                        int temp1497;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1498;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1498 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1497);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2273\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1497, "copyToHandleIndex of FastTransferSourceCopyTo, state S2273");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1498, "return of FastTransferSourceCopyTo, state S2273");
                                        this.Manager.Comment("reaching state \'S2513\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1499;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1499 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2753\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1499, "return of Release, state S2753");
                                        this.Manager.Comment("reaching state \'S2945\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1500;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1500 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3137\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1500, "return of Release, state S3137");
                                        this.Manager.Comment("reaching state \'S3329\'");
                                        goto label146;
                                    }
                                    if ((temp1505 == 1)) {
                                        this.Manager.Comment("reaching state \'S2010\'");
                                        int temp1501;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1502;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1502 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1501);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2274\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1501, "copyToHandleIndex of FastTransferSourceCopyTo, state S2274");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1502, "return of FastTransferSourceCopyTo, state S2274");
                                        this.Manager.Comment("reaching state \'S2514\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1503;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1503 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2754\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1503, "return of Release, state S2754");
                                        this.Manager.Comment("reaching state \'S2946\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1504;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1504 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3138\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1504, "return of Release, state S3138");
                                        this.Manager.Comment("reaching state \'S3330\'");
                                        goto label146;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label146:
;
                                    goto label147;
                                }
                                throw new InvalidOperationException("never reached");
                            label147:
;
                                goto label148;
                            }
                            throw new InvalidOperationException("never reached");
                        label148:
;
                            goto label149;
                        }
                        throw new InvalidOperationException("never reached");
                    label149:
;
                        goto label165;
                    }
                    if ((temp1629 == 1)) {
                        this.Manager.Comment("reaching state \'S106\'");
                        bool temp1509;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1509);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1509);
                        this.Manager.Comment("reaching state \'S142\'");
                        int temp1628 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker96)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker111)));
                        if ((temp1628 == 0)) {
                            this.Manager.Comment("reaching state \'S185\'");
                            int temp1510;
                            int temp1511;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1512;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1512 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1510, out temp1511);
                            this.Manager.Comment("reaching state \'S257\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1510, "logonHandleIndex of Logon, state S257");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1511, "inboxFolderIdIndex of Logon, state S257");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1512, "return of Logon, state S257");
                            this.Manager.Comment("reaching state \'S329\'");
                            int temp1513;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1514;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1514 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1513);
                            this.Manager.Comment("reaching state \'S401\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1513, "folderHandleIndex of OpenFolder, state S401");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1514, "return of OpenFolder, state S401");
                            this.Manager.Comment("reaching state \'S473\'");
                            int temp1515;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1516;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1516 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1515);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S545\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1515, "messageHandleIndex of CreateMessage, state S545");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1516, "return of CreateMessage, state S545");
                            this.Manager.Comment("reaching state \'S617\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1517;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1517 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S689\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1517, "return of SetProperties, state S689");
                            this.Manager.Comment("reaching state \'S761\'");
                            int temp1518;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1519;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1519 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1518);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S833\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1518, "messageIdIndex of SaveChangesMessage, state S833");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1519, "return of SaveChangesMessage, state S833");
                            this.Manager.Comment("reaching state \'S905\'");
                            int temp1520;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1521;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1521 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1520);
                            this.Manager.Comment("reaching state \'S977\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1520, "attachmentHandleIndex of CreateAttachment, state S977");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1521, "return of CreateAttachment, state S977");
                            this.Manager.Comment("reaching state \'S1049\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1522;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1522 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1121\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1522, "return of SaveChangesAttachment, state S1121");
                            this.Manager.Comment("reaching state \'S1193\'");
                            bool temp1523;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1523);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1523);
                            this.Manager.Comment("reaching state \'S1265\'");
                            int temp1568 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker97)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker104)));
                            if ((temp1568 == 0)) {
                                this.Manager.Comment("reaching state \'S1351\'");
                                bool temp1524;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1524);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1524);
                                this.Manager.Comment("reaching state \'S1471\'");
                                int temp1545 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker98)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker101)));
                                if ((temp1545 == 0)) {
                                    this.Manager.Comment("reaching state \'S1619\'");
                                    bool temp1525;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1525);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1525);
                                    this.Manager.Comment("reaching state \'S1787\'");
                                    int temp1534 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker99)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker100)));
                                    if ((temp1534 == 0)) {
                                        this.Manager.Comment("reaching state \'S2011\'");
                                        int temp1526;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1527;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1527 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1526);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2275\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1526, "copyToHandleIndex of FastTransferSourceCopyTo, state S2275");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1527, "return of FastTransferSourceCopyTo, state S2275");
                                        this.Manager.Comment("reaching state \'S2515\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1528;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1528 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2755\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1528, "return of Release, state S2755");
                                        this.Manager.Comment("reaching state \'S2947\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1529;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1529 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3139\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1529, "return of Release, state S3139");
                                        this.Manager.Comment("reaching state \'S3331\'");
                                        goto label150;
                                    }
                                    if ((temp1534 == 1)) {
                                        this.Manager.Comment("reaching state \'S2012\'");
                                        int temp1530;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1531;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1531 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1530);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2276\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1530, "copyToHandleIndex of FastTransferSourceCopyTo, state S2276");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1531, "return of FastTransferSourceCopyTo, state S2276");
                                        this.Manager.Comment("reaching state \'S2516\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1532;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1532 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2756\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1532, "return of Release, state S2756");
                                        this.Manager.Comment("reaching state \'S2948\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1533;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1533 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3140\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1533, "return of Release, state S3140");
                                        this.Manager.Comment("reaching state \'S3332\'");
                                        goto label150;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label150:
;
                                    goto label152;
                                }
                                if ((temp1545 == 1)) {
                                    this.Manager.Comment("reaching state \'S1620\'");
                                    bool temp1535;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1535);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1535);
                                    this.Manager.Comment("reaching state \'S1788\'");
                                    int temp1544 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker102)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker103)));
                                    if ((temp1544 == 0)) {
                                        this.Manager.Comment("reaching state \'S2013\'");
                                        int temp1536;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1537;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1537 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1536);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2277\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1536, "copyToHandleIndex of FastTransferSourceCopyTo, state S2277");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1537, "return of FastTransferSourceCopyTo, state S2277");
                                        this.Manager.Comment("reaching state \'S2517\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1538;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1538 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2757\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1538, "return of Release, state S2757");
                                        this.Manager.Comment("reaching state \'S2949\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1539;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1539 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3141\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1539, "return of Release, state S3141");
                                        this.Manager.Comment("reaching state \'S3333\'");
                                        goto label151;
                                    }
                                    if ((temp1544 == 1)) {
                                        this.Manager.Comment("reaching state \'S2014\'");
                                        int temp1540;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1541;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1541 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1540);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2278\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1540, "copyToHandleIndex of FastTransferSourceCopyTo, state S2278");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1541, "return of FastTransferSourceCopyTo, state S2278");
                                        this.Manager.Comment("reaching state \'S2518\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1542;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1542 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2758\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1542, "return of Release, state S2758");
                                        this.Manager.Comment("reaching state \'S2950\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1543;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1543 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3142\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1543, "return of Release, state S3142");
                                        this.Manager.Comment("reaching state \'S3334\'");
                                        goto label151;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label151:
;
                                    goto label152;
                                }
                                throw new InvalidOperationException("never reached");
                            label152:
;
                                goto label156;
                            }
                            if ((temp1568 == 1)) {
                                this.Manager.Comment("reaching state \'S1352\'");
                                bool temp1546;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1546);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1546);
                                this.Manager.Comment("reaching state \'S1472\'");
                                int temp1567 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker105)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker108)));
                                if ((temp1567 == 0)) {
                                    this.Manager.Comment("reaching state \'S1621\'");
                                    bool temp1547;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1547);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1547);
                                    this.Manager.Comment("reaching state \'S1789\'");
                                    int temp1556 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker106)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker107)));
                                    if ((temp1556 == 0)) {
                                        this.Manager.Comment("reaching state \'S2015\'");
                                        int temp1548;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1549;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1549 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1548);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2279\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1548, "copyToHandleIndex of FastTransferSourceCopyTo, state S2279");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1549, "return of FastTransferSourceCopyTo, state S2279");
                                        this.Manager.Comment("reaching state \'S2519\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1550;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1550 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2759\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1550, "return of Release, state S2759");
                                        this.Manager.Comment("reaching state \'S2951\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1551;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1551 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3143\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1551, "return of Release, state S3143");
                                        this.Manager.Comment("reaching state \'S3335\'");
                                        goto label153;
                                    }
                                    if ((temp1556 == 1)) {
                                        this.Manager.Comment("reaching state \'S2016\'");
                                        int temp1552;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1553;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1553 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1552);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2280\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1552, "copyToHandleIndex of FastTransferSourceCopyTo, state S2280");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1553, "return of FastTransferSourceCopyTo, state S2280");
                                        this.Manager.Comment("reaching state \'S2520\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1554;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1554 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2760\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1554, "return of Release, state S2760");
                                        this.Manager.Comment("reaching state \'S2952\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1555;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1555 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3144\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1555, "return of Release, state S3144");
                                        this.Manager.Comment("reaching state \'S3336\'");
                                        goto label153;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label153:
;
                                    goto label155;
                                }
                                if ((temp1567 == 1)) {
                                    this.Manager.Comment("reaching state \'S1622\'");
                                    bool temp1557;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1557);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1557);
                                    this.Manager.Comment("reaching state \'S1790\'");
                                    int temp1566 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker109)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker110)));
                                    if ((temp1566 == 0)) {
                                        this.Manager.Comment("reaching state \'S2017\'");
                                        int temp1558;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1559;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1559 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1558);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2281\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1558, "copyToHandleIndex of FastTransferSourceCopyTo, state S2281");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1559, "return of FastTransferSourceCopyTo, state S2281");
                                        this.Manager.Comment("reaching state \'S2521\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1560;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1560 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2761\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1560, "return of Release, state S2761");
                                        this.Manager.Comment("reaching state \'S2953\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1561;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1561 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3145\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1561, "return of Release, state S3145");
                                        this.Manager.Comment("reaching state \'S3337\'");
                                        goto label154;
                                    }
                                    if ((temp1566 == 1)) {
                                        this.Manager.Comment("reaching state \'S2018\'");
                                        int temp1562;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1563;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1563 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1562);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2282\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1562, "copyToHandleIndex of FastTransferSourceCopyTo, state S2282");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1563, "return of FastTransferSourceCopyTo, state S2282");
                                        this.Manager.Comment("reaching state \'S2522\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1564;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1564 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2762\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1564, "return of Release, state S2762");
                                        this.Manager.Comment("reaching state \'S2954\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1565;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1565 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3146\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1565, "return of Release, state S3146");
                                        this.Manager.Comment("reaching state \'S3338\'");
                                        goto label154;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label154:
;
                                    goto label155;
                                }
                                throw new InvalidOperationException("never reached");
                            label155:
;
                                goto label156;
                            }
                            throw new InvalidOperationException("never reached");
                        label156:
;
                            goto label164;
                        }
                        if ((temp1628 == 1)) {
                            this.Manager.Comment("reaching state \'S186\'");
                            int temp1569;
                            int temp1570;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1571;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1571 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1569, out temp1570);
                            this.Manager.Comment("reaching state \'S258\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1569, "logonHandleIndex of Logon, state S258");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1570, "inboxFolderIdIndex of Logon, state S258");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1571, "return of Logon, state S258");
                            this.Manager.Comment("reaching state \'S330\'");
                            int temp1572;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1573;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1573 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1572);
                            this.Manager.Comment("reaching state \'S402\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1572, "folderHandleIndex of OpenFolder, state S402");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1573, "return of OpenFolder, state S402");
                            this.Manager.Comment("reaching state \'S474\'");
                            int temp1574;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1575;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1575 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1574);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S546\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1574, "messageHandleIndex of CreateMessage, state S546");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1575, "return of CreateMessage, state S546");
                            this.Manager.Comment("reaching state \'S618\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1576;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1576 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S690\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1576, "return of SetProperties, state S690");
                            this.Manager.Comment("reaching state \'S762\'");
                            int temp1577;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1578;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1578 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1577);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S834\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1577, "messageIdIndex of SaveChangesMessage, state S834");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1578, "return of SaveChangesMessage, state S834");
                            this.Manager.Comment("reaching state \'S906\'");
                            int temp1579;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1580;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1580 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1579);
                            this.Manager.Comment("reaching state \'S978\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1579, "attachmentHandleIndex of CreateAttachment, state S978");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1580, "return of CreateAttachment, state S978");
                            this.Manager.Comment("reaching state \'S1050\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1581;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1581 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1122\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1581, "return of SaveChangesAttachment, state S1122");
                            this.Manager.Comment("reaching state \'S1194\'");
                            bool temp1582;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1582);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1582);
                            this.Manager.Comment("reaching state \'S1266\'");
                            int temp1627 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker112)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker119)));
                            if ((temp1627 == 0)) {
                                this.Manager.Comment("reaching state \'S1353\'");
                                bool temp1583;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1583);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1583);
                                this.Manager.Comment("reaching state \'S1473\'");
                                int temp1604 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker113)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker116)));
                                if ((temp1604 == 0)) {
                                    this.Manager.Comment("reaching state \'S1623\'");
                                    bool temp1584;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1584);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1584);
                                    this.Manager.Comment("reaching state \'S1791\'");
                                    int temp1593 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker114)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker115)));
                                    if ((temp1593 == 0)) {
                                        this.Manager.Comment("reaching state \'S2019\'");
                                        int temp1585;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1586;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1586 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1585);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2283\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1585, "copyToHandleIndex of FastTransferSourceCopyTo, state S2283");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1586, "return of FastTransferSourceCopyTo, state S2283");
                                        this.Manager.Comment("reaching state \'S2523\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1587;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1587 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2763\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1587, "return of Release, state S2763");
                                        this.Manager.Comment("reaching state \'S2955\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1588;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1588 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3147\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1588, "return of Release, state S3147");
                                        this.Manager.Comment("reaching state \'S3339\'");
                                        goto label157;
                                    }
                                    if ((temp1593 == 1)) {
                                        this.Manager.Comment("reaching state \'S2020\'");
                                        int temp1589;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1590;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1590 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1589);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2284\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1589, "copyToHandleIndex of FastTransferSourceCopyTo, state S2284");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1590, "return of FastTransferSourceCopyTo, state S2284");
                                        this.Manager.Comment("reaching state \'S2524\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1591;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1591 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2764\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1591, "return of Release, state S2764");
                                        this.Manager.Comment("reaching state \'S2956\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1592;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1592 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3148\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1592, "return of Release, state S3148");
                                        this.Manager.Comment("reaching state \'S3340\'");
                                        goto label157;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label157:
;
                                    goto label159;
                                }
                                if ((temp1604 == 1)) {
                                    this.Manager.Comment("reaching state \'S1624\'");
                                    bool temp1594;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1594);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1594);
                                    this.Manager.Comment("reaching state \'S1792\'");
                                    int temp1603 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker117)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker118)));
                                    if ((temp1603 == 0)) {
                                        this.Manager.Comment("reaching state \'S2021\'");
                                        int temp1595;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1596;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1596 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1595);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2285\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1595, "copyToHandleIndex of FastTransferSourceCopyTo, state S2285");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1596, "return of FastTransferSourceCopyTo, state S2285");
                                        this.Manager.Comment("reaching state \'S2525\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1597;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1597 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2765\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1597, "return of Release, state S2765");
                                        this.Manager.Comment("reaching state \'S2957\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1598;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1598 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3149\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1598, "return of Release, state S3149");
                                        this.Manager.Comment("reaching state \'S3341\'");
                                        goto label158;
                                    }
                                    if ((temp1603 == 1)) {
                                        this.Manager.Comment("reaching state \'S2022\'");
                                        int temp1599;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1600;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1600 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1599);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2286\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1599, "copyToHandleIndex of FastTransferSourceCopyTo, state S2286");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1600, "return of FastTransferSourceCopyTo, state S2286");
                                        this.Manager.Comment("reaching state \'S2526\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1601;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1601 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2766\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1601, "return of Release, state S2766");
                                        this.Manager.Comment("reaching state \'S2958\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1602;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1602 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3150\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1602, "return of Release, state S3150");
                                        this.Manager.Comment("reaching state \'S3342\'");
                                        goto label158;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label158:
;
                                    goto label159;
                                }
                                throw new InvalidOperationException("never reached");
                            label159:
;
                                goto label163;
                            }
                            if ((temp1627 == 1)) {
                                this.Manager.Comment("reaching state \'S1354\'");
                                bool temp1605;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1605);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1605);
                                this.Manager.Comment("reaching state \'S1474\'");
                                int temp1626 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker120)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker123)));
                                if ((temp1626 == 0)) {
                                    this.Manager.Comment("reaching state \'S1625\'");
                                    bool temp1606;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1606);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1606);
                                    this.Manager.Comment("reaching state \'S1793\'");
                                    int temp1615 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker121)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker122)));
                                    if ((temp1615 == 0)) {
                                        this.Manager.Comment("reaching state \'S2023\'");
                                        int temp1607;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1608;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1608 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1607);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2287\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1607, "copyToHandleIndex of FastTransferSourceCopyTo, state S2287");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1608, "return of FastTransferSourceCopyTo, state S2287");
                                        this.Manager.Comment("reaching state \'S2527\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1609;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1609 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2767\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1609, "return of Release, state S2767");
                                        this.Manager.Comment("reaching state \'S2959\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1610;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1610 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3151\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1610, "return of Release, state S3151");
                                        this.Manager.Comment("reaching state \'S3343\'");
                                        goto label160;
                                    }
                                    if ((temp1615 == 1)) {
                                        this.Manager.Comment("reaching state \'S2024\'");
                                        int temp1611;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1612;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1612 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1611);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2288\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1611, "copyToHandleIndex of FastTransferSourceCopyTo, state S2288");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1612, "return of FastTransferSourceCopyTo, state S2288");
                                        this.Manager.Comment("reaching state \'S2528\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1613;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1613 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2768\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1613, "return of Release, state S2768");
                                        this.Manager.Comment("reaching state \'S2960\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1614;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1614 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3152\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1614, "return of Release, state S3152");
                                        this.Manager.Comment("reaching state \'S3344\'");
                                        goto label160;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label160:
;
                                    goto label162;
                                }
                                if ((temp1626 == 1)) {
                                    this.Manager.Comment("reaching state \'S1626\'");
                                    bool temp1616;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1616);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1616);
                                    this.Manager.Comment("reaching state \'S1794\'");
                                    int temp1625 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker124)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker125)));
                                    if ((temp1625 == 0)) {
                                        this.Manager.Comment("reaching state \'S2025\'");
                                        int temp1617;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1618;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDispl" +
                                                "ayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _" +
                                                ")\'");
                                        temp1618 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1617);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2289\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1617, "copyToHandleIndex of FastTransferSourceCopyTo, state S2289");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1618, "return of FastTransferSourceCopyTo, state S2289");
                                        this.Manager.Comment("reaching state \'S2529\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1619;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1619 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2769\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1619, "return of Release, state S2769");
                                        this.Manager.Comment("reaching state \'S2961\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1620;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1620 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3153\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1620, "return of Release, state S3153");
                                        this.Manager.Comment("reaching state \'S3345\'");
                                        goto label161;
                                    }
                                    if ((temp1625 == 1)) {
                                        this.Manager.Comment("reaching state \'S2026\'");
                                        int temp1621;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1622;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,BestBody,Un" +
                                                "icode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1622 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.BestBody, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1621);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2290\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1621, "copyToHandleIndex of FastTransferSourceCopyTo, state S2290");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1622, "return of FastTransferSourceCopyTo, state S2290");
                                        this.Manager.Comment("reaching state \'S2530\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1623;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1623 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2770\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1623, "return of Release, state S2770");
                                        this.Manager.Comment("reaching state \'S2962\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1624;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1624 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3154\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1624, "return of Release, state S3154");
                                        this.Manager.Comment("reaching state \'S3346\'");
                                        goto label161;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label161:
;
                                    goto label162;
                                }
                                throw new InvalidOperationException("never reached");
                            label162:
;
                                goto label163;
                            }
                            throw new InvalidOperationException("never reached");
                        label163:
;
                            goto label164;
                        }
                        throw new InvalidOperationException("never reached");
                    label164:
;
                        goto label165;
                    }
                    throw new InvalidOperationException("never reached");
                label165:
;
                    goto label166;
                }
                throw new InvalidOperationException("never reached");
            label166:
;
                goto label167;
            }
            if ((temp1631 == 1)) {
                this.Manager.Comment("reaching state \'S21\'");
                goto label167;
            }
            throw new InvalidOperationException("never reached");
        label167:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S55");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S83");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S139");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1259");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1459");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1763");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1763");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1459");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1764");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1764");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1259");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1460");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1765");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1765");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker14(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1460");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker15(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1766");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker16(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1766");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker17(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S139");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker18(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1260");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker19(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1461");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker20(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1767");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker21(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1767");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker22(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1461");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker23(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1768");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker24(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1768");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker25(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1260");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker26(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1462");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker27(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1769");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker28(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1769");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker29(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1462");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker30(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1770");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker31(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1770");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker32(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S83");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker33(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S140");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker34(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1261");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker35(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1463");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker36(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1771");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker37(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1771");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker38(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1463");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker39(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1772");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker40(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1772");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker41(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1261");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker42(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1464");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker43(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1773");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker44(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1773");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker45(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1464");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker46(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1774");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker47(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1774");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker48(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S140");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker49(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1262");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker50(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1465");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker51(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1775");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker52(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1775");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker53(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1465");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker54(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1776");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker55(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1776");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker56(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1262");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker57(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1466");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker58(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1777");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker59(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1777");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker60(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1466");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker61(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1778");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker62(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1778");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker63(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S55");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker64(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S84");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker65(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S141");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker66(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1263");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker67(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1467");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker68(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1779");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker69(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1779");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker70(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1467");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker71(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1780");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker72(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1780");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker73(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1263");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker74(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1468");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker75(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1781");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker76(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1781");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker77(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1468");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker78(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1782");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker79(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1782");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker80(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S141");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker81(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1264");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker82(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1469");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker83(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1783");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker84(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1783");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker85(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1469");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker86(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1784");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker87(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1784");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker88(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1264");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker89(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1470");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker90(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1785");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker91(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1785");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker92(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1470");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker93(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1786");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker94(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1786");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker95(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S84");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker96(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S142");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker97(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1265");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker98(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1471");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker99(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1787");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker100(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1787");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker101(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1471");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker102(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1788");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker103(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1788");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker104(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1265");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker105(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1472");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker106(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1789");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker107(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1789");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker108(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1472");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker109(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1790");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker110(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1790");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker111(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S142");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker112(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1266");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker113(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1473");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker114(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1791");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker115(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1791");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker116(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1473");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker117(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1792");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker118(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1792");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker119(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1266");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker120(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1474");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker121(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1793");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker122(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1793");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker123(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1474");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker124(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1794");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckRequirementEnabledChecker125(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1794");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite5CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp1632;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp1632);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp1632);
            this.Manager.Comment("reaching state \'S5\'");
            int temp2119 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp2119 == 0)) {
                this.Manager.Comment("reaching state \'S22\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S47\'");
                bool temp1633;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2117002,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2117002, out temp1633);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1633);
                this.Manager.Comment("reaching state \'S56\'");
                int temp2118 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker63)));
                if ((temp2118 == 0)) {
                    this.Manager.Comment("reaching state \'S67\'");
                    bool temp1634;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp1634);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1634);
                    this.Manager.Comment("reaching state \'S85\'");
                    int temp1875 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker1)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker32)));
                    if ((temp1875 == 0)) {
                        this.Manager.Comment("reaching state \'S107\'");
                        bool temp1635;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1635);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1635);
                        this.Manager.Comment("reaching state \'S143\'");
                        int temp1754 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker2)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker17)));
                        if ((temp1754 == 0)) {
                            this.Manager.Comment("reaching state \'S187\'");
                            int temp1636;
                            int temp1637;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1638;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1638 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1636, out temp1637);
                            this.Manager.Comment("reaching state \'S259\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1636, "logonHandleIndex of Logon, state S259");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1637, "inboxFolderIdIndex of Logon, state S259");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1638, "return of Logon, state S259");
                            this.Manager.Comment("reaching state \'S331\'");
                            int temp1639;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1640;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1640 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1639);
                            this.Manager.Comment("reaching state \'S403\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1639, "folderHandleIndex of OpenFolder, state S403");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1640, "return of OpenFolder, state S403");
                            this.Manager.Comment("reaching state \'S475\'");
                            int temp1641;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1642;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1642 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1641);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S547\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1641, "messageHandleIndex of CreateMessage, state S547");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1642, "return of CreateMessage, state S547");
                            this.Manager.Comment("reaching state \'S619\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1643;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1643 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S691\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1643, "return of SetProperties, state S691");
                            this.Manager.Comment("reaching state \'S763\'");
                            int temp1644;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1645;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1645 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1644);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S835\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1644, "messageIdIndex of SaveChangesMessage, state S835");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1645, "return of SaveChangesMessage, state S835");
                            this.Manager.Comment("reaching state \'S907\'");
                            int temp1646;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1647;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1647 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1646);
                            this.Manager.Comment("reaching state \'S979\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1646, "attachmentHandleIndex of CreateAttachment, state S979");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1647, "return of CreateAttachment, state S979");
                            this.Manager.Comment("reaching state \'S1051\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1648;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1648 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1123\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1648, "return of SaveChangesAttachment, state S1123");
                            this.Manager.Comment("reaching state \'S1195\'");
                            bool temp1649;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1649);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1649);
                            this.Manager.Comment("reaching state \'S1267\'");
                            int temp1694 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker3)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker10)));
                            if ((temp1694 == 0)) {
                                this.Manager.Comment("reaching state \'S1355\'");
                                bool temp1650;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1650);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1650);
                                this.Manager.Comment("reaching state \'S1475\'");
                                int temp1671 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker4)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker7)));
                                if ((temp1671 == 0)) {
                                    this.Manager.Comment("reaching state \'S1627\'");
                                    bool temp1651;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1651);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1651);
                                    this.Manager.Comment("reaching state \'S1795\'");
                                    int temp1660 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker5)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker6)));
                                    if ((temp1660 == 0)) {
                                        this.Manager.Comment("reaching state \'S2027\'");
                                        int temp1652;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1653;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1653 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1652);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2291\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1652, "copyToHandleIndex of FastTransferSourceCopyTo, state S2291");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1653, "return of FastTransferSourceCopyTo, state S2291");
                                        this.Manager.Comment("reaching state \'S2531\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1654;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1654 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2771\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1654, "return of Release, state S2771");
                                        this.Manager.Comment("reaching state \'S2963\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1655;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1655 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3155\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1655, "return of Release, state S3155");
                                        this.Manager.Comment("reaching state \'S3347\'");
                                        goto label168;
                                    }
                                    if ((temp1660 == 1)) {
                                        this.Manager.Comment("reaching state \'S2028\'");
                                        int temp1656;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1657;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1657 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1656);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2292\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1656, "copyToHandleIndex of FastTransferSourceCopyTo, state S2292");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1657, "return of FastTransferSourceCopyTo, state S2292");
                                        this.Manager.Comment("reaching state \'S2532\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1658;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1658 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2772\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1658, "return of Release, state S2772");
                                        this.Manager.Comment("reaching state \'S2964\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1659;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1659 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3156\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1659, "return of Release, state S3156");
                                        this.Manager.Comment("reaching state \'S3348\'");
                                        goto label168;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label168:
;
                                    goto label170;
                                }
                                if ((temp1671 == 1)) {
                                    this.Manager.Comment("reaching state \'S1628\'");
                                    bool temp1661;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1661);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1661);
                                    this.Manager.Comment("reaching state \'S1796\'");
                                    int temp1670 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker8)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker9)));
                                    if ((temp1670 == 0)) {
                                        this.Manager.Comment("reaching state \'S2029\'");
                                        int temp1662;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1663;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1663 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1662);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2293\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1662, "copyToHandleIndex of FastTransferSourceCopyTo, state S2293");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1663, "return of FastTransferSourceCopyTo, state S2293");
                                        this.Manager.Comment("reaching state \'S2533\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1664;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1664 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2773\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1664, "return of Release, state S2773");
                                        this.Manager.Comment("reaching state \'S2965\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1665;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1665 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3157\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1665, "return of Release, state S3157");
                                        this.Manager.Comment("reaching state \'S3349\'");
                                        goto label169;
                                    }
                                    if ((temp1670 == 1)) {
                                        this.Manager.Comment("reaching state \'S2030\'");
                                        int temp1666;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1667;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1667 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1666);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2294\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1666, "copyToHandleIndex of FastTransferSourceCopyTo, state S2294");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1667, "return of FastTransferSourceCopyTo, state S2294");
                                        this.Manager.Comment("reaching state \'S2534\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1668;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1668 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2774\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1668, "return of Release, state S2774");
                                        this.Manager.Comment("reaching state \'S2966\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1669;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1669 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3158\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1669, "return of Release, state S3158");
                                        this.Manager.Comment("reaching state \'S3350\'");
                                        goto label169;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label169:
;
                                    goto label170;
                                }
                                throw new InvalidOperationException("never reached");
                            label170:
;
                                goto label174;
                            }
                            if ((temp1694 == 1)) {
                                this.Manager.Comment("reaching state \'S1356\'");
                                bool temp1672;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1672);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1672);
                                this.Manager.Comment("reaching state \'S1476\'");
                                int temp1693 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker11)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker14)));
                                if ((temp1693 == 0)) {
                                    this.Manager.Comment("reaching state \'S1629\'");
                                    bool temp1673;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1673);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1673);
                                    this.Manager.Comment("reaching state \'S1797\'");
                                    int temp1682 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker12)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker13)));
                                    if ((temp1682 == 0)) {
                                        this.Manager.Comment("reaching state \'S2031\'");
                                        int temp1674;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1675;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1675 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1674);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2295\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1674, "copyToHandleIndex of FastTransferSourceCopyTo, state S2295");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1675, "return of FastTransferSourceCopyTo, state S2295");
                                        this.Manager.Comment("reaching state \'S2535\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1676;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1676 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2775\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1676, "return of Release, state S2775");
                                        this.Manager.Comment("reaching state \'S2967\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1677;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1677 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3159\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1677, "return of Release, state S3159");
                                        this.Manager.Comment("reaching state \'S3351\'");
                                        goto label171;
                                    }
                                    if ((temp1682 == 1)) {
                                        this.Manager.Comment("reaching state \'S2032\'");
                                        int temp1678;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1679;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1679 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1678);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2296\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1678, "copyToHandleIndex of FastTransferSourceCopyTo, state S2296");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1679, "return of FastTransferSourceCopyTo, state S2296");
                                        this.Manager.Comment("reaching state \'S2536\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1680;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1680 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2776\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1680, "return of Release, state S2776");
                                        this.Manager.Comment("reaching state \'S2968\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1681;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1681 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3160\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1681, "return of Release, state S3160");
                                        this.Manager.Comment("reaching state \'S3352\'");
                                        goto label171;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label171:
;
                                    goto label173;
                                }
                                if ((temp1693 == 1)) {
                                    this.Manager.Comment("reaching state \'S1630\'");
                                    bool temp1683;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1683);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1683);
                                    this.Manager.Comment("reaching state \'S1798\'");
                                    int temp1692 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker15)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker16)));
                                    if ((temp1692 == 0)) {
                                        this.Manager.Comment("reaching state \'S2033\'");
                                        int temp1684;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1685;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1685 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1684);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2297\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1684, "copyToHandleIndex of FastTransferSourceCopyTo, state S2297");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1685, "return of FastTransferSourceCopyTo, state S2297");
                                        this.Manager.Comment("reaching state \'S2537\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1686;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1686 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2777\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1686, "return of Release, state S2777");
                                        this.Manager.Comment("reaching state \'S2969\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1687;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1687 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3161\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1687, "return of Release, state S3161");
                                        this.Manager.Comment("reaching state \'S3353\'");
                                        goto label172;
                                    }
                                    if ((temp1692 == 1)) {
                                        this.Manager.Comment("reaching state \'S2034\'");
                                        int temp1688;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1689;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1689 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1688);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2298\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1688, "copyToHandleIndex of FastTransferSourceCopyTo, state S2298");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1689, "return of FastTransferSourceCopyTo, state S2298");
                                        this.Manager.Comment("reaching state \'S2538\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1690;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1690 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2778\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1690, "return of Release, state S2778");
                                        this.Manager.Comment("reaching state \'S2970\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1691;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1691 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3162\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1691, "return of Release, state S3162");
                                        this.Manager.Comment("reaching state \'S3354\'");
                                        goto label172;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label172:
;
                                    goto label173;
                                }
                                throw new InvalidOperationException("never reached");
                            label173:
;
                                goto label174;
                            }
                            throw new InvalidOperationException("never reached");
                        label174:
;
                            goto label182;
                        }
                        if ((temp1754 == 1)) {
                            this.Manager.Comment("reaching state \'S188\'");
                            int temp1695;
                            int temp1696;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1697;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1697 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1695, out temp1696);
                            this.Manager.Comment("reaching state \'S260\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1695, "logonHandleIndex of Logon, state S260");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1696, "inboxFolderIdIndex of Logon, state S260");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1697, "return of Logon, state S260");
                            this.Manager.Comment("reaching state \'S332\'");
                            int temp1698;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1699;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1699 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1698);
                            this.Manager.Comment("reaching state \'S404\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1698, "folderHandleIndex of OpenFolder, state S404");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1699, "return of OpenFolder, state S404");
                            this.Manager.Comment("reaching state \'S476\'");
                            int temp1700;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1701;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1701 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1700);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S548\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1700, "messageHandleIndex of CreateMessage, state S548");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1701, "return of CreateMessage, state S548");
                            this.Manager.Comment("reaching state \'S620\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1702;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1702 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S692\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1702, "return of SetProperties, state S692");
                            this.Manager.Comment("reaching state \'S764\'");
                            int temp1703;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1704;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1704 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1703);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S836\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1703, "messageIdIndex of SaveChangesMessage, state S836");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1704, "return of SaveChangesMessage, state S836");
                            this.Manager.Comment("reaching state \'S908\'");
                            int temp1705;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1706;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1706 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1705);
                            this.Manager.Comment("reaching state \'S980\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1705, "attachmentHandleIndex of CreateAttachment, state S980");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1706, "return of CreateAttachment, state S980");
                            this.Manager.Comment("reaching state \'S1052\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1707;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1707 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1124\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1707, "return of SaveChangesAttachment, state S1124");
                            this.Manager.Comment("reaching state \'S1196\'");
                            bool temp1708;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1708);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1708);
                            this.Manager.Comment("reaching state \'S1268\'");
                            int temp1753 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker18)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker25)));
                            if ((temp1753 == 0)) {
                                this.Manager.Comment("reaching state \'S1357\'");
                                bool temp1709;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1709);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1709);
                                this.Manager.Comment("reaching state \'S1477\'");
                                int temp1730 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker19)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker22)));
                                if ((temp1730 == 0)) {
                                    this.Manager.Comment("reaching state \'S1631\'");
                                    bool temp1710;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1710);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1710);
                                    this.Manager.Comment("reaching state \'S1799\'");
                                    int temp1719 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker20)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker21)));
                                    if ((temp1719 == 0)) {
                                        this.Manager.Comment("reaching state \'S2035\'");
                                        int temp1711;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1712;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1712 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1711);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2299\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1711, "copyToHandleIndex of FastTransferSourceCopyTo, state S2299");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1712, "return of FastTransferSourceCopyTo, state S2299");
                                        this.Manager.Comment("reaching state \'S2539\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1713;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1713 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2779\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1713, "return of Release, state S2779");
                                        this.Manager.Comment("reaching state \'S2971\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1714;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1714 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3163\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1714, "return of Release, state S3163");
                                        this.Manager.Comment("reaching state \'S3355\'");
                                        goto label175;
                                    }
                                    if ((temp1719 == 1)) {
                                        this.Manager.Comment("reaching state \'S2036\'");
                                        int temp1715;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1716;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1716 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1715);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2300\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1715, "copyToHandleIndex of FastTransferSourceCopyTo, state S2300");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1716, "return of FastTransferSourceCopyTo, state S2300");
                                        this.Manager.Comment("reaching state \'S2540\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1717;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1717 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2780\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1717, "return of Release, state S2780");
                                        this.Manager.Comment("reaching state \'S2972\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1718;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1718 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3164\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1718, "return of Release, state S3164");
                                        this.Manager.Comment("reaching state \'S3356\'");
                                        goto label175;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label175:
;
                                    goto label177;
                                }
                                if ((temp1730 == 1)) {
                                    this.Manager.Comment("reaching state \'S1632\'");
                                    bool temp1720;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1720);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1720);
                                    this.Manager.Comment("reaching state \'S1800\'");
                                    int temp1729 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker23)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker24)));
                                    if ((temp1729 == 0)) {
                                        this.Manager.Comment("reaching state \'S2037\'");
                                        int temp1721;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1722;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1722 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1721);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2301\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1721, "copyToHandleIndex of FastTransferSourceCopyTo, state S2301");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1722, "return of FastTransferSourceCopyTo, state S2301");
                                        this.Manager.Comment("reaching state \'S2541\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1723;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1723 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2781\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1723, "return of Release, state S2781");
                                        this.Manager.Comment("reaching state \'S2973\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1724;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1724 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3165\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1724, "return of Release, state S3165");
                                        this.Manager.Comment("reaching state \'S3357\'");
                                        goto label176;
                                    }
                                    if ((temp1729 == 1)) {
                                        this.Manager.Comment("reaching state \'S2038\'");
                                        int temp1725;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1726;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1726 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1725);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2302\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1725, "copyToHandleIndex of FastTransferSourceCopyTo, state S2302");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1726, "return of FastTransferSourceCopyTo, state S2302");
                                        this.Manager.Comment("reaching state \'S2542\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1727;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1727 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2782\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1727, "return of Release, state S2782");
                                        this.Manager.Comment("reaching state \'S2974\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1728;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1728 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3166\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1728, "return of Release, state S3166");
                                        this.Manager.Comment("reaching state \'S3358\'");
                                        goto label176;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label176:
;
                                    goto label177;
                                }
                                throw new InvalidOperationException("never reached");
                            label177:
;
                                goto label181;
                            }
                            if ((temp1753 == 1)) {
                                this.Manager.Comment("reaching state \'S1358\'");
                                bool temp1731;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1731);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1731);
                                this.Manager.Comment("reaching state \'S1478\'");
                                int temp1752 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker26)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker29)));
                                if ((temp1752 == 0)) {
                                    this.Manager.Comment("reaching state \'S1633\'");
                                    bool temp1732;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1732);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1732);
                                    this.Manager.Comment("reaching state \'S1801\'");
                                    int temp1741 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker27)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker28)));
                                    if ((temp1741 == 0)) {
                                        this.Manager.Comment("reaching state \'S2039\'");
                                        int temp1733;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1734;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1734 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1733);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2303\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1733, "copyToHandleIndex of FastTransferSourceCopyTo, state S2303");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1734, "return of FastTransferSourceCopyTo, state S2303");
                                        this.Manager.Comment("reaching state \'S2543\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1735;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1735 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2783\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1735, "return of Release, state S2783");
                                        this.Manager.Comment("reaching state \'S2975\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1736;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1736 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3167\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1736, "return of Release, state S3167");
                                        this.Manager.Comment("reaching state \'S3359\'");
                                        goto label178;
                                    }
                                    if ((temp1741 == 1)) {
                                        this.Manager.Comment("reaching state \'S2040\'");
                                        int temp1737;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1738;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1738 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1737);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2304\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1737, "copyToHandleIndex of FastTransferSourceCopyTo, state S2304");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1738, "return of FastTransferSourceCopyTo, state S2304");
                                        this.Manager.Comment("reaching state \'S2544\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1739;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1739 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2784\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1739, "return of Release, state S2784");
                                        this.Manager.Comment("reaching state \'S2976\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1740;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1740 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3168\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1740, "return of Release, state S3168");
                                        this.Manager.Comment("reaching state \'S3360\'");
                                        goto label178;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label178:
;
                                    goto label180;
                                }
                                if ((temp1752 == 1)) {
                                    this.Manager.Comment("reaching state \'S1634\'");
                                    bool temp1742;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1742);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1742);
                                    this.Manager.Comment("reaching state \'S1802\'");
                                    int temp1751 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker30)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker31)));
                                    if ((temp1751 == 0)) {
                                        this.Manager.Comment("reaching state \'S2041\'");
                                        int temp1743;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1744;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1744 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1743);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2305\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1743, "copyToHandleIndex of FastTransferSourceCopyTo, state S2305");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1744, "return of FastTransferSourceCopyTo, state S2305");
                                        this.Manager.Comment("reaching state \'S2545\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1745;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1745 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2785\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1745, "return of Release, state S2785");
                                        this.Manager.Comment("reaching state \'S2977\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1746;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1746 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3169\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1746, "return of Release, state S3169");
                                        this.Manager.Comment("reaching state \'S3361\'");
                                        goto label179;
                                    }
                                    if ((temp1751 == 1)) {
                                        this.Manager.Comment("reaching state \'S2042\'");
                                        int temp1747;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1748;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1748 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1747);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2306\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1747, "copyToHandleIndex of FastTransferSourceCopyTo, state S2306");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1748, "return of FastTransferSourceCopyTo, state S2306");
                                        this.Manager.Comment("reaching state \'S2546\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1749;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1749 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2786\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1749, "return of Release, state S2786");
                                        this.Manager.Comment("reaching state \'S2978\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1750;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1750 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3170\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1750, "return of Release, state S3170");
                                        this.Manager.Comment("reaching state \'S3362\'");
                                        goto label179;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label179:
;
                                    goto label180;
                                }
                                throw new InvalidOperationException("never reached");
                            label180:
;
                                goto label181;
                            }
                            throw new InvalidOperationException("never reached");
                        label181:
;
                            goto label182;
                        }
                        throw new InvalidOperationException("never reached");
                    label182:
;
                        goto label198;
                    }
                    if ((temp1875 == 1)) {
                        this.Manager.Comment("reaching state \'S108\'");
                        bool temp1755;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1755);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1755);
                        this.Manager.Comment("reaching state \'S144\'");
                        int temp1874 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker33)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker48)));
                        if ((temp1874 == 0)) {
                            this.Manager.Comment("reaching state \'S189\'");
                            int temp1756;
                            int temp1757;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1758;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1758 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1756, out temp1757);
                            this.Manager.Comment("reaching state \'S261\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1756, "logonHandleIndex of Logon, state S261");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1757, "inboxFolderIdIndex of Logon, state S261");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1758, "return of Logon, state S261");
                            this.Manager.Comment("reaching state \'S333\'");
                            int temp1759;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1760;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1760 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1759);
                            this.Manager.Comment("reaching state \'S405\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1759, "folderHandleIndex of OpenFolder, state S405");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1760, "return of OpenFolder, state S405");
                            this.Manager.Comment("reaching state \'S477\'");
                            int temp1761;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1762;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1762 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1761);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S549\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1761, "messageHandleIndex of CreateMessage, state S549");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1762, "return of CreateMessage, state S549");
                            this.Manager.Comment("reaching state \'S621\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1763;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1763 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S693\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1763, "return of SetProperties, state S693");
                            this.Manager.Comment("reaching state \'S765\'");
                            int temp1764;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1765;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1765 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1764);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S837\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1764, "messageIdIndex of SaveChangesMessage, state S837");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1765, "return of SaveChangesMessage, state S837");
                            this.Manager.Comment("reaching state \'S909\'");
                            int temp1766;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1767;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1767 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1766);
                            this.Manager.Comment("reaching state \'S981\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1766, "attachmentHandleIndex of CreateAttachment, state S981");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1767, "return of CreateAttachment, state S981");
                            this.Manager.Comment("reaching state \'S1053\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1768;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1768 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1125\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1768, "return of SaveChangesAttachment, state S1125");
                            this.Manager.Comment("reaching state \'S1197\'");
                            bool temp1769;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1769);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1769);
                            this.Manager.Comment("reaching state \'S1269\'");
                            int temp1814 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker34)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker41)));
                            if ((temp1814 == 0)) {
                                this.Manager.Comment("reaching state \'S1359\'");
                                bool temp1770;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1770);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1770);
                                this.Manager.Comment("reaching state \'S1479\'");
                                int temp1791 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker35)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker38)));
                                if ((temp1791 == 0)) {
                                    this.Manager.Comment("reaching state \'S1635\'");
                                    bool temp1771;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1771);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1771);
                                    this.Manager.Comment("reaching state \'S1803\'");
                                    int temp1780 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker36)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker37)));
                                    if ((temp1780 == 0)) {
                                        this.Manager.Comment("reaching state \'S2043\'");
                                        int temp1772;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1773;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1773 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1772);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2307\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1772, "copyToHandleIndex of FastTransferSourceCopyTo, state S2307");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1773, "return of FastTransferSourceCopyTo, state S2307");
                                        this.Manager.Comment("reaching state \'S2547\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1774;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1774 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2787\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1774, "return of Release, state S2787");
                                        this.Manager.Comment("reaching state \'S2979\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1775;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1775 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3171\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1775, "return of Release, state S3171");
                                        this.Manager.Comment("reaching state \'S3363\'");
                                        goto label183;
                                    }
                                    if ((temp1780 == 1)) {
                                        this.Manager.Comment("reaching state \'S2044\'");
                                        int temp1776;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1777;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1777 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1776);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2308\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1776, "copyToHandleIndex of FastTransferSourceCopyTo, state S2308");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1777, "return of FastTransferSourceCopyTo, state S2308");
                                        this.Manager.Comment("reaching state \'S2548\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1778;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1778 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2788\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1778, "return of Release, state S2788");
                                        this.Manager.Comment("reaching state \'S2980\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1779;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1779 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3172\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1779, "return of Release, state S3172");
                                        this.Manager.Comment("reaching state \'S3364\'");
                                        goto label183;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label183:
;
                                    goto label185;
                                }
                                if ((temp1791 == 1)) {
                                    this.Manager.Comment("reaching state \'S1636\'");
                                    bool temp1781;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1781);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1781);
                                    this.Manager.Comment("reaching state \'S1804\'");
                                    int temp1790 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker39)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker40)));
                                    if ((temp1790 == 0)) {
                                        this.Manager.Comment("reaching state \'S2045\'");
                                        int temp1782;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1783;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1783 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1782);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2309\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1782, "copyToHandleIndex of FastTransferSourceCopyTo, state S2309");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1783, "return of FastTransferSourceCopyTo, state S2309");
                                        this.Manager.Comment("reaching state \'S2549\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1784;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1784 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2789\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1784, "return of Release, state S2789");
                                        this.Manager.Comment("reaching state \'S2981\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1785;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1785 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3173\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1785, "return of Release, state S3173");
                                        this.Manager.Comment("reaching state \'S3365\'");
                                        goto label184;
                                    }
                                    if ((temp1790 == 1)) {
                                        this.Manager.Comment("reaching state \'S2046\'");
                                        int temp1786;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1787;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1787 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1786);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2310\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1786, "copyToHandleIndex of FastTransferSourceCopyTo, state S2310");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1787, "return of FastTransferSourceCopyTo, state S2310");
                                        this.Manager.Comment("reaching state \'S2550\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1788;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1788 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2790\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1788, "return of Release, state S2790");
                                        this.Manager.Comment("reaching state \'S2982\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1789;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1789 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3174\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1789, "return of Release, state S3174");
                                        this.Manager.Comment("reaching state \'S3366\'");
                                        goto label184;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label184:
;
                                    goto label185;
                                }
                                throw new InvalidOperationException("never reached");
                            label185:
;
                                goto label189;
                            }
                            if ((temp1814 == 1)) {
                                this.Manager.Comment("reaching state \'S1360\'");
                                bool temp1792;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1792);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1792);
                                this.Manager.Comment("reaching state \'S1480\'");
                                int temp1813 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker42)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker45)));
                                if ((temp1813 == 0)) {
                                    this.Manager.Comment("reaching state \'S1637\'");
                                    bool temp1793;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1793);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1793);
                                    this.Manager.Comment("reaching state \'S1805\'");
                                    int temp1802 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker43)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker44)));
                                    if ((temp1802 == 0)) {
                                        this.Manager.Comment("reaching state \'S2047\'");
                                        int temp1794;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1795;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1795 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1794);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2311\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1794, "copyToHandleIndex of FastTransferSourceCopyTo, state S2311");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1795, "return of FastTransferSourceCopyTo, state S2311");
                                        this.Manager.Comment("reaching state \'S2551\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1796;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1796 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2791\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1796, "return of Release, state S2791");
                                        this.Manager.Comment("reaching state \'S2983\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1797;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1797 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3175\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1797, "return of Release, state S3175");
                                        this.Manager.Comment("reaching state \'S3367\'");
                                        goto label186;
                                    }
                                    if ((temp1802 == 1)) {
                                        this.Manager.Comment("reaching state \'S2048\'");
                                        int temp1798;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1799;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1799 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1798);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2312\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1798, "copyToHandleIndex of FastTransferSourceCopyTo, state S2312");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1799, "return of FastTransferSourceCopyTo, state S2312");
                                        this.Manager.Comment("reaching state \'S2552\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1800;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1800 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2792\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1800, "return of Release, state S2792");
                                        this.Manager.Comment("reaching state \'S2984\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1801;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1801 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3176\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1801, "return of Release, state S3176");
                                        this.Manager.Comment("reaching state \'S3368\'");
                                        goto label186;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label186:
;
                                    goto label188;
                                }
                                if ((temp1813 == 1)) {
                                    this.Manager.Comment("reaching state \'S1638\'");
                                    bool temp1803;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1803);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1803);
                                    this.Manager.Comment("reaching state \'S1806\'");
                                    int temp1812 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker46)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker47)));
                                    if ((temp1812 == 0)) {
                                        this.Manager.Comment("reaching state \'S2049\'");
                                        int temp1804;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1805;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1805 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1804);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2313\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1804, "copyToHandleIndex of FastTransferSourceCopyTo, state S2313");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1805, "return of FastTransferSourceCopyTo, state S2313");
                                        this.Manager.Comment("reaching state \'S2553\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1806;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1806 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2793\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1806, "return of Release, state S2793");
                                        this.Manager.Comment("reaching state \'S2985\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1807;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1807 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3177\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1807, "return of Release, state S3177");
                                        this.Manager.Comment("reaching state \'S3369\'");
                                        goto label187;
                                    }
                                    if ((temp1812 == 1)) {
                                        this.Manager.Comment("reaching state \'S2050\'");
                                        int temp1808;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1809;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1809 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1808);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2314\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1808, "copyToHandleIndex of FastTransferSourceCopyTo, state S2314");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1809, "return of FastTransferSourceCopyTo, state S2314");
                                        this.Manager.Comment("reaching state \'S2554\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1810;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1810 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2794\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1810, "return of Release, state S2794");
                                        this.Manager.Comment("reaching state \'S2986\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1811;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1811 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3178\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1811, "return of Release, state S3178");
                                        this.Manager.Comment("reaching state \'S3370\'");
                                        goto label187;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label187:
;
                                    goto label188;
                                }
                                throw new InvalidOperationException("never reached");
                            label188:
;
                                goto label189;
                            }
                            throw new InvalidOperationException("never reached");
                        label189:
;
                            goto label197;
                        }
                        if ((temp1874 == 1)) {
                            this.Manager.Comment("reaching state \'S190\'");
                            int temp1815;
                            int temp1816;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1817;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1817 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1815, out temp1816);
                            this.Manager.Comment("reaching state \'S262\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1815, "logonHandleIndex of Logon, state S262");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1816, "inboxFolderIdIndex of Logon, state S262");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1817, "return of Logon, state S262");
                            this.Manager.Comment("reaching state \'S334\'");
                            int temp1818;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1819;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1819 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1818);
                            this.Manager.Comment("reaching state \'S406\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1818, "folderHandleIndex of OpenFolder, state S406");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1819, "return of OpenFolder, state S406");
                            this.Manager.Comment("reaching state \'S478\'");
                            int temp1820;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1821;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1821 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1820);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S550\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1820, "messageHandleIndex of CreateMessage, state S550");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1821, "return of CreateMessage, state S550");
                            this.Manager.Comment("reaching state \'S622\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1822;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1822 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S694\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1822, "return of SetProperties, state S694");
                            this.Manager.Comment("reaching state \'S766\'");
                            int temp1823;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1824;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1824 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1823);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S838\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1823, "messageIdIndex of SaveChangesMessage, state S838");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1824, "return of SaveChangesMessage, state S838");
                            this.Manager.Comment("reaching state \'S910\'");
                            int temp1825;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1826;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1826 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1825);
                            this.Manager.Comment("reaching state \'S982\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1825, "attachmentHandleIndex of CreateAttachment, state S982");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1826, "return of CreateAttachment, state S982");
                            this.Manager.Comment("reaching state \'S1054\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1827;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1827 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1126\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1827, "return of SaveChangesAttachment, state S1126");
                            this.Manager.Comment("reaching state \'S1198\'");
                            bool temp1828;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1828);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1828);
                            this.Manager.Comment("reaching state \'S1270\'");
                            int temp1873 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker49)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker56)));
                            if ((temp1873 == 0)) {
                                this.Manager.Comment("reaching state \'S1361\'");
                                bool temp1829;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1829);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1829);
                                this.Manager.Comment("reaching state \'S1481\'");
                                int temp1850 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker50)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker53)));
                                if ((temp1850 == 0)) {
                                    this.Manager.Comment("reaching state \'S1639\'");
                                    bool temp1830;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1830);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1830);
                                    this.Manager.Comment("reaching state \'S1807\'");
                                    int temp1839 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker51)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker52)));
                                    if ((temp1839 == 0)) {
                                        this.Manager.Comment("reaching state \'S2051\'");
                                        int temp1831;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1832;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1832 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1831);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2315\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1831, "copyToHandleIndex of FastTransferSourceCopyTo, state S2315");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1832, "return of FastTransferSourceCopyTo, state S2315");
                                        this.Manager.Comment("reaching state \'S2555\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1833;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1833 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2795\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1833, "return of Release, state S2795");
                                        this.Manager.Comment("reaching state \'S2987\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1834;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1834 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3179\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1834, "return of Release, state S3179");
                                        this.Manager.Comment("reaching state \'S3371\'");
                                        goto label190;
                                    }
                                    if ((temp1839 == 1)) {
                                        this.Manager.Comment("reaching state \'S2052\'");
                                        int temp1835;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1836;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1836 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1835);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2316\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1835, "copyToHandleIndex of FastTransferSourceCopyTo, state S2316");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1836, "return of FastTransferSourceCopyTo, state S2316");
                                        this.Manager.Comment("reaching state \'S2556\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1837;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1837 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2796\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1837, "return of Release, state S2796");
                                        this.Manager.Comment("reaching state \'S2988\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1838;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1838 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3180\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1838, "return of Release, state S3180");
                                        this.Manager.Comment("reaching state \'S3372\'");
                                        goto label190;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label190:
;
                                    goto label192;
                                }
                                if ((temp1850 == 1)) {
                                    this.Manager.Comment("reaching state \'S1640\'");
                                    bool temp1840;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1840);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1840);
                                    this.Manager.Comment("reaching state \'S1808\'");
                                    int temp1849 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker54)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker55)));
                                    if ((temp1849 == 0)) {
                                        this.Manager.Comment("reaching state \'S2053\'");
                                        int temp1841;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1842;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1842 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1841);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2317\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1841, "copyToHandleIndex of FastTransferSourceCopyTo, state S2317");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1842, "return of FastTransferSourceCopyTo, state S2317");
                                        this.Manager.Comment("reaching state \'S2557\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1843;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1843 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2797\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1843, "return of Release, state S2797");
                                        this.Manager.Comment("reaching state \'S2989\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1844;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1844 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3181\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1844, "return of Release, state S3181");
                                        this.Manager.Comment("reaching state \'S3373\'");
                                        goto label191;
                                    }
                                    if ((temp1849 == 1)) {
                                        this.Manager.Comment("reaching state \'S2054\'");
                                        int temp1845;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1846;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1846 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1845);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2318\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1845, "copyToHandleIndex of FastTransferSourceCopyTo, state S2318");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1846, "return of FastTransferSourceCopyTo, state S2318");
                                        this.Manager.Comment("reaching state \'S2558\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1847;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1847 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2798\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1847, "return of Release, state S2798");
                                        this.Manager.Comment("reaching state \'S2990\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1848;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1848 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3182\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1848, "return of Release, state S3182");
                                        this.Manager.Comment("reaching state \'S3374\'");
                                        goto label191;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label191:
;
                                    goto label192;
                                }
                                throw new InvalidOperationException("never reached");
                            label192:
;
                                goto label196;
                            }
                            if ((temp1873 == 1)) {
                                this.Manager.Comment("reaching state \'S1362\'");
                                bool temp1851;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1851);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1851);
                                this.Manager.Comment("reaching state \'S1482\'");
                                int temp1872 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker57)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker60)));
                                if ((temp1872 == 0)) {
                                    this.Manager.Comment("reaching state \'S1641\'");
                                    bool temp1852;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1852);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1852);
                                    this.Manager.Comment("reaching state \'S1809\'");
                                    int temp1861 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker58)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker59)));
                                    if ((temp1861 == 0)) {
                                        this.Manager.Comment("reaching state \'S2055\'");
                                        int temp1853;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1854;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1854 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1853);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2319\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1853, "copyToHandleIndex of FastTransferSourceCopyTo, state S2319");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1854, "return of FastTransferSourceCopyTo, state S2319");
                                        this.Manager.Comment("reaching state \'S2559\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1855;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1855 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2799\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1855, "return of Release, state S2799");
                                        this.Manager.Comment("reaching state \'S2991\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1856;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1856 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3183\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1856, "return of Release, state S3183");
                                        this.Manager.Comment("reaching state \'S3375\'");
                                        goto label193;
                                    }
                                    if ((temp1861 == 1)) {
                                        this.Manager.Comment("reaching state \'S2056\'");
                                        int temp1857;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1858;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1858 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1857);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2320\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1857, "copyToHandleIndex of FastTransferSourceCopyTo, state S2320");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1858, "return of FastTransferSourceCopyTo, state S2320");
                                        this.Manager.Comment("reaching state \'S2560\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1859;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1859 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2800\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1859, "return of Release, state S2800");
                                        this.Manager.Comment("reaching state \'S2992\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1860;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1860 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3184\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1860, "return of Release, state S3184");
                                        this.Manager.Comment("reaching state \'S3376\'");
                                        goto label193;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label193:
;
                                    goto label195;
                                }
                                if ((temp1872 == 1)) {
                                    this.Manager.Comment("reaching state \'S1642\'");
                                    bool temp1862;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1862);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1862);
                                    this.Manager.Comment("reaching state \'S1810\'");
                                    int temp1871 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker61)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker62)));
                                    if ((temp1871 == 0)) {
                                        this.Manager.Comment("reaching state \'S2057\'");
                                        int temp1863;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1864;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1864 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1863);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2321\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1863, "copyToHandleIndex of FastTransferSourceCopyTo, state S2321");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1864, "return of FastTransferSourceCopyTo, state S2321");
                                        this.Manager.Comment("reaching state \'S2561\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1865;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1865 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2801\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1865, "return of Release, state S2801");
                                        this.Manager.Comment("reaching state \'S2993\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1866;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1866 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3185\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1866, "return of Release, state S3185");
                                        this.Manager.Comment("reaching state \'S3377\'");
                                        goto label194;
                                    }
                                    if ((temp1871 == 1)) {
                                        this.Manager.Comment("reaching state \'S2058\'");
                                        int temp1867;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1868;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1868 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1867);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2322\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1867, "copyToHandleIndex of FastTransferSourceCopyTo, state S2322");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1868, "return of FastTransferSourceCopyTo, state S2322");
                                        this.Manager.Comment("reaching state \'S2562\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1869;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1869 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2802\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1869, "return of Release, state S2802");
                                        this.Manager.Comment("reaching state \'S2994\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1870;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1870 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3186\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1870, "return of Release, state S3186");
                                        this.Manager.Comment("reaching state \'S3378\'");
                                        goto label194;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label194:
;
                                    goto label195;
                                }
                                throw new InvalidOperationException("never reached");
                            label195:
;
                                goto label196;
                            }
                            throw new InvalidOperationException("never reached");
                        label196:
;
                            goto label197;
                        }
                        throw new InvalidOperationException("never reached");
                    label197:
;
                        goto label198;
                    }
                    throw new InvalidOperationException("never reached");
                label198:
;
                    goto label230;
                }
                if ((temp2118 == 1)) {
                    this.Manager.Comment("reaching state \'S68\'");
                    bool temp1876;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp1876);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1876);
                    this.Manager.Comment("reaching state \'S86\'");
                    int temp2117 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker64)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker95)));
                    if ((temp2117 == 0)) {
                        this.Manager.Comment("reaching state \'S109\'");
                        bool temp1877;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1877);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1877);
                        this.Manager.Comment("reaching state \'S145\'");
                        int temp1996 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker65)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker80)));
                        if ((temp1996 == 0)) {
                            this.Manager.Comment("reaching state \'S191\'");
                            int temp1878;
                            int temp1879;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1880;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1880 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1878, out temp1879);
                            this.Manager.Comment("reaching state \'S263\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1878, "logonHandleIndex of Logon, state S263");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1879, "inboxFolderIdIndex of Logon, state S263");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1880, "return of Logon, state S263");
                            this.Manager.Comment("reaching state \'S335\'");
                            int temp1881;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1882;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1882 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1881);
                            this.Manager.Comment("reaching state \'S407\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1881, "folderHandleIndex of OpenFolder, state S407");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1882, "return of OpenFolder, state S407");
                            this.Manager.Comment("reaching state \'S479\'");
                            int temp1883;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1884;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1884 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1883);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S551\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1883, "messageHandleIndex of CreateMessage, state S551");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1884, "return of CreateMessage, state S551");
                            this.Manager.Comment("reaching state \'S623\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1885;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1885 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S695\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1885, "return of SetProperties, state S695");
                            this.Manager.Comment("reaching state \'S767\'");
                            int temp1886;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1887;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1887 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1886);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S839\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1886, "messageIdIndex of SaveChangesMessage, state S839");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1887, "return of SaveChangesMessage, state S839");
                            this.Manager.Comment("reaching state \'S911\'");
                            int temp1888;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1889;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1889 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1888);
                            this.Manager.Comment("reaching state \'S983\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1888, "attachmentHandleIndex of CreateAttachment, state S983");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1889, "return of CreateAttachment, state S983");
                            this.Manager.Comment("reaching state \'S1055\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1890;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1890 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1127\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1890, "return of SaveChangesAttachment, state S1127");
                            this.Manager.Comment("reaching state \'S1199\'");
                            bool temp1891;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1891);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1891);
                            this.Manager.Comment("reaching state \'S1271\'");
                            int temp1936 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker66)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker73)));
                            if ((temp1936 == 0)) {
                                this.Manager.Comment("reaching state \'S1363\'");
                                bool temp1892;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1892);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1892);
                                this.Manager.Comment("reaching state \'S1483\'");
                                int temp1913 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker67)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker70)));
                                if ((temp1913 == 0)) {
                                    this.Manager.Comment("reaching state \'S1643\'");
                                    bool temp1893;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1893);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1893);
                                    this.Manager.Comment("reaching state \'S1811\'");
                                    int temp1902 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker68)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker69)));
                                    if ((temp1902 == 0)) {
                                        this.Manager.Comment("reaching state \'S2059\'");
                                        int temp1894;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1895;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1895 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1894);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2323\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1894, "copyToHandleIndex of FastTransferSourceCopyTo, state S2323");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1895, "return of FastTransferSourceCopyTo, state S2323");
                                        this.Manager.Comment("reaching state \'S2563\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1896;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1896 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2803\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1896, "return of Release, state S2803");
                                        this.Manager.Comment("reaching state \'S2995\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1897;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1897 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3187\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1897, "return of Release, state S3187");
                                        this.Manager.Comment("reaching state \'S3379\'");
                                        goto label199;
                                    }
                                    if ((temp1902 == 1)) {
                                        this.Manager.Comment("reaching state \'S2060\'");
                                        int temp1898;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1899;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1899 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1898);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2324\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1898, "copyToHandleIndex of FastTransferSourceCopyTo, state S2324");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1899, "return of FastTransferSourceCopyTo, state S2324");
                                        this.Manager.Comment("reaching state \'S2564\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1900;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1900 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2804\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1900, "return of Release, state S2804");
                                        this.Manager.Comment("reaching state \'S2996\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1901;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1901 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3188\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1901, "return of Release, state S3188");
                                        this.Manager.Comment("reaching state \'S3380\'");
                                        goto label199;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label199:
;
                                    goto label201;
                                }
                                if ((temp1913 == 1)) {
                                    this.Manager.Comment("reaching state \'S1644\'");
                                    bool temp1903;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1903);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1903);
                                    this.Manager.Comment("reaching state \'S1812\'");
                                    int temp1912 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker71)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker72)));
                                    if ((temp1912 == 0)) {
                                        this.Manager.Comment("reaching state \'S2061\'");
                                        int temp1904;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1905;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1905 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1904);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2325\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1904, "copyToHandleIndex of FastTransferSourceCopyTo, state S2325");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1905, "return of FastTransferSourceCopyTo, state S2325");
                                        this.Manager.Comment("reaching state \'S2565\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1906;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1906 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2805\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1906, "return of Release, state S2805");
                                        this.Manager.Comment("reaching state \'S2997\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1907;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1907 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3189\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1907, "return of Release, state S3189");
                                        this.Manager.Comment("reaching state \'S3381\'");
                                        goto label200;
                                    }
                                    if ((temp1912 == 1)) {
                                        this.Manager.Comment("reaching state \'S2062\'");
                                        int temp1908;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1909;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1909 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1908);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2326\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1908, "copyToHandleIndex of FastTransferSourceCopyTo, state S2326");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1909, "return of FastTransferSourceCopyTo, state S2326");
                                        this.Manager.Comment("reaching state \'S2566\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1910;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1910 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2806\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1910, "return of Release, state S2806");
                                        this.Manager.Comment("reaching state \'S2998\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1911;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1911 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3190\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1911, "return of Release, state S3190");
                                        this.Manager.Comment("reaching state \'S3382\'");
                                        goto label200;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label200:
;
                                    goto label201;
                                }
                                throw new InvalidOperationException("never reached");
                            label201:
;
                                goto label205;
                            }
                            if ((temp1936 == 1)) {
                                this.Manager.Comment("reaching state \'S1364\'");
                                bool temp1914;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1914);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1914);
                                this.Manager.Comment("reaching state \'S1484\'");
                                int temp1935 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker74)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker77)));
                                if ((temp1935 == 0)) {
                                    this.Manager.Comment("reaching state \'S1645\'");
                                    bool temp1915;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1915);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1915);
                                    this.Manager.Comment("reaching state \'S1813\'");
                                    int temp1924 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker75)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker76)));
                                    if ((temp1924 == 0)) {
                                        this.Manager.Comment("reaching state \'S2063\'");
                                        int temp1916;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1917;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1917 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1916);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2327\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1916, "copyToHandleIndex of FastTransferSourceCopyTo, state S2327");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1917, "return of FastTransferSourceCopyTo, state S2327");
                                        this.Manager.Comment("reaching state \'S2567\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1918;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1918 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2807\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1918, "return of Release, state S2807");
                                        this.Manager.Comment("reaching state \'S2999\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1919;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1919 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3191\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1919, "return of Release, state S3191");
                                        this.Manager.Comment("reaching state \'S3383\'");
                                        goto label202;
                                    }
                                    if ((temp1924 == 1)) {
                                        this.Manager.Comment("reaching state \'S2064\'");
                                        int temp1920;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1921;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1921 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1920);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2328\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1920, "copyToHandleIndex of FastTransferSourceCopyTo, state S2328");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1921, "return of FastTransferSourceCopyTo, state S2328");
                                        this.Manager.Comment("reaching state \'S2568\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1922;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1922 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2808\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1922, "return of Release, state S2808");
                                        this.Manager.Comment("reaching state \'S3000\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1923;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1923 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3192\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1923, "return of Release, state S3192");
                                        this.Manager.Comment("reaching state \'S3384\'");
                                        goto label202;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label202:
;
                                    goto label204;
                                }
                                if ((temp1935 == 1)) {
                                    this.Manager.Comment("reaching state \'S1646\'");
                                    bool temp1925;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1925);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1925);
                                    this.Manager.Comment("reaching state \'S1814\'");
                                    int temp1934 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker78)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker79)));
                                    if ((temp1934 == 0)) {
                                        this.Manager.Comment("reaching state \'S2065\'");
                                        int temp1926;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1927;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1927 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1926);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2329\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1926, "copyToHandleIndex of FastTransferSourceCopyTo, state S2329");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1927, "return of FastTransferSourceCopyTo, state S2329");
                                        this.Manager.Comment("reaching state \'S2569\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1928;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1928 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2809\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1928, "return of Release, state S2809");
                                        this.Manager.Comment("reaching state \'S3001\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1929;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1929 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3193\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1929, "return of Release, state S3193");
                                        this.Manager.Comment("reaching state \'S3385\'");
                                        goto label203;
                                    }
                                    if ((temp1934 == 1)) {
                                        this.Manager.Comment("reaching state \'S2066\'");
                                        int temp1930;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1931;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1931 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1930);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2330\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1930, "copyToHandleIndex of FastTransferSourceCopyTo, state S2330");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1931, "return of FastTransferSourceCopyTo, state S2330");
                                        this.Manager.Comment("reaching state \'S2570\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1932;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1932 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2810\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1932, "return of Release, state S2810");
                                        this.Manager.Comment("reaching state \'S3002\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1933;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1933 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3194\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1933, "return of Release, state S3194");
                                        this.Manager.Comment("reaching state \'S3386\'");
                                        goto label203;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label203:
;
                                    goto label204;
                                }
                                throw new InvalidOperationException("never reached");
                            label204:
;
                                goto label205;
                            }
                            throw new InvalidOperationException("never reached");
                        label205:
;
                            goto label213;
                        }
                        if ((temp1996 == 1)) {
                            this.Manager.Comment("reaching state \'S192\'");
                            int temp1937;
                            int temp1938;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1939;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp1939 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1937, out temp1938);
                            this.Manager.Comment("reaching state \'S264\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1937, "logonHandleIndex of Logon, state S264");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1938, "inboxFolderIdIndex of Logon, state S264");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1939, "return of Logon, state S264");
                            this.Manager.Comment("reaching state \'S336\'");
                            int temp1940;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1941;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp1941 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp1940);
                            this.Manager.Comment("reaching state \'S408\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1940, "folderHandleIndex of OpenFolder, state S408");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1941, "return of OpenFolder, state S408");
                            this.Manager.Comment("reaching state \'S480\'");
                            int temp1942;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1943;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp1943 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp1942);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S552\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp1942, "messageHandleIndex of CreateMessage, state S552");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1943, "return of CreateMessage, state S552");
                            this.Manager.Comment("reaching state \'S624\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1944;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp1944 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S696\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1944, "return of SetProperties, state S696");
                            this.Manager.Comment("reaching state \'S768\'");
                            int temp1945;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1946;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp1946 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp1945);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S840\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp1945, "messageIdIndex of SaveChangesMessage, state S840");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1946, "return of SaveChangesMessage, state S840");
                            this.Manager.Comment("reaching state \'S912\'");
                            int temp1947;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1948;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp1948 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp1947);
                            this.Manager.Comment("reaching state \'S984\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp1947, "attachmentHandleIndex of CreateAttachment, state S984");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1948, "return of CreateAttachment, state S984");
                            this.Manager.Comment("reaching state \'S1056\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1949;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp1949 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1128\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1949, "return of SaveChangesAttachment, state S1128");
                            this.Manager.Comment("reaching state \'S1200\'");
                            bool temp1950;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp1950);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1950);
                            this.Manager.Comment("reaching state \'S1272\'");
                            int temp1995 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker81)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker88)));
                            if ((temp1995 == 0)) {
                                this.Manager.Comment("reaching state \'S1365\'");
                                bool temp1951;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1951);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1951);
                                this.Manager.Comment("reaching state \'S1485\'");
                                int temp1972 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker82)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker85)));
                                if ((temp1972 == 0)) {
                                    this.Manager.Comment("reaching state \'S1647\'");
                                    bool temp1952;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1952);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1952);
                                    this.Manager.Comment("reaching state \'S1815\'");
                                    int temp1961 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker83)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker84)));
                                    if ((temp1961 == 0)) {
                                        this.Manager.Comment("reaching state \'S2067\'");
                                        int temp1953;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1954;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1954 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1953);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2331\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1953, "copyToHandleIndex of FastTransferSourceCopyTo, state S2331");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1954, "return of FastTransferSourceCopyTo, state S2331");
                                        this.Manager.Comment("reaching state \'S2571\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1955;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1955 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2811\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1955, "return of Release, state S2811");
                                        this.Manager.Comment("reaching state \'S3003\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1956;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1956 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3195\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1956, "return of Release, state S3195");
                                        this.Manager.Comment("reaching state \'S3387\'");
                                        goto label206;
                                    }
                                    if ((temp1961 == 1)) {
                                        this.Manager.Comment("reaching state \'S2068\'");
                                        int temp1957;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1958;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1958 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1957);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2332\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1957, "copyToHandleIndex of FastTransferSourceCopyTo, state S2332");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1958, "return of FastTransferSourceCopyTo, state S2332");
                                        this.Manager.Comment("reaching state \'S2572\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1959;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1959 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2812\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1959, "return of Release, state S2812");
                                        this.Manager.Comment("reaching state \'S3004\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1960;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1960 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3196\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1960, "return of Release, state S3196");
                                        this.Manager.Comment("reaching state \'S3388\'");
                                        goto label206;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label206:
;
                                    goto label208;
                                }
                                if ((temp1972 == 1)) {
                                    this.Manager.Comment("reaching state \'S1648\'");
                                    bool temp1962;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1962);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1962);
                                    this.Manager.Comment("reaching state \'S1816\'");
                                    int temp1971 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker86)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker87)));
                                    if ((temp1971 == 0)) {
                                        this.Manager.Comment("reaching state \'S2069\'");
                                        int temp1963;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1964;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1964 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1963);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2333\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1963, "copyToHandleIndex of FastTransferSourceCopyTo, state S2333");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1964, "return of FastTransferSourceCopyTo, state S2333");
                                        this.Manager.Comment("reaching state \'S2573\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1965;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1965 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2813\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1965, "return of Release, state S2813");
                                        this.Manager.Comment("reaching state \'S3005\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1966;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1966 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3197\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1966, "return of Release, state S3197");
                                        this.Manager.Comment("reaching state \'S3389\'");
                                        goto label207;
                                    }
                                    if ((temp1971 == 1)) {
                                        this.Manager.Comment("reaching state \'S2070\'");
                                        int temp1967;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1968;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1968 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1967);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2334\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp1967, "copyToHandleIndex of FastTransferSourceCopyTo, state S2334");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1968, "return of FastTransferSourceCopyTo, state S2334");
                                        this.Manager.Comment("reaching state \'S2574\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1969;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1969 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2814\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1969, "return of Release, state S2814");
                                        this.Manager.Comment("reaching state \'S3006\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1970;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp1970 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3198\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1970, "return of Release, state S3198");
                                        this.Manager.Comment("reaching state \'S3390\'");
                                        goto label207;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label207:
;
                                    goto label208;
                                }
                                throw new InvalidOperationException("never reached");
                            label208:
;
                                goto label212;
                            }
                            if ((temp1995 == 1)) {
                                this.Manager.Comment("reaching state \'S1366\'");
                                bool temp1973;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp1973);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1973);
                                this.Manager.Comment("reaching state \'S1486\'");
                                int temp1994 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker89)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker92)));
                                if ((temp1994 == 0)) {
                                    this.Manager.Comment("reaching state \'S1649\'");
                                    bool temp1974;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1974);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1974);
                                    this.Manager.Comment("reaching state \'S1817\'");
                                    int temp1983 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker90)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker91)));
                                    if ((temp1983 == 0)) {
                                        this.Manager.Comment("reaching state \'S2071\'");
                                        int temp1975;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1976;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1976 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1975);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2335\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1975, "copyToHandleIndex of FastTransferSourceCopyTo, state S2335");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1976, "return of FastTransferSourceCopyTo, state S2335");
                                        this.Manager.Comment("reaching state \'S2575\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1977;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1977 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2815\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1977, "return of Release, state S2815");
                                        this.Manager.Comment("reaching state \'S3007\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1978;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1978 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3199\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1978, "return of Release, state S3199");
                                        this.Manager.Comment("reaching state \'S3391\'");
                                        goto label209;
                                    }
                                    if ((temp1983 == 1)) {
                                        this.Manager.Comment("reaching state \'S2072\'");
                                        int temp1979;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1980;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1980 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1979);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2336\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1979, "copyToHandleIndex of FastTransferSourceCopyTo, state S2336");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1980, "return of FastTransferSourceCopyTo, state S2336");
                                        this.Manager.Comment("reaching state \'S2576\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1981;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1981 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2816\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1981, "return of Release, state S2816");
                                        this.Manager.Comment("reaching state \'S3008\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1982;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1982 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3200\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1982, "return of Release, state S3200");
                                        this.Manager.Comment("reaching state \'S3392\'");
                                        goto label209;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label209:
;
                                    goto label211;
                                }
                                if ((temp1994 == 1)) {
                                    this.Manager.Comment("reaching state \'S1650\'");
                                    bool temp1984;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp1984);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1984);
                                    this.Manager.Comment("reaching state \'S1818\'");
                                    int temp1993 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker93)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker94)));
                                    if ((temp1993 == 0)) {
                                        this.Manager.Comment("reaching state \'S2073\'");
                                        int temp1985;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1986;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1986 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1985);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2337\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1985, "copyToHandleIndex of FastTransferSourceCopyTo, state S2337");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1986, "return of FastTransferSourceCopyTo, state S2337");
                                        this.Manager.Comment("reaching state \'S2577\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1987;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1987 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2817\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1987, "return of Release, state S2817");
                                        this.Manager.Comment("reaching state \'S3009\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1988;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1988 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3201\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1988, "return of Release, state S3201");
                                        this.Manager.Comment("reaching state \'S3393\'");
                                        goto label210;
                                    }
                                    if ((temp1993 == 1)) {
                                        this.Manager.Comment("reaching state \'S2074\'");
                                        int temp1989;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1990;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp1990 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp1989);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2338\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp1989, "copyToHandleIndex of FastTransferSourceCopyTo, state S2338");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp1990, "return of FastTransferSourceCopyTo, state S2338");
                                        this.Manager.Comment("reaching state \'S2578\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1991;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp1991 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2818\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1991, "return of Release, state S2818");
                                        this.Manager.Comment("reaching state \'S3010\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp1992;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp1992 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3202\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp1992, "return of Release, state S3202");
                                        this.Manager.Comment("reaching state \'S3394\'");
                                        goto label210;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label210:
;
                                    goto label211;
                                }
                                throw new InvalidOperationException("never reached");
                            label211:
;
                                goto label212;
                            }
                            throw new InvalidOperationException("never reached");
                        label212:
;
                            goto label213;
                        }
                        throw new InvalidOperationException("never reached");
                    label213:
;
                        goto label229;
                    }
                    if ((temp2117 == 1)) {
                        this.Manager.Comment("reaching state \'S110\'");
                        bool temp1997;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp1997);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp1997);
                        this.Manager.Comment("reaching state \'S146\'");
                        int temp2116 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker96)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker111)));
                        if ((temp2116 == 0)) {
                            this.Manager.Comment("reaching state \'S193\'");
                            int temp1998;
                            int temp1999;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2000;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2000 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1998, out temp1999);
                            this.Manager.Comment("reaching state \'S265\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1998, "logonHandleIndex of Logon, state S265");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1999, "inboxFolderIdIndex of Logon, state S265");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2000, "return of Logon, state S265");
                            this.Manager.Comment("reaching state \'S337\'");
                            int temp2001;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2002;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2002 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2001);
                            this.Manager.Comment("reaching state \'S409\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2001, "folderHandleIndex of OpenFolder, state S409");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2002, "return of OpenFolder, state S409");
                            this.Manager.Comment("reaching state \'S481\'");
                            int temp2003;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2004;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2004 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2003);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S553\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2003, "messageHandleIndex of CreateMessage, state S553");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2004, "return of CreateMessage, state S553");
                            this.Manager.Comment("reaching state \'S625\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2005;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2005 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S697\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2005, "return of SetProperties, state S697");
                            this.Manager.Comment("reaching state \'S769\'");
                            int temp2006;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2007;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2007 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2006);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S841\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2006, "messageIdIndex of SaveChangesMessage, state S841");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2007, "return of SaveChangesMessage, state S841");
                            this.Manager.Comment("reaching state \'S913\'");
                            int temp2008;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2009;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2009 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2008);
                            this.Manager.Comment("reaching state \'S985\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2008, "attachmentHandleIndex of CreateAttachment, state S985");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2009, "return of CreateAttachment, state S985");
                            this.Manager.Comment("reaching state \'S1057\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2010;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2010 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1129\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2010, "return of SaveChangesAttachment, state S1129");
                            this.Manager.Comment("reaching state \'S1201\'");
                            bool temp2011;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp2011);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2011);
                            this.Manager.Comment("reaching state \'S1273\'");
                            int temp2056 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker97)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker104)));
                            if ((temp2056 == 0)) {
                                this.Manager.Comment("reaching state \'S1367\'");
                                bool temp2012;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp2012);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2012);
                                this.Manager.Comment("reaching state \'S1487\'");
                                int temp2033 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker98)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker101)));
                                if ((temp2033 == 0)) {
                                    this.Manager.Comment("reaching state \'S1651\'");
                                    bool temp2013;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp2013);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2013);
                                    this.Manager.Comment("reaching state \'S1819\'");
                                    int temp2022 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker99)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker100)));
                                    if ((temp2022 == 0)) {
                                        this.Manager.Comment("reaching state \'S2075\'");
                                        int temp2014;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2015;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2015 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2014);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2339\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2014, "copyToHandleIndex of FastTransferSourceCopyTo, state S2339");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2015, "return of FastTransferSourceCopyTo, state S2339");
                                        this.Manager.Comment("reaching state \'S2579\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2016;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2016 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2819\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2016, "return of Release, state S2819");
                                        this.Manager.Comment("reaching state \'S3011\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2017;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp2017 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3203\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2017, "return of Release, state S3203");
                                        this.Manager.Comment("reaching state \'S3395\'");
                                        goto label214;
                                    }
                                    if ((temp2022 == 1)) {
                                        this.Manager.Comment("reaching state \'S2076\'");
                                        int temp2018;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2019;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2019 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2018);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2340\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2018, "copyToHandleIndex of FastTransferSourceCopyTo, state S2340");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2019, "return of FastTransferSourceCopyTo, state S2340");
                                        this.Manager.Comment("reaching state \'S2580\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2020;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2020 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2820\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2020, "return of Release, state S2820");
                                        this.Manager.Comment("reaching state \'S3012\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2021;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp2021 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3204\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2021, "return of Release, state S3204");
                                        this.Manager.Comment("reaching state \'S3396\'");
                                        goto label214;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label214:
;
                                    goto label216;
                                }
                                if ((temp2033 == 1)) {
                                    this.Manager.Comment("reaching state \'S1652\'");
                                    bool temp2023;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp2023);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2023);
                                    this.Manager.Comment("reaching state \'S1820\'");
                                    int temp2032 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker102)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker103)));
                                    if ((temp2032 == 0)) {
                                        this.Manager.Comment("reaching state \'S2077\'");
                                        int temp2024;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2025;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2025 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2024);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2341\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2024, "copyToHandleIndex of FastTransferSourceCopyTo, state S2341");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2025, "return of FastTransferSourceCopyTo, state S2341");
                                        this.Manager.Comment("reaching state \'S2581\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2026;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2026 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2821\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2026, "return of Release, state S2821");
                                        this.Manager.Comment("reaching state \'S3013\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2027;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp2027 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3205\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2027, "return of Release, state S3205");
                                        this.Manager.Comment("reaching state \'S3397\'");
                                        goto label215;
                                    }
                                    if ((temp2032 == 1)) {
                                        this.Manager.Comment("reaching state \'S2078\'");
                                        int temp2028;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2029;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2029 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2028);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2342\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2028, "copyToHandleIndex of FastTransferSourceCopyTo, state S2342");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2029, "return of FastTransferSourceCopyTo, state S2342");
                                        this.Manager.Comment("reaching state \'S2582\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2030;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2030 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2822\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2030, "return of Release, state S2822");
                                        this.Manager.Comment("reaching state \'S3014\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2031;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp2031 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3206\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2031, "return of Release, state S3206");
                                        this.Manager.Comment("reaching state \'S3398\'");
                                        goto label215;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label215:
;
                                    goto label216;
                                }
                                throw new InvalidOperationException("never reached");
                            label216:
;
                                goto label220;
                            }
                            if ((temp2056 == 1)) {
                                this.Manager.Comment("reaching state \'S1368\'");
                                bool temp2034;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp2034);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2034);
                                this.Manager.Comment("reaching state \'S1488\'");
                                int temp2055 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker105)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker108)));
                                if ((temp2055 == 0)) {
                                    this.Manager.Comment("reaching state \'S1653\'");
                                    bool temp2035;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp2035);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2035);
                                    this.Manager.Comment("reaching state \'S1821\'");
                                    int temp2044 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker106)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker107)));
                                    if ((temp2044 == 0)) {
                                        this.Manager.Comment("reaching state \'S2079\'");
                                        int temp2036;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2037;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2037 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2036);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2343\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2036, "copyToHandleIndex of FastTransferSourceCopyTo, state S2343");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp2037, "return of FastTransferSourceCopyTo, state S2343");
                                        this.Manager.Comment("reaching state \'S2583\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2038;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2038 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2823\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2038, "return of Release, state S2823");
                                        this.Manager.Comment("reaching state \'S3015\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2039;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp2039 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3207\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2039, "return of Release, state S3207");
                                        this.Manager.Comment("reaching state \'S3399\'");
                                        goto label217;
                                    }
                                    if ((temp2044 == 1)) {
                                        this.Manager.Comment("reaching state \'S2080\'");
                                        int temp2040;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2041;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2041 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2040);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2344\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2040, "copyToHandleIndex of FastTransferSourceCopyTo, state S2344");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp2041, "return of FastTransferSourceCopyTo, state S2344");
                                        this.Manager.Comment("reaching state \'S2584\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2042;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2042 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2824\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2042, "return of Release, state S2824");
                                        this.Manager.Comment("reaching state \'S3016\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2043;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp2043 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3208\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2043, "return of Release, state S3208");
                                        this.Manager.Comment("reaching state \'S3400\'");
                                        goto label217;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label217:
;
                                    goto label219;
                                }
                                if ((temp2055 == 1)) {
                                    this.Manager.Comment("reaching state \'S1654\'");
                                    bool temp2045;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp2045);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2045);
                                    this.Manager.Comment("reaching state \'S1822\'");
                                    int temp2054 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker109)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker110)));
                                    if ((temp2054 == 0)) {
                                        this.Manager.Comment("reaching state \'S2081\'");
                                        int temp2046;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2047;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2047 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2046);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2345\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2046, "copyToHandleIndex of FastTransferSourceCopyTo, state S2345");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp2047, "return of FastTransferSourceCopyTo, state S2345");
                                        this.Manager.Comment("reaching state \'S2585\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2048;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2048 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2825\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2048, "return of Release, state S2825");
                                        this.Manager.Comment("reaching state \'S3017\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2049;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp2049 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3209\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2049, "return of Release, state S3209");
                                        this.Manager.Comment("reaching state \'S3401\'");
                                        goto label218;
                                    }
                                    if ((temp2054 == 1)) {
                                        this.Manager.Comment("reaching state \'S2082\'");
                                        int temp2050;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2051;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2051 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2050);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2346\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2050, "copyToHandleIndex of FastTransferSourceCopyTo, state S2346");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp2051, "return of FastTransferSourceCopyTo, state S2346");
                                        this.Manager.Comment("reaching state \'S2586\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2052;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2052 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2826\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2052, "return of Release, state S2826");
                                        this.Manager.Comment("reaching state \'S3018\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2053;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp2053 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3210\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2053, "return of Release, state S3210");
                                        this.Manager.Comment("reaching state \'S3402\'");
                                        goto label218;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label218:
;
                                    goto label219;
                                }
                                throw new InvalidOperationException("never reached");
                            label219:
;
                                goto label220;
                            }
                            throw new InvalidOperationException("never reached");
                        label220:
;
                            goto label228;
                        }
                        if ((temp2116 == 1)) {
                            this.Manager.Comment("reaching state \'S194\'");
                            int temp2057;
                            int temp2058;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2059;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2059 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2057, out temp2058);
                            this.Manager.Comment("reaching state \'S266\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2057, "logonHandleIndex of Logon, state S266");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2058, "inboxFolderIdIndex of Logon, state S266");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2059, "return of Logon, state S266");
                            this.Manager.Comment("reaching state \'S338\'");
                            int temp2060;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2061;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2061 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2060);
                            this.Manager.Comment("reaching state \'S410\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2060, "folderHandleIndex of OpenFolder, state S410");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2061, "return of OpenFolder, state S410");
                            this.Manager.Comment("reaching state \'S482\'");
                            int temp2062;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2063;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2063 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2062);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S554\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2062, "messageHandleIndex of CreateMessage, state S554");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2063, "return of CreateMessage, state S554");
                            this.Manager.Comment("reaching state \'S626\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2064;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2064 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S698\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2064, "return of SetProperties, state S698");
                            this.Manager.Comment("reaching state \'S770\'");
                            int temp2065;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2066;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2066 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2065);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S842\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2065, "messageIdIndex of SaveChangesMessage, state S842");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2066, "return of SaveChangesMessage, state S842");
                            this.Manager.Comment("reaching state \'S914\'");
                            int temp2067;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2068;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2068 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2067);
                            this.Manager.Comment("reaching state \'S986\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2067, "attachmentHandleIndex of CreateAttachment, state S986");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2068, "return of CreateAttachment, state S986");
                            this.Manager.Comment("reaching state \'S1058\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2069;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2069 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1130\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2069, "return of SaveChangesAttachment, state S1130");
                            this.Manager.Comment("reaching state \'S1202\'");
                            bool temp2070;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp2070);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2070);
                            this.Manager.Comment("reaching state \'S1274\'");
                            int temp2115 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker112)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker119)));
                            if ((temp2115 == 0)) {
                                this.Manager.Comment("reaching state \'S1369\'");
                                bool temp2071;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp2071);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2071);
                                this.Manager.Comment("reaching state \'S1489\'");
                                int temp2092 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker113)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker116)));
                                if ((temp2092 == 0)) {
                                    this.Manager.Comment("reaching state \'S1655\'");
                                    bool temp2072;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp2072);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2072);
                                    this.Manager.Comment("reaching state \'S1823\'");
                                    int temp2081 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker114)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker115)));
                                    if ((temp2081 == 0)) {
                                        this.Manager.Comment("reaching state \'S2083\'");
                                        int temp2073;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2074;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2074 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2073);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2347\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2073, "copyToHandleIndex of FastTransferSourceCopyTo, state S2347");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2074, "return of FastTransferSourceCopyTo, state S2347");
                                        this.Manager.Comment("reaching state \'S2587\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2075;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2075 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2827\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2075, "return of Release, state S2827");
                                        this.Manager.Comment("reaching state \'S3019\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2076;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp2076 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3211\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2076, "return of Release, state S3211");
                                        this.Manager.Comment("reaching state \'S3403\'");
                                        goto label221;
                                    }
                                    if ((temp2081 == 1)) {
                                        this.Manager.Comment("reaching state \'S2084\'");
                                        int temp2077;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2078;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2078 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2077);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2348\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2077, "copyToHandleIndex of FastTransferSourceCopyTo, state S2348");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2078, "return of FastTransferSourceCopyTo, state S2348");
                                        this.Manager.Comment("reaching state \'S2588\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2079;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2079 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2828\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2079, "return of Release, state S2828");
                                        this.Manager.Comment("reaching state \'S3020\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2080;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp2080 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3212\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2080, "return of Release, state S3212");
                                        this.Manager.Comment("reaching state \'S3404\'");
                                        goto label221;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label221:
;
                                    goto label223;
                                }
                                if ((temp2092 == 1)) {
                                    this.Manager.Comment("reaching state \'S1656\'");
                                    bool temp2082;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp2082);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2082);
                                    this.Manager.Comment("reaching state \'S1824\'");
                                    int temp2091 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker117)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker118)));
                                    if ((temp2091 == 0)) {
                                        this.Manager.Comment("reaching state \'S2085\'");
                                        int temp2083;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2084;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2084 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2083);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2349\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2083, "copyToHandleIndex of FastTransferSourceCopyTo, state S2349");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2084, "return of FastTransferSourceCopyTo, state S2349");
                                        this.Manager.Comment("reaching state \'S2589\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2085;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2085 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2829\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2085, "return of Release, state S2829");
                                        this.Manager.Comment("reaching state \'S3021\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2086;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp2086 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3213\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2086, "return of Release, state S3213");
                                        this.Manager.Comment("reaching state \'S3405\'");
                                        goto label222;
                                    }
                                    if ((temp2091 == 1)) {
                                        this.Manager.Comment("reaching state \'S2086\'");
                                        int temp2087;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2088;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2088 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2087);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                                        this.Manager.Comment("reaching state \'S2350\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2087, "copyToHandleIndex of FastTransferSourceCopyTo, state S2350");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2088, "return of FastTransferSourceCopyTo, state S2350");
                                        this.Manager.Comment("reaching state \'S2590\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2089;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2089 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2830\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2089, "return of Release, state S2830");
                                        this.Manager.Comment("reaching state \'S3022\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2090;
                                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                                        temp2090 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                        this.Manager.Comment("reaching state \'S3214\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2090, "return of Release, state S3214");
                                        this.Manager.Comment("reaching state \'S3406\'");
                                        goto label222;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label222:
;
                                    goto label223;
                                }
                                throw new InvalidOperationException("never reached");
                            label223:
;
                                goto label227;
                            }
                            if ((temp2115 == 1)) {
                                this.Manager.Comment("reaching state \'S1370\'");
                                bool temp2093;
                                this.Manager.Comment("executing step \'call CheckRequirementEnabled(211501,out _)\'");
                                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211501, out temp2093);
                                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2093);
                                this.Manager.Comment("reaching state \'S1490\'");
                                int temp2114 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker120)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker123)));
                                if ((temp2114 == 0)) {
                                    this.Manager.Comment("reaching state \'S1657\'");
                                    bool temp2094;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp2094);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2094);
                                    this.Manager.Comment("reaching state \'S1825\'");
                                    int temp2103 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker121)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker122)));
                                    if ((temp2103 == 0)) {
                                        this.Manager.Comment("reaching state \'S2087\'");
                                        int temp2095;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2096;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2096 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2095);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2351\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2095, "copyToHandleIndex of FastTransferSourceCopyTo, state S2351");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp2096, "return of FastTransferSourceCopyTo, state S2351");
                                        this.Manager.Comment("reaching state \'S2591\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2097;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2097 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2831\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2097, "return of Release, state S2831");
                                        this.Manager.Comment("reaching state \'S3023\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2098;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp2098 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3215\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2098, "return of Release, state S3215");
                                        this.Manager.Comment("reaching state \'S3407\'");
                                        goto label224;
                                    }
                                    if ((temp2103 == 1)) {
                                        this.Manager.Comment("reaching state \'S2088\'");
                                        int temp2099;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2100;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2100 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2099);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2352\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2099, "copyToHandleIndex of FastTransferSourceCopyTo, state S2352");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp2100, "return of FastTransferSourceCopyTo, state S2352");
                                        this.Manager.Comment("reaching state \'S2592\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2101;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2101 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2832\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2101, "return of Release, state S2832");
                                        this.Manager.Comment("reaching state \'S3024\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2102;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp2102 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3216\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2102, "return of Release, state S3216");
                                        this.Manager.Comment("reaching state \'S3408\'");
                                        goto label224;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label224:
;
                                    goto label226;
                                }
                                if ((temp2114 == 1)) {
                                    this.Manager.Comment("reaching state \'S1658\'");
                                    bool temp2104;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3118003,out _)\'");
                                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3118003, out temp2104);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2104);
                                    this.Manager.Comment("reaching state \'S1826\'");
                                    int temp2113 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker124)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker125)));
                                    if ((temp2113 == 0)) {
                                        this.Manager.Comment("reaching state \'S2089\'");
                                        int temp2105;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2106;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Unicod" +
                                                "e,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidTagMe" +
                                                "ssageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2106 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2105);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2353\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2105, "copyToHandleIndex of FastTransferSourceCopyTo, state S2353");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp2106, "return of FastTransferSourceCopyTo, state S2353");
                                        this.Manager.Comment("reaching state \'S2593\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2107;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2107 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2833\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2107, "return of Release, state S2833");
                                        this.Manager.Comment("reaching state \'S3025\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2108;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp2108 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3217\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2108, "return of Release, state S3217");
                                        this.Manager.Comment("reaching state \'S3409\'");
                                        goto label225;
                                    }
                                    if ((temp2113 == 1)) {
                                        this.Manager.Comment("reaching state \'S2090\'");
                                        int temp2109;
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2110;
                                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,MessageHandle,False,Move,Recove" +
                                                "rMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"PidT" +
                                                "agMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                        temp2110 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                        "Rep"}, new object[] {
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagAccess",
                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                "Head",
                                                                                "Tail"}, new object[] {
                                                                                "PidTagFolderId",
                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                            "Head",
                                                                                            "Tail"}, new object[] {
                                                                                            "PidTagComment",
                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                        "Head",
                                                                                                        "Tail"}, new object[] {
                                                                                                        "PidTagDisplayName",
                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                    "Head",
                                                                                                                    "Tail"}, new object[] {
                                                                                                                    "PidTagMessageRecipients",
                                                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                "Head",
                                                                                                                                "Tail"}, new object[] {
                                                                                                                                "PidTagMessageAttachments",
                                                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                            "Head",
                                                                                                                                            "Tail"}, new object[] {
                                                                                                                                            "PidTagBody",
                                                                                                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2109);
                                        this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                                        this.Manager.Comment("reaching state \'S2354\'");
                                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2109, "copyToHandleIndex of FastTransferSourceCopyTo, state S2354");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp2110, "return of FastTransferSourceCopyTo, state S2354");
                                        this.Manager.Comment("reaching state \'S2594\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2111;
                                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                                        temp2111 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                        this.Manager.Comment("reaching state \'S2834\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2111, "return of Release, state S2834");
                                        this.Manager.Comment("reaching state \'S3026\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2112;
                                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                        temp2112 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                        this.Manager.Comment("reaching state \'S3218\'");
                                        this.Manager.Comment("checking step \'return Release/Success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2112, "return of Release, state S3218");
                                        this.Manager.Comment("reaching state \'S3410\'");
                                        goto label225;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label225:
;
                                    goto label226;
                                }
                                throw new InvalidOperationException("never reached");
                            label226:
;
                                goto label227;
                            }
                            throw new InvalidOperationException("never reached");
                        label227:
;
                            goto label228;
                        }
                        throw new InvalidOperationException("never reached");
                    label228:
;
                        goto label229;
                    }
                    throw new InvalidOperationException("never reached");
                label229:
;
                    goto label230;
                }
                throw new InvalidOperationException("never reached");
            label230:
;
                goto label231;
            }
            if ((temp2119 == 1)) {
                this.Manager.Comment("reaching state \'S23\'");
                goto label231;
            }
            throw new InvalidOperationException("never reached");
        label231:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S56");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S85");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S143");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1267");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1475");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1795");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1795");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1475");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1796");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1796");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1267");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1476");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1797");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1797");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker14(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1476");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker15(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1798");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker16(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1798");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker17(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S143");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker18(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1268");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker19(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1477");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker20(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1799");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker21(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1799");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker22(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1477");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker23(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1800");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker24(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1800");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker25(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1268");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker26(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1478");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker27(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1801");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker28(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1801");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker29(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1478");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker30(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1802");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker31(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1802");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker32(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S85");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker33(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S144");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker34(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1269");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker35(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1479");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker36(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1803");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker37(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1803");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker38(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1479");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker39(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1804");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker40(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1804");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker41(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1269");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker42(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1480");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker43(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1805");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker44(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1805");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker45(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1480");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker46(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1806");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker47(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1806");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker48(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S144");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker49(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1270");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker50(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1481");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker51(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1807");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker52(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1807");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker53(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1481");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker54(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1808");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker55(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1808");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker56(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1270");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker57(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1482");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker58(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1809");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker59(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1809");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker60(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1482");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker61(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1810");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker62(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1810");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker63(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S56");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker64(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S86");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker65(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S145");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker66(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1271");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker67(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1483");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker68(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1811");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker69(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1811");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker70(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1483");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker71(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1812");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker72(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1812");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker73(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1271");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker74(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1484");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker75(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1813");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker76(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1813");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker77(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1484");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker78(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1814");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker79(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1814");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker80(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S145");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker81(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1272");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker82(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1485");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker83(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1815");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker84(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1815");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker85(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1485");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker86(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1816");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker87(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1816");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker88(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1272");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker89(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1486");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker90(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1817");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker91(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1817");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker92(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1486");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker93(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1818");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker94(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1818");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker95(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S86");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker96(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S146");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker97(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1273");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker98(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1487");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker99(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1819");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker100(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1819");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker101(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1487");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker102(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1820");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker103(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1820");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker104(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1273");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker105(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1488");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker106(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1821");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker107(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1821");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker108(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1488");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker109(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1822");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker110(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1822");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker111(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S146");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker112(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1274");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker113(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1489");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker114(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1823");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker115(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1823");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker116(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1489");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker117(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1824");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker118(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1824");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker119(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1274");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker120(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1490");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker121(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1825");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker122(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1825");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker123(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1490");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker124(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1826");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckRequirementEnabledChecker125(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1826");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite6CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp2120;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp2120);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp2120);
            this.Manager.Comment("reaching state \'S7\'");
            int temp2319 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp2319 == 0)) {
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S39\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S48\'");
                bool temp2121;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2117002,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2117002, out temp2121);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2121);
                this.Manager.Comment("reaching state \'S57\'");
                int temp2318 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker15)));
                if ((temp2318 == 0)) {
                    this.Manager.Comment("reaching state \'S69\'");
                    bool temp2122;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp2122);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2122);
                    this.Manager.Comment("reaching state \'S87\'");
                    int temp2219 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker1)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker8)));
                    if ((temp2219 == 0)) {
                        this.Manager.Comment("reaching state \'S111\'");
                        bool temp2123;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp2123);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2123);
                        this.Manager.Comment("reaching state \'S147\'");
                        int temp2170 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker2)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker5)));
                        if ((temp2170 == 0)) {
                            this.Manager.Comment("reaching state \'S195\'");
                            int temp2124;
                            int temp2125;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2126;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2126 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2124, out temp2125);
                            this.Manager.Comment("reaching state \'S267\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2124, "logonHandleIndex of Logon, state S267");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2125, "inboxFolderIdIndex of Logon, state S267");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2126, "return of Logon, state S267");
                            this.Manager.Comment("reaching state \'S339\'");
                            int temp2127;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2128;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2128 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2127);
                            this.Manager.Comment("reaching state \'S411\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2127, "folderHandleIndex of OpenFolder, state S411");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2128, "return of OpenFolder, state S411");
                            this.Manager.Comment("reaching state \'S483\'");
                            int temp2129;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2130;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2130 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2129);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S555\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2129, "messageHandleIndex of CreateMessage, state S555");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2130, "return of CreateMessage, state S555");
                            this.Manager.Comment("reaching state \'S627\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2131;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2131 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S699\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2131, "return of SetProperties, state S699");
                            this.Manager.Comment("reaching state \'S771\'");
                            int temp2132;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2133;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2133 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2132);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S843\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2132, "messageIdIndex of SaveChangesMessage, state S843");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2133, "return of SaveChangesMessage, state S843");
                            this.Manager.Comment("reaching state \'S915\'");
                            int temp2134;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2135;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2135 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2134);
                            this.Manager.Comment("reaching state \'S987\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2134, "attachmentHandleIndex of CreateAttachment, state S987");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2135, "return of CreateAttachment, state S987");
                            this.Manager.Comment("reaching state \'S1059\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2136;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2136 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1131\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2136, "return of SaveChangesAttachment, state S1131");
                            this.Manager.Comment("reaching state \'S1203\'");
                            bool temp2137;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2137);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2137);
                            this.Manager.Comment("reaching state \'S1275\'");
                            int temp2146 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker3)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker4)));
                            if ((temp2146 == 0)) {
                                this.Manager.Comment("reaching state \'S1371\'");
                                int temp2138;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2139;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2139 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2138);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1491\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2138, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1491");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2139, "return of FastTransferSourceCopyProperties, state S1491");
                                this.Manager.Comment("reaching state \'S1659\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2140;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2140 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1827\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2140, "return of Release, state S1827");
                                this.Manager.Comment("reaching state \'S2091\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2141;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2141 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2355\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2141, "return of Release, state S2355");
                                this.Manager.Comment("reaching state \'S2595\'");
                                goto label232;
                            }
                            if ((temp2146 == 1)) {
                                this.Manager.Comment("reaching state \'S1372\'");
                                int temp2142;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2143;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2143 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2142);
                                this.Manager.Comment("reaching state \'S1492\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2142, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1492");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2143, "return of FastTransferSourceCopyProperties, state S1492");
                                this.Manager.Comment("reaching state \'S1660\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2144;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2144 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1828\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2144, "return of Release, state S1828");
                                this.Manager.Comment("reaching state \'S2092\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2145;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2145 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2356\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2145, "return of Release, state S2356");
                                this.Manager.Comment("reaching state \'S2596\'");
                                goto label232;
                            }
                            throw new InvalidOperationException("never reached");
                        label232:
;
                            goto label234;
                        }
                        if ((temp2170 == 1)) {
                            this.Manager.Comment("reaching state \'S196\'");
                            int temp2147;
                            int temp2148;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2149;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2149 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2147, out temp2148);
                            this.Manager.Comment("reaching state \'S268\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2147, "logonHandleIndex of Logon, state S268");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2148, "inboxFolderIdIndex of Logon, state S268");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2149, "return of Logon, state S268");
                            this.Manager.Comment("reaching state \'S340\'");
                            int temp2150;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2151;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2151 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2150);
                            this.Manager.Comment("reaching state \'S412\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2150, "folderHandleIndex of OpenFolder, state S412");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2151, "return of OpenFolder, state S412");
                            this.Manager.Comment("reaching state \'S484\'");
                            int temp2152;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2153;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2153 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2152);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S556\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2152, "messageHandleIndex of CreateMessage, state S556");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2153, "return of CreateMessage, state S556");
                            this.Manager.Comment("reaching state \'S628\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2154;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2154 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S700\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2154, "return of SetProperties, state S700");
                            this.Manager.Comment("reaching state \'S772\'");
                            int temp2155;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2156;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2156 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2155);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S844\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2155, "messageIdIndex of SaveChangesMessage, state S844");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2156, "return of SaveChangesMessage, state S844");
                            this.Manager.Comment("reaching state \'S916\'");
                            int temp2157;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2158;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2158 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2157);
                            this.Manager.Comment("reaching state \'S988\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2157, "attachmentHandleIndex of CreateAttachment, state S988");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2158, "return of CreateAttachment, state S988");
                            this.Manager.Comment("reaching state \'S1060\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2159;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2159 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1132\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2159, "return of SaveChangesAttachment, state S1132");
                            this.Manager.Comment("reaching state \'S1204\'");
                            bool temp2160;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2160);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2160);
                            this.Manager.Comment("reaching state \'S1276\'");
                            int temp2169 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker6)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker7)));
                            if ((temp2169 == 0)) {
                                this.Manager.Comment("reaching state \'S1373\'");
                                int temp2161;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2162;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2162 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2161);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1493\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2161, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1493");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2162, "return of FastTransferSourceCopyProperties, state S1493");
                                this.Manager.Comment("reaching state \'S1661\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2163;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2163 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1829\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2163, "return of Release, state S1829");
                                this.Manager.Comment("reaching state \'S2093\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2164;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2164 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2357\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2164, "return of Release, state S2357");
                                this.Manager.Comment("reaching state \'S2597\'");
                                goto label233;
                            }
                            if ((temp2169 == 1)) {
                                this.Manager.Comment("reaching state \'S1374\'");
                                int temp2165;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2166;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2166 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2165);
                                this.Manager.Comment("reaching state \'S1494\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2165, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1494");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2166, "return of FastTransferSourceCopyProperties, state S1494");
                                this.Manager.Comment("reaching state \'S1662\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2167;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2167 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1830\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2167, "return of Release, state S1830");
                                this.Manager.Comment("reaching state \'S2094\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2168;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2168 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2358\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2168, "return of Release, state S2358");
                                this.Manager.Comment("reaching state \'S2598\'");
                                goto label233;
                            }
                            throw new InvalidOperationException("never reached");
                        label233:
;
                            goto label234;
                        }
                        throw new InvalidOperationException("never reached");
                    label234:
;
                        goto label238;
                    }
                    if ((temp2219 == 1)) {
                        this.Manager.Comment("reaching state \'S112\'");
                        bool temp2171;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp2171);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2171);
                        this.Manager.Comment("reaching state \'S148\'");
                        int temp2218 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker9)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker12)));
                        if ((temp2218 == 0)) {
                            this.Manager.Comment("reaching state \'S197\'");
                            int temp2172;
                            int temp2173;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2174;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2174 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2172, out temp2173);
                            this.Manager.Comment("reaching state \'S269\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2172, "logonHandleIndex of Logon, state S269");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2173, "inboxFolderIdIndex of Logon, state S269");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2174, "return of Logon, state S269");
                            this.Manager.Comment("reaching state \'S341\'");
                            int temp2175;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2176;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2176 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2175);
                            this.Manager.Comment("reaching state \'S413\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2175, "folderHandleIndex of OpenFolder, state S413");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2176, "return of OpenFolder, state S413");
                            this.Manager.Comment("reaching state \'S485\'");
                            int temp2177;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2178;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2178 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2177);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S557\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2177, "messageHandleIndex of CreateMessage, state S557");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2178, "return of CreateMessage, state S557");
                            this.Manager.Comment("reaching state \'S629\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2179;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2179 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S701\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2179, "return of SetProperties, state S701");
                            this.Manager.Comment("reaching state \'S773\'");
                            int temp2180;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2181;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2181 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2180);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S845\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2180, "messageIdIndex of SaveChangesMessage, state S845");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2181, "return of SaveChangesMessage, state S845");
                            this.Manager.Comment("reaching state \'S917\'");
                            int temp2182;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2183;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2183 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2182);
                            this.Manager.Comment("reaching state \'S989\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2182, "attachmentHandleIndex of CreateAttachment, state S989");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2183, "return of CreateAttachment, state S989");
                            this.Manager.Comment("reaching state \'S1061\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2184;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2184 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1133\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2184, "return of SaveChangesAttachment, state S1133");
                            this.Manager.Comment("reaching state \'S1205\'");
                            bool temp2185;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2185);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2185);
                            this.Manager.Comment("reaching state \'S1277\'");
                            int temp2194 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker10)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker11)));
                            if ((temp2194 == 0)) {
                                this.Manager.Comment("reaching state \'S1375\'");
                                int temp2186;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2187;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2187 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2186);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1495\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2186, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1495");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2187, "return of FastTransferSourceCopyProperties, state S1495");
                                this.Manager.Comment("reaching state \'S1663\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2188;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2188 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1831\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2188, "return of Release, state S1831");
                                this.Manager.Comment("reaching state \'S2095\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2189;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2189 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2359\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2189, "return of Release, state S2359");
                                this.Manager.Comment("reaching state \'S2599\'");
                                goto label235;
                            }
                            if ((temp2194 == 1)) {
                                this.Manager.Comment("reaching state \'S1376\'");
                                int temp2190;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2191;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2191 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2190);
                                this.Manager.Comment("reaching state \'S1496\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2190, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1496");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2191, "return of FastTransferSourceCopyProperties, state S1496");
                                this.Manager.Comment("reaching state \'S1664\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2192;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2192 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1832\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2192, "return of Release, state S1832");
                                this.Manager.Comment("reaching state \'S2096\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2193;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2193 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2360\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2193, "return of Release, state S2360");
                                this.Manager.Comment("reaching state \'S2600\'");
                                goto label235;
                            }
                            throw new InvalidOperationException("never reached");
                        label235:
;
                            goto label237;
                        }
                        if ((temp2218 == 1)) {
                            this.Manager.Comment("reaching state \'S198\'");
                            int temp2195;
                            int temp2196;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2197;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2197 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2195, out temp2196);
                            this.Manager.Comment("reaching state \'S270\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2195, "logonHandleIndex of Logon, state S270");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2196, "inboxFolderIdIndex of Logon, state S270");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2197, "return of Logon, state S270");
                            this.Manager.Comment("reaching state \'S342\'");
                            int temp2198;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2199;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2199 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2198);
                            this.Manager.Comment("reaching state \'S414\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2198, "folderHandleIndex of OpenFolder, state S414");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2199, "return of OpenFolder, state S414");
                            this.Manager.Comment("reaching state \'S486\'");
                            int temp2200;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2201;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2201 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2200);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S558\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2200, "messageHandleIndex of CreateMessage, state S558");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2201, "return of CreateMessage, state S558");
                            this.Manager.Comment("reaching state \'S630\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2202;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2202 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S702\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2202, "return of SetProperties, state S702");
                            this.Manager.Comment("reaching state \'S774\'");
                            int temp2203;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2204;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2204 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2203);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S846\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2203, "messageIdIndex of SaveChangesMessage, state S846");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2204, "return of SaveChangesMessage, state S846");
                            this.Manager.Comment("reaching state \'S918\'");
                            int temp2205;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2206;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2206 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2205);
                            this.Manager.Comment("reaching state \'S990\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2205, "attachmentHandleIndex of CreateAttachment, state S990");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2206, "return of CreateAttachment, state S990");
                            this.Manager.Comment("reaching state \'S1062\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2207;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2207 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1134\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2207, "return of SaveChangesAttachment, state S1134");
                            this.Manager.Comment("reaching state \'S1206\'");
                            bool temp2208;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2208);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2208);
                            this.Manager.Comment("reaching state \'S1278\'");
                            int temp2217 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker13)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker14)));
                            if ((temp2217 == 0)) {
                                this.Manager.Comment("reaching state \'S1377\'");
                                int temp2209;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2210;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2210 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2209);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1497\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2209, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1497");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2210, "return of FastTransferSourceCopyProperties, state S1497");
                                this.Manager.Comment("reaching state \'S1665\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2211;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2211 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1833\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2211, "return of Release, state S1833");
                                this.Manager.Comment("reaching state \'S2097\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2212;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2212 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2361\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2212, "return of Release, state S2361");
                                this.Manager.Comment("reaching state \'S2601\'");
                                goto label236;
                            }
                            if ((temp2217 == 1)) {
                                this.Manager.Comment("reaching state \'S1378\'");
                                int temp2213;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2214;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2214 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2213);
                                this.Manager.Comment("reaching state \'S1498\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2213, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1498");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2214, "return of FastTransferSourceCopyProperties, state S1498");
                                this.Manager.Comment("reaching state \'S1666\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2215;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2215 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1834\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2215, "return of Release, state S1834");
                                this.Manager.Comment("reaching state \'S2098\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2216;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2216 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2362\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2216, "return of Release, state S2362");
                                this.Manager.Comment("reaching state \'S2602\'");
                                goto label236;
                            }
                            throw new InvalidOperationException("never reached");
                        label236:
;
                            goto label237;
                        }
                        throw new InvalidOperationException("never reached");
                    label237:
;
                        goto label238;
                    }
                    throw new InvalidOperationException("never reached");
                label238:
;
                    goto label246;
                }
                if ((temp2318 == 1)) {
                    this.Manager.Comment("reaching state \'S70\'");
                    bool temp2220;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp2220);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2220);
                    this.Manager.Comment("reaching state \'S88\'");
                    int temp2317 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker16)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker23)));
                    if ((temp2317 == 0)) {
                        this.Manager.Comment("reaching state \'S113\'");
                        bool temp2221;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp2221);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2221);
                        this.Manager.Comment("reaching state \'S149\'");
                        int temp2268 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker17)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker20)));
                        if ((temp2268 == 0)) {
                            this.Manager.Comment("reaching state \'S199\'");
                            int temp2222;
                            int temp2223;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2224;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2224 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2222, out temp2223);
                            this.Manager.Comment("reaching state \'S271\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2222, "logonHandleIndex of Logon, state S271");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2223, "inboxFolderIdIndex of Logon, state S271");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2224, "return of Logon, state S271");
                            this.Manager.Comment("reaching state \'S343\'");
                            int temp2225;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2226;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2226 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2225);
                            this.Manager.Comment("reaching state \'S415\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2225, "folderHandleIndex of OpenFolder, state S415");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2226, "return of OpenFolder, state S415");
                            this.Manager.Comment("reaching state \'S487\'");
                            int temp2227;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2228;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2228 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2227);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S559\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2227, "messageHandleIndex of CreateMessage, state S559");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2228, "return of CreateMessage, state S559");
                            this.Manager.Comment("reaching state \'S631\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2229;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2229 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S703\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2229, "return of SetProperties, state S703");
                            this.Manager.Comment("reaching state \'S775\'");
                            int temp2230;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2231;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2231 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2230);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S847\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2230, "messageIdIndex of SaveChangesMessage, state S847");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2231, "return of SaveChangesMessage, state S847");
                            this.Manager.Comment("reaching state \'S919\'");
                            int temp2232;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2233;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2233 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2232);
                            this.Manager.Comment("reaching state \'S991\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2232, "attachmentHandleIndex of CreateAttachment, state S991");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2233, "return of CreateAttachment, state S991");
                            this.Manager.Comment("reaching state \'S1063\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2234;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2234 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1135\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2234, "return of SaveChangesAttachment, state S1135");
                            this.Manager.Comment("reaching state \'S1207\'");
                            bool temp2235;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2235);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2235);
                            this.Manager.Comment("reaching state \'S1279\'");
                            int temp2244 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker18)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker19)));
                            if ((temp2244 == 0)) {
                                this.Manager.Comment("reaching state \'S1379\'");
                                int temp2236;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2237;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2237 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2236);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1499\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2236, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1499");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2237, "return of FastTransferSourceCopyProperties, state S1499");
                                this.Manager.Comment("reaching state \'S1667\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2238;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2238 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1835\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2238, "return of Release, state S1835");
                                this.Manager.Comment("reaching state \'S2099\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2239;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2239 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2363\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2239, "return of Release, state S2363");
                                this.Manager.Comment("reaching state \'S2603\'");
                                goto label239;
                            }
                            if ((temp2244 == 1)) {
                                this.Manager.Comment("reaching state \'S1380\'");
                                int temp2240;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2241;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2241 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2240);
                                this.Manager.Comment("reaching state \'S1500\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2240, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1500");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2241, "return of FastTransferSourceCopyProperties, state S1500");
                                this.Manager.Comment("reaching state \'S1668\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2242;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2242 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1836\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2242, "return of Release, state S1836");
                                this.Manager.Comment("reaching state \'S2100\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2243;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2243 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2364\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2243, "return of Release, state S2364");
                                this.Manager.Comment("reaching state \'S2604\'");
                                goto label239;
                            }
                            throw new InvalidOperationException("never reached");
                        label239:
;
                            goto label241;
                        }
                        if ((temp2268 == 1)) {
                            this.Manager.Comment("reaching state \'S200\'");
                            int temp2245;
                            int temp2246;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2247;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2247 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2245, out temp2246);
                            this.Manager.Comment("reaching state \'S272\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2245, "logonHandleIndex of Logon, state S272");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2246, "inboxFolderIdIndex of Logon, state S272");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2247, "return of Logon, state S272");
                            this.Manager.Comment("reaching state \'S344\'");
                            int temp2248;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2249;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2249 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2248);
                            this.Manager.Comment("reaching state \'S416\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2248, "folderHandleIndex of OpenFolder, state S416");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2249, "return of OpenFolder, state S416");
                            this.Manager.Comment("reaching state \'S488\'");
                            int temp2250;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2251;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2251 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2250);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S560\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2250, "messageHandleIndex of CreateMessage, state S560");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2251, "return of CreateMessage, state S560");
                            this.Manager.Comment("reaching state \'S632\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2252;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2252 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S704\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2252, "return of SetProperties, state S704");
                            this.Manager.Comment("reaching state \'S776\'");
                            int temp2253;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2254;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2254 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2253);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S848\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2253, "messageIdIndex of SaveChangesMessage, state S848");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2254, "return of SaveChangesMessage, state S848");
                            this.Manager.Comment("reaching state \'S920\'");
                            int temp2255;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2256;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2256 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2255);
                            this.Manager.Comment("reaching state \'S992\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2255, "attachmentHandleIndex of CreateAttachment, state S992");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2256, "return of CreateAttachment, state S992");
                            this.Manager.Comment("reaching state \'S1064\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2257;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2257 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1136\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2257, "return of SaveChangesAttachment, state S1136");
                            this.Manager.Comment("reaching state \'S1208\'");
                            bool temp2258;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2258);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2258);
                            this.Manager.Comment("reaching state \'S1280\'");
                            int temp2267 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker21)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker22)));
                            if ((temp2267 == 0)) {
                                this.Manager.Comment("reaching state \'S1381\'");
                                int temp2259;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2260;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp2260 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2259);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1501\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2259, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1501");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2260, "return of FastTransferSourceCopyProperties, state S1501");
                                this.Manager.Comment("reaching state \'S1669\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2261;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2261 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1837\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2261, "return of Release, state S1837");
                                this.Manager.Comment("reaching state \'S2101\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2262;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2262 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2365\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2262, "return of Release, state S2365");
                                this.Manager.Comment("reaching state \'S2605\'");
                                goto label240;
                            }
                            if ((temp2267 == 1)) {
                                this.Manager.Comment("reaching state \'S1382\'");
                                int temp2263;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2264;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp2264 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2263);
                                this.Manager.Comment("reaching state \'S1502\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2263, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1502");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2264, "return of FastTransferSourceCopyProperties, state S1502");
                                this.Manager.Comment("reaching state \'S1670\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2265;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2265 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1838\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2265, "return of Release, state S1838");
                                this.Manager.Comment("reaching state \'S2102\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2266;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2266 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2366\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2266, "return of Release, state S2366");
                                this.Manager.Comment("reaching state \'S2606\'");
                                goto label240;
                            }
                            throw new InvalidOperationException("never reached");
                        label240:
;
                            goto label241;
                        }
                        throw new InvalidOperationException("never reached");
                    label241:
;
                        goto label245;
                    }
                    if ((temp2317 == 1)) {
                        this.Manager.Comment("reaching state \'S114\'");
                        bool temp2269;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp2269);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2269);
                        this.Manager.Comment("reaching state \'S150\'");
                        int temp2316 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker24)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker27)));
                        if ((temp2316 == 0)) {
                            this.Manager.Comment("reaching state \'S201\'");
                            int temp2270;
                            int temp2271;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2272;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2272 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2270, out temp2271);
                            this.Manager.Comment("reaching state \'S273\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2270, "logonHandleIndex of Logon, state S273");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2271, "inboxFolderIdIndex of Logon, state S273");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2272, "return of Logon, state S273");
                            this.Manager.Comment("reaching state \'S345\'");
                            int temp2273;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2274;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2274 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2273);
                            this.Manager.Comment("reaching state \'S417\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2273, "folderHandleIndex of OpenFolder, state S417");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2274, "return of OpenFolder, state S417");
                            this.Manager.Comment("reaching state \'S489\'");
                            int temp2275;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2276;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2276 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2275);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S561\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2275, "messageHandleIndex of CreateMessage, state S561");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2276, "return of CreateMessage, state S561");
                            this.Manager.Comment("reaching state \'S633\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2277;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2277 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S705\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2277, "return of SetProperties, state S705");
                            this.Manager.Comment("reaching state \'S777\'");
                            int temp2278;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2279;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2279 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2278);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S849\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2278, "messageIdIndex of SaveChangesMessage, state S849");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2279, "return of SaveChangesMessage, state S849");
                            this.Manager.Comment("reaching state \'S921\'");
                            int temp2280;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2281;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2281 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2280);
                            this.Manager.Comment("reaching state \'S993\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2280, "attachmentHandleIndex of CreateAttachment, state S993");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2281, "return of CreateAttachment, state S993");
                            this.Manager.Comment("reaching state \'S1065\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2282;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2282 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1137\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2282, "return of SaveChangesAttachment, state S1137");
                            this.Manager.Comment("reaching state \'S1209\'");
                            bool temp2283;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2283);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2283);
                            this.Manager.Comment("reaching state \'S1281\'");
                            int temp2292 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker25)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker26)));
                            if ((temp2292 == 0)) {
                                this.Manager.Comment("reaching state \'S1383\'");
                                int temp2284;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2285;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp2285 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2284);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1503\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2284, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1503");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2285, "return of FastTransferSourceCopyProperties, state S1503");
                                this.Manager.Comment("reaching state \'S1671\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2286;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2286 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1839\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2286, "return of Release, state S1839");
                                this.Manager.Comment("reaching state \'S2103\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2287;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2287 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2367\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2287, "return of Release, state S2367");
                                this.Manager.Comment("reaching state \'S2607\'");
                                goto label242;
                            }
                            if ((temp2292 == 1)) {
                                this.Manager.Comment("reaching state \'S1384\'");
                                int temp2288;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2289;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp2289 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2288);
                                this.Manager.Comment("reaching state \'S1504\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2288, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1504");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2289, "return of FastTransferSourceCopyProperties, state S1504");
                                this.Manager.Comment("reaching state \'S1672\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2290;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2290 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1840\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2290, "return of Release, state S1840");
                                this.Manager.Comment("reaching state \'S2104\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2291;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2291 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2368\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2291, "return of Release, state S2368");
                                this.Manager.Comment("reaching state \'S2608\'");
                                goto label242;
                            }
                            throw new InvalidOperationException("never reached");
                        label242:
;
                            goto label244;
                        }
                        if ((temp2316 == 1)) {
                            this.Manager.Comment("reaching state \'S202\'");
                            int temp2293;
                            int temp2294;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2295;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2295 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2293, out temp2294);
                            this.Manager.Comment("reaching state \'S274\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2293, "logonHandleIndex of Logon, state S274");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2294, "inboxFolderIdIndex of Logon, state S274");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2295, "return of Logon, state S274");
                            this.Manager.Comment("reaching state \'S346\'");
                            int temp2296;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2297;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2297 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2296);
                            this.Manager.Comment("reaching state \'S418\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2296, "folderHandleIndex of OpenFolder, state S418");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2297, "return of OpenFolder, state S418");
                            this.Manager.Comment("reaching state \'S490\'");
                            int temp2298;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2299;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2299 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2298);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S562\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2298, "messageHandleIndex of CreateMessage, state S562");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2299, "return of CreateMessage, state S562");
                            this.Manager.Comment("reaching state \'S634\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2300;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2300 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S706\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2300, "return of SetProperties, state S706");
                            this.Manager.Comment("reaching state \'S778\'");
                            int temp2301;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2302;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2302 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2301);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S850\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2301, "messageIdIndex of SaveChangesMessage, state S850");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2302, "return of SaveChangesMessage, state S850");
                            this.Manager.Comment("reaching state \'S922\'");
                            int temp2303;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2304;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2304 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2303);
                            this.Manager.Comment("reaching state \'S994\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2303, "attachmentHandleIndex of CreateAttachment, state S994");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2304, "return of CreateAttachment, state S994");
                            this.Manager.Comment("reaching state \'S1066\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2305;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2305 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1138\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2305, "return of SaveChangesAttachment, state S1138");
                            this.Manager.Comment("reaching state \'S1210\'");
                            bool temp2306;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2306);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2306);
                            this.Manager.Comment("reaching state \'S1282\'");
                            int temp2315 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker28)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker29)));
                            if ((temp2315 == 0)) {
                                this.Manager.Comment("reaching state \'S1385\'");
                                int temp2307;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2308;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp2308 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2307);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1505\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2307, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1505");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2308, "return of FastTransferSourceCopyProperties, state S1505");
                                this.Manager.Comment("reaching state \'S1673\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2309;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2309 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1841\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2309, "return of Release, state S1841");
                                this.Manager.Comment("reaching state \'S2105\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2310;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2310 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2369\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2310, "return of Release, state S2369");
                                this.Manager.Comment("reaching state \'S2609\'");
                                goto label243;
                            }
                            if ((temp2315 == 1)) {
                                this.Manager.Comment("reaching state \'S1386\'");
                                int temp2311;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2312;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagD" +
                                        "isplayName\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],o" +
                                        "ut _)\'");
                                temp2312 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2311);
                                this.Manager.Comment("reaching state \'S1506\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2311, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1506");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2312, "return of FastTransferSourceCopyProperties, state S1506");
                                this.Manager.Comment("reaching state \'S1674\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2313;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2313 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1842\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2313, "return of Release, state S1842");
                                this.Manager.Comment("reaching state \'S2106\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2314;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2314 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2370\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2314, "return of Release, state S2370");
                                this.Manager.Comment("reaching state \'S2610\'");
                                goto label243;
                            }
                            throw new InvalidOperationException("never reached");
                        label243:
;
                            goto label244;
                        }
                        throw new InvalidOperationException("never reached");
                    label244:
;
                        goto label245;
                    }
                    throw new InvalidOperationException("never reached");
                label245:
;
                    goto label246;
                }
                throw new InvalidOperationException("never reached");
            label246:
;
                goto label247;
            }
            if ((temp2319 == 1)) {
                this.Manager.Comment("reaching state \'S25\'");
                goto label247;
            }
            throw new InvalidOperationException("never reached");
        label247:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S57");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S87");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S147");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1275");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1275");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S147");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1276");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1276");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S87");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S148");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1277");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1277");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S148");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1278");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker14(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1278");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker15(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S57");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker16(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S88");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker17(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S149");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker18(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1279");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker19(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1279");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker20(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S149");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker21(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1280");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker22(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1280");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker23(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S88");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker24(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S150");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker25(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1281");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker26(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1281");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker27(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S150");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker28(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1282");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckRequirementEnabledChecker29(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1282");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite7CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        #endregion
        
        #region Test Starting in S8
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8");
            this.Manager.Comment("reaching state \'S8\'");
            bool temp2320;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp2320);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp2320);
            this.Manager.Comment("reaching state \'S9\'");
            int temp2519 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp2519 == 0)) {
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S49\'");
                bool temp2321;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2117002,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2117002, out temp2321);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2321);
                this.Manager.Comment("reaching state \'S58\'");
                int temp2518 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker15)));
                if ((temp2518 == 0)) {
                    this.Manager.Comment("reaching state \'S71\'");
                    bool temp2322;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp2322);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2322);
                    this.Manager.Comment("reaching state \'S89\'");
                    int temp2419 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker1)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker8)));
                    if ((temp2419 == 0)) {
                        this.Manager.Comment("reaching state \'S115\'");
                        bool temp2323;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp2323);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2323);
                        this.Manager.Comment("reaching state \'S151\'");
                        int temp2370 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker2)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker5)));
                        if ((temp2370 == 0)) {
                            this.Manager.Comment("reaching state \'S203\'");
                            int temp2324;
                            int temp2325;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2326;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2326 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2324, out temp2325);
                            this.Manager.Comment("reaching state \'S275\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2324, "logonHandleIndex of Logon, state S275");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2325, "inboxFolderIdIndex of Logon, state S275");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2326, "return of Logon, state S275");
                            this.Manager.Comment("reaching state \'S347\'");
                            int temp2327;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2328;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2328 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2327);
                            this.Manager.Comment("reaching state \'S419\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2327, "folderHandleIndex of OpenFolder, state S419");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2328, "return of OpenFolder, state S419");
                            this.Manager.Comment("reaching state \'S491\'");
                            int temp2329;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2330;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2330 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2329);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S563\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2329, "messageHandleIndex of CreateMessage, state S563");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2330, "return of CreateMessage, state S563");
                            this.Manager.Comment("reaching state \'S635\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2331;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2331 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S707\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2331, "return of SetProperties, state S707");
                            this.Manager.Comment("reaching state \'S779\'");
                            int temp2332;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2333;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2333 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2332);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S851\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2332, "messageIdIndex of SaveChangesMessage, state S851");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2333, "return of SaveChangesMessage, state S851");
                            this.Manager.Comment("reaching state \'S923\'");
                            int temp2334;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2335;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2335 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2334);
                            this.Manager.Comment("reaching state \'S995\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2334, "attachmentHandleIndex of CreateAttachment, state S995");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2335, "return of CreateAttachment, state S995");
                            this.Manager.Comment("reaching state \'S1067\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2336;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2336 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1139\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2336, "return of SaveChangesAttachment, state S1139");
                            this.Manager.Comment("reaching state \'S1211\'");
                            bool temp2337;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2337);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2337);
                            this.Manager.Comment("reaching state \'S1283\'");
                            int temp2346 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker3)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker4)));
                            if ((temp2346 == 0)) {
                                this.Manager.Comment("reaching state \'S1387\'");
                                int temp2338;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2339;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2339 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2338);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1507\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2338, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1507");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2339, "return of FastTransferSourceCopyProperties, state S1507");
                                this.Manager.Comment("reaching state \'S1675\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2340;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2340 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1843\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2340, "return of Release, state S1843");
                                this.Manager.Comment("reaching state \'S2107\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2341;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2341 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2371\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2341, "return of Release, state S2371");
                                this.Manager.Comment("reaching state \'S2611\'");
                                goto label248;
                            }
                            if ((temp2346 == 1)) {
                                this.Manager.Comment("reaching state \'S1388\'");
                                int temp2342;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2343;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2343 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2342);
                                this.Manager.Comment("reaching state \'S1508\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2342, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1508");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2343, "return of FastTransferSourceCopyProperties, state S1508");
                                this.Manager.Comment("reaching state \'S1676\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2344;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2344 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1844\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2344, "return of Release, state S1844");
                                this.Manager.Comment("reaching state \'S2108\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2345;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2345 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2372\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2345, "return of Release, state S2372");
                                this.Manager.Comment("reaching state \'S2612\'");
                                goto label248;
                            }
                            throw new InvalidOperationException("never reached");
                        label248:
;
                            goto label250;
                        }
                        if ((temp2370 == 1)) {
                            this.Manager.Comment("reaching state \'S204\'");
                            int temp2347;
                            int temp2348;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2349;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2349 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2347, out temp2348);
                            this.Manager.Comment("reaching state \'S276\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2347, "logonHandleIndex of Logon, state S276");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2348, "inboxFolderIdIndex of Logon, state S276");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2349, "return of Logon, state S276");
                            this.Manager.Comment("reaching state \'S348\'");
                            int temp2350;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2351;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2351 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2350);
                            this.Manager.Comment("reaching state \'S420\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2350, "folderHandleIndex of OpenFolder, state S420");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2351, "return of OpenFolder, state S420");
                            this.Manager.Comment("reaching state \'S492\'");
                            int temp2352;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2353;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2353 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2352);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S564\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2352, "messageHandleIndex of CreateMessage, state S564");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2353, "return of CreateMessage, state S564");
                            this.Manager.Comment("reaching state \'S636\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2354;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2354 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S708\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2354, "return of SetProperties, state S708");
                            this.Manager.Comment("reaching state \'S780\'");
                            int temp2355;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2356;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2356 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2355);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S852\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2355, "messageIdIndex of SaveChangesMessage, state S852");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2356, "return of SaveChangesMessage, state S852");
                            this.Manager.Comment("reaching state \'S924\'");
                            int temp2357;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2358;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2358 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2357);
                            this.Manager.Comment("reaching state \'S996\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2357, "attachmentHandleIndex of CreateAttachment, state S996");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2358, "return of CreateAttachment, state S996");
                            this.Manager.Comment("reaching state \'S1068\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2359;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2359 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1140\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2359, "return of SaveChangesAttachment, state S1140");
                            this.Manager.Comment("reaching state \'S1212\'");
                            bool temp2360;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2360);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2360);
                            this.Manager.Comment("reaching state \'S1284\'");
                            int temp2369 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker6)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker7)));
                            if ((temp2369 == 0)) {
                                this.Manager.Comment("reaching state \'S1389\'");
                                int temp2361;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2362;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2362 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2361);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1509\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2361, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1509");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2362, "return of FastTransferSourceCopyProperties, state S1509");
                                this.Manager.Comment("reaching state \'S1677\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2363;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2363 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1845\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2363, "return of Release, state S1845");
                                this.Manager.Comment("reaching state \'S2109\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2364;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2364 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2373\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2364, "return of Release, state S2373");
                                this.Manager.Comment("reaching state \'S2613\'");
                                goto label249;
                            }
                            if ((temp2369 == 1)) {
                                this.Manager.Comment("reaching state \'S1390\'");
                                int temp2365;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2366;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2366 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2365);
                                this.Manager.Comment("reaching state \'S1510\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2365, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1510");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2366, "return of FastTransferSourceCopyProperties, state S1510");
                                this.Manager.Comment("reaching state \'S1678\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2367;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2367 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1846\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2367, "return of Release, state S1846");
                                this.Manager.Comment("reaching state \'S2110\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2368;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2368 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2374\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2368, "return of Release, state S2374");
                                this.Manager.Comment("reaching state \'S2614\'");
                                goto label249;
                            }
                            throw new InvalidOperationException("never reached");
                        label249:
;
                            goto label250;
                        }
                        throw new InvalidOperationException("never reached");
                    label250:
;
                        goto label254;
                    }
                    if ((temp2419 == 1)) {
                        this.Manager.Comment("reaching state \'S116\'");
                        bool temp2371;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp2371);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2371);
                        this.Manager.Comment("reaching state \'S152\'");
                        int temp2418 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker9)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker12)));
                        if ((temp2418 == 0)) {
                            this.Manager.Comment("reaching state \'S205\'");
                            int temp2372;
                            int temp2373;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2374;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2374 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2372, out temp2373);
                            this.Manager.Comment("reaching state \'S277\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2372, "logonHandleIndex of Logon, state S277");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2373, "inboxFolderIdIndex of Logon, state S277");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2374, "return of Logon, state S277");
                            this.Manager.Comment("reaching state \'S349\'");
                            int temp2375;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2376;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2376 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2375);
                            this.Manager.Comment("reaching state \'S421\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2375, "folderHandleIndex of OpenFolder, state S421");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2376, "return of OpenFolder, state S421");
                            this.Manager.Comment("reaching state \'S493\'");
                            int temp2377;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2378;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2378 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2377);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S565\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2377, "messageHandleIndex of CreateMessage, state S565");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2378, "return of CreateMessage, state S565");
                            this.Manager.Comment("reaching state \'S637\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2379;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2379 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S709\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2379, "return of SetProperties, state S709");
                            this.Manager.Comment("reaching state \'S781\'");
                            int temp2380;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2381;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2381 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2380);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S853\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2380, "messageIdIndex of SaveChangesMessage, state S853");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2381, "return of SaveChangesMessage, state S853");
                            this.Manager.Comment("reaching state \'S925\'");
                            int temp2382;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2383;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2383 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2382);
                            this.Manager.Comment("reaching state \'S997\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2382, "attachmentHandleIndex of CreateAttachment, state S997");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2383, "return of CreateAttachment, state S997");
                            this.Manager.Comment("reaching state \'S1069\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2384;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2384 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1141\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2384, "return of SaveChangesAttachment, state S1141");
                            this.Manager.Comment("reaching state \'S1213\'");
                            bool temp2385;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2385);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2385);
                            this.Manager.Comment("reaching state \'S1285\'");
                            int temp2394 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker10)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker11)));
                            if ((temp2394 == 0)) {
                                this.Manager.Comment("reaching state \'S1391\'");
                                int temp2386;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2387;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2387 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2386);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1511\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2386, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1511");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2387, "return of FastTransferSourceCopyProperties, state S1511");
                                this.Manager.Comment("reaching state \'S1679\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2388;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2388 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1847\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2388, "return of Release, state S1847");
                                this.Manager.Comment("reaching state \'S2111\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2389;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2389 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2375\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2389, "return of Release, state S2375");
                                this.Manager.Comment("reaching state \'S2615\'");
                                goto label251;
                            }
                            if ((temp2394 == 1)) {
                                this.Manager.Comment("reaching state \'S1392\'");
                                int temp2390;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2391;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2391 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2390);
                                this.Manager.Comment("reaching state \'S1512\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2390, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1512");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2391, "return of FastTransferSourceCopyProperties, state S1512");
                                this.Manager.Comment("reaching state \'S1680\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2392;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2392 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1848\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2392, "return of Release, state S1848");
                                this.Manager.Comment("reaching state \'S2112\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2393;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2393 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2376\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2393, "return of Release, state S2376");
                                this.Manager.Comment("reaching state \'S2616\'");
                                goto label251;
                            }
                            throw new InvalidOperationException("never reached");
                        label251:
;
                            goto label253;
                        }
                        if ((temp2418 == 1)) {
                            this.Manager.Comment("reaching state \'S206\'");
                            int temp2395;
                            int temp2396;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2397;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2397 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2395, out temp2396);
                            this.Manager.Comment("reaching state \'S278\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2395, "logonHandleIndex of Logon, state S278");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2396, "inboxFolderIdIndex of Logon, state S278");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2397, "return of Logon, state S278");
                            this.Manager.Comment("reaching state \'S350\'");
                            int temp2398;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2399;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2399 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2398);
                            this.Manager.Comment("reaching state \'S422\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2398, "folderHandleIndex of OpenFolder, state S422");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2399, "return of OpenFolder, state S422");
                            this.Manager.Comment("reaching state \'S494\'");
                            int temp2400;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2401;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2401 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2400);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S566\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2400, "messageHandleIndex of CreateMessage, state S566");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2401, "return of CreateMessage, state S566");
                            this.Manager.Comment("reaching state \'S638\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2402;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2402 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S710\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2402, "return of SetProperties, state S710");
                            this.Manager.Comment("reaching state \'S782\'");
                            int temp2403;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2404;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2404 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2403);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S854\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2403, "messageIdIndex of SaveChangesMessage, state S854");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2404, "return of SaveChangesMessage, state S854");
                            this.Manager.Comment("reaching state \'S926\'");
                            int temp2405;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2406;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2406 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2405);
                            this.Manager.Comment("reaching state \'S998\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2405, "attachmentHandleIndex of CreateAttachment, state S998");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2406, "return of CreateAttachment, state S998");
                            this.Manager.Comment("reaching state \'S1070\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2407;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2407 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1142\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2407, "return of SaveChangesAttachment, state S1142");
                            this.Manager.Comment("reaching state \'S1214\'");
                            bool temp2408;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2408);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2408);
                            this.Manager.Comment("reaching state \'S1286\'");
                            int temp2417 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker13)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker14)));
                            if ((temp2417 == 0)) {
                                this.Manager.Comment("reaching state \'S1393\'");
                                int temp2409;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2410;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2410 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2409);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1513\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2409, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1513");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2410, "return of FastTransferSourceCopyProperties, state S1513");
                                this.Manager.Comment("reaching state \'S1681\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2411;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2411 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1849\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2411, "return of Release, state S1849");
                                this.Manager.Comment("reaching state \'S2113\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2412;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2412 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2377\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2412, "return of Release, state S2377");
                                this.Manager.Comment("reaching state \'S2617\'");
                                goto label252;
                            }
                            if ((temp2417 == 1)) {
                                this.Manager.Comment("reaching state \'S1394\'");
                                int temp2413;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2414;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2414 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2413);
                                this.Manager.Comment("reaching state \'S1514\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2413, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1514");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2414, "return of FastTransferSourceCopyProperties, state S1514");
                                this.Manager.Comment("reaching state \'S1682\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2415;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2415 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1850\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2415, "return of Release, state S1850");
                                this.Manager.Comment("reaching state \'S2114\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2416;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2416 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2378\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2416, "return of Release, state S2378");
                                this.Manager.Comment("reaching state \'S2618\'");
                                goto label252;
                            }
                            throw new InvalidOperationException("never reached");
                        label252:
;
                            goto label253;
                        }
                        throw new InvalidOperationException("never reached");
                    label253:
;
                        goto label254;
                    }
                    throw new InvalidOperationException("never reached");
                label254:
;
                    goto label262;
                }
                if ((temp2518 == 1)) {
                    this.Manager.Comment("reaching state \'S72\'");
                    bool temp2420;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(499001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499001, out temp2420);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2420);
                    this.Manager.Comment("reaching state \'S90\'");
                    int temp2517 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker16)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker23)));
                    if ((temp2517 == 0)) {
                        this.Manager.Comment("reaching state \'S117\'");
                        bool temp2421;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp2421);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2421);
                        this.Manager.Comment("reaching state \'S153\'");
                        int temp2468 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker17)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker20)));
                        if ((temp2468 == 0)) {
                            this.Manager.Comment("reaching state \'S207\'");
                            int temp2422;
                            int temp2423;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2424;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2424 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2422, out temp2423);
                            this.Manager.Comment("reaching state \'S279\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2422, "logonHandleIndex of Logon, state S279");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2423, "inboxFolderIdIndex of Logon, state S279");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2424, "return of Logon, state S279");
                            this.Manager.Comment("reaching state \'S351\'");
                            int temp2425;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2426;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2426 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2425);
                            this.Manager.Comment("reaching state \'S423\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2425, "folderHandleIndex of OpenFolder, state S423");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2426, "return of OpenFolder, state S423");
                            this.Manager.Comment("reaching state \'S495\'");
                            int temp2427;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2428;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2428 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2427);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S567\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2427, "messageHandleIndex of CreateMessage, state S567");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2428, "return of CreateMessage, state S567");
                            this.Manager.Comment("reaching state \'S639\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2429;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2429 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S711\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2429, "return of SetProperties, state S711");
                            this.Manager.Comment("reaching state \'S783\'");
                            int temp2430;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2431;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2431 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2430);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S855\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2430, "messageIdIndex of SaveChangesMessage, state S855");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2431, "return of SaveChangesMessage, state S855");
                            this.Manager.Comment("reaching state \'S927\'");
                            int temp2432;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2433;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2433 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2432);
                            this.Manager.Comment("reaching state \'S999\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2432, "attachmentHandleIndex of CreateAttachment, state S999");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2433, "return of CreateAttachment, state S999");
                            this.Manager.Comment("reaching state \'S1071\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2434;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2434 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1143\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2434, "return of SaveChangesAttachment, state S1143");
                            this.Manager.Comment("reaching state \'S1215\'");
                            bool temp2435;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2435);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2435);
                            this.Manager.Comment("reaching state \'S1287\'");
                            int temp2444 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker18)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker19)));
                            if ((temp2444 == 0)) {
                                this.Manager.Comment("reaching state \'S1395\'");
                                int temp2436;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2437;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2437 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2436);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1515\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2436, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1515");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2437, "return of FastTransferSourceCopyProperties, state S1515");
                                this.Manager.Comment("reaching state \'S1683\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2438;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2438 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1851\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2438, "return of Release, state S1851");
                                this.Manager.Comment("reaching state \'S2115\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2439;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2439 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2379\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2439, "return of Release, state S2379");
                                this.Manager.Comment("reaching state \'S2619\'");
                                goto label255;
                            }
                            if ((temp2444 == 1)) {
                                this.Manager.Comment("reaching state \'S1396\'");
                                int temp2440;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2441;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayNam" +
                                        "e\",\"PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2441 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2440);
                                this.Manager.Comment("reaching state \'S1516\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2440, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1516");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2441, "return of FastTransferSourceCopyProperties, state S1516");
                                this.Manager.Comment("reaching state \'S1684\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2442;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2442 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1852\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2442, "return of Release, state S1852");
                                this.Manager.Comment("reaching state \'S2116\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2443;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2443 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2380\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2443, "return of Release, state S2380");
                                this.Manager.Comment("reaching state \'S2620\'");
                                goto label255;
                            }
                            throw new InvalidOperationException("never reached");
                        label255:
;
                            goto label257;
                        }
                        if ((temp2468 == 1)) {
                            this.Manager.Comment("reaching state \'S208\'");
                            int temp2445;
                            int temp2446;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2447;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2447 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2445, out temp2446);
                            this.Manager.Comment("reaching state \'S280\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2445, "logonHandleIndex of Logon, state S280");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2446, "inboxFolderIdIndex of Logon, state S280");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2447, "return of Logon, state S280");
                            this.Manager.Comment("reaching state \'S352\'");
                            int temp2448;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2449;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2449 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2448);
                            this.Manager.Comment("reaching state \'S424\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2448, "folderHandleIndex of OpenFolder, state S424");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2449, "return of OpenFolder, state S424");
                            this.Manager.Comment("reaching state \'S496\'");
                            int temp2450;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2451;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2451 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2450);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S568\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2450, "messageHandleIndex of CreateMessage, state S568");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2451, "return of CreateMessage, state S568");
                            this.Manager.Comment("reaching state \'S640\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2452;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2452 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S712\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2452, "return of SetProperties, state S712");
                            this.Manager.Comment("reaching state \'S784\'");
                            int temp2453;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2454;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2454 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2453);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S856\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2453, "messageIdIndex of SaveChangesMessage, state S856");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2454, "return of SaveChangesMessage, state S856");
                            this.Manager.Comment("reaching state \'S928\'");
                            int temp2455;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2456;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2456 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2455);
                            this.Manager.Comment("reaching state \'S1000\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2455, "attachmentHandleIndex of CreateAttachment, state S1000");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2456, "return of CreateAttachment, state S1000");
                            this.Manager.Comment("reaching state \'S1072\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2457;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2457 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1144\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2457, "return of SaveChangesAttachment, state S1144");
                            this.Manager.Comment("reaching state \'S1216\'");
                            bool temp2458;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2458);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2458);
                            this.Manager.Comment("reaching state \'S1288\'");
                            int temp2467 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker21)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker22)));
                            if ((temp2467 == 0)) {
                                this.Manager.Comment("reaching state \'S1397\'");
                                int temp2459;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2460;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2460 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2459);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1517\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2459, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1517");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2460, "return of FastTransferSourceCopyProperties, state S1517");
                                this.Manager.Comment("reaching state \'S1685\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2461;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2461 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1853\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2461, "return of Release, state S1853");
                                this.Manager.Comment("reaching state \'S2117\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2462;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2462 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2381\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2462, "return of Release, state S2381");
                                this.Manager.Comment("reaching state \'S2621\'");
                                goto label256;
                            }
                            if ((temp2467 == 1)) {
                                this.Manager.Comment("reaching state \'S1398\'");
                                int temp2463;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2464;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2464 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2463);
                                this.Manager.Comment("reaching state \'S1518\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2463, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1518");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2464, "return of FastTransferSourceCopyProperties, state S1518");
                                this.Manager.Comment("reaching state \'S1686\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2465;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2465 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1854\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2465, "return of Release, state S1854");
                                this.Manager.Comment("reaching state \'S2118\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2466;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2466 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2382\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2466, "return of Release, state S2382");
                                this.Manager.Comment("reaching state \'S2622\'");
                                goto label256;
                            }
                            throw new InvalidOperationException("never reached");
                        label256:
;
                            goto label257;
                        }
                        throw new InvalidOperationException("never reached");
                    label257:
;
                        goto label261;
                    }
                    if ((temp2517 == 1)) {
                        this.Manager.Comment("reaching state \'S118\'");
                        bool temp2469;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1168,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1168, out temp2469);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2469);
                        this.Manager.Comment("reaching state \'S154\'");
                        int temp2516 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker24)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker27)));
                        if ((temp2516 == 0)) {
                            this.Manager.Comment("reaching state \'S209\'");
                            int temp2470;
                            int temp2471;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2472;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2472 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2470, out temp2471);
                            this.Manager.Comment("reaching state \'S281\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2470, "logonHandleIndex of Logon, state S281");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2471, "inboxFolderIdIndex of Logon, state S281");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2472, "return of Logon, state S281");
                            this.Manager.Comment("reaching state \'S353\'");
                            int temp2473;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2474;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2474 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2473);
                            this.Manager.Comment("reaching state \'S425\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2473, "folderHandleIndex of OpenFolder, state S425");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2474, "return of OpenFolder, state S425");
                            this.Manager.Comment("reaching state \'S497\'");
                            int temp2475;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2476;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2476 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2475);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S569\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2475, "messageHandleIndex of CreateMessage, state S569");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2476, "return of CreateMessage, state S569");
                            this.Manager.Comment("reaching state \'S641\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2477;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2477 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S713\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2477, "return of SetProperties, state S713");
                            this.Manager.Comment("reaching state \'S785\'");
                            int temp2478;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2479;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2479 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2478);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S857\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2478, "messageIdIndex of SaveChangesMessage, state S857");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2479, "return of SaveChangesMessage, state S857");
                            this.Manager.Comment("reaching state \'S929\'");
                            int temp2480;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2481;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2481 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2480);
                            this.Manager.Comment("reaching state \'S1001\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2480, "attachmentHandleIndex of CreateAttachment, state S1001");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2481, "return of CreateAttachment, state S1001");
                            this.Manager.Comment("reaching state \'S1073\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2482;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2482 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1145\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2482, "return of SaveChangesAttachment, state S1145");
                            this.Manager.Comment("reaching state \'S1217\'");
                            bool temp2483;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2483);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2483);
                            this.Manager.Comment("reaching state \'S1289\'");
                            int temp2492 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker25)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker26)));
                            if ((temp2492 == 0)) {
                                this.Manager.Comment("reaching state \'S1399\'");
                                int temp2484;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2485;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2485 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2484);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1519\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2484, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1519");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2485, "return of FastTransferSourceCopyProperties, state S1519");
                                this.Manager.Comment("reaching state \'S1687\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2486;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2486 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1855\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2486, "return of Release, state S1855");
                                this.Manager.Comment("reaching state \'S2119\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2487;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2487 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2383\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2487, "return of Release, state S2383");
                                this.Manager.Comment("reaching state \'S2623\'");
                                goto label258;
                            }
                            if ((temp2492 == 1)) {
                                this.Manager.Comment("reaching state \'S1400\'");
                                int temp2488;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2489;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2489 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2488);
                                this.Manager.Comment("reaching state \'S1520\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2488, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1520");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2489, "return of FastTransferSourceCopyProperties, state S1520");
                                this.Manager.Comment("reaching state \'S1688\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2490;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2490 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1856\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2490, "return of Release, state S1856");
                                this.Manager.Comment("reaching state \'S2120\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2491;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2491 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2384\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2491, "return of Release, state S2384");
                                this.Manager.Comment("reaching state \'S2624\'");
                                goto label258;
                            }
                            throw new InvalidOperationException("never reached");
                        label258:
;
                            goto label260;
                        }
                        if ((temp2516 == 1)) {
                            this.Manager.Comment("reaching state \'S210\'");
                            int temp2493;
                            int temp2494;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2495;
                            this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                            temp2495 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp2493, out temp2494);
                            this.Manager.Comment("reaching state \'S282\'");
                            this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2493, "logonHandleIndex of Logon, state S282");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2494, "inboxFolderIdIndex of Logon, state S282");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2495, "return of Logon, state S282");
                            this.Manager.Comment("reaching state \'S354\'");
                            int temp2496;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2497;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                            temp2497 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp2496);
                            this.Manager.Comment("reaching state \'S426\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2496, "folderHandleIndex of OpenFolder, state S426");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2497, "return of OpenFolder, state S426");
                            this.Manager.Comment("reaching state \'S498\'");
                            int temp2498;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2499;
                            this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                            temp2499 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp2498);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                            this.Manager.Comment("reaching state \'S570\'");
                            this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp2498, "messageHandleIndex of CreateMessage, state S570");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2499, "return of CreateMessage, state S570");
                            this.Manager.Comment("reaching state \'S642\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2500;
                            this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\"])\'");
                            temp2500 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagBody",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                            this.Manager.Comment("reaching state \'S714\'");
                            this.Manager.Comment("checking step \'return SetProperties/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2500, "return of SetProperties, state S714");
                            this.Manager.Comment("reaching state \'S786\'");
                            int temp2501;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2502;
                            this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                            temp2502 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp2501);
                            this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                            this.Manager.Comment("reaching state \'S858\'");
                            this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp2501, "messageIdIndex of SaveChangesMessage, state S858");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2502, "return of SaveChangesMessage, state S858");
                            this.Manager.Comment("reaching state \'S930\'");
                            int temp2503;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2504;
                            this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                            temp2504 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp2503);
                            this.Manager.Comment("reaching state \'S1002\'");
                            this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp2503, "attachmentHandleIndex of CreateAttachment, state S1002");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2504, "return of CreateAttachment, state S1002");
                            this.Manager.Comment("reaching state \'S1074\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2505;
                            this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                            temp2505 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                            this.Manager.Comment("reaching state \'S1146\'");
                            this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2505, "return of SaveChangesAttachment, state S1146");
                            this.Manager.Comment("reaching state \'S1218\'");
                            bool temp2506;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp2506);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2506);
                            this.Manager.Comment("reaching state \'S1290\'");
                            int temp2515 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker28)), new ExpectedReturn(S02_SyncFastTransferMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker29)));
                            if ((temp2515 == 0)) {
                                this.Manager.Comment("reaching state \'S1401\'");
                                int temp2507;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2508;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2508 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2507);
                                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                                this.Manager.Comment("reaching state \'S1521\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 5]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp2507, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1521");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2508, "return of FastTransferSourceCopyProperties, state S1521");
                                this.Manager.Comment("reaching state \'S1689\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2509;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2509 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1857\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2509, "return of Release, state S1857");
                                this.Manager.Comment("reaching state \'S2121\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2510;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp2510 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S2385\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2510, "return of Release, state S2385");
                                this.Manager.Comment("reaching state \'S2625\'");
                                goto label259;
                            }
                            if ((temp2515 == 1)) {
                                this.Manager.Comment("reaching state \'S1402\'");
                                int temp2511;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2512;
                                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Mov" +
                                        "e,Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"" +
                                        "PidTagMessageRecipients\",\"PidTagMessageAttachments\",\"PidTagBody\"],out _)\'");
                                temp2512 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagAccess",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagFolderId",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagComment",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagDisplayName",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagMessageRecipients",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagMessageAttachments",
                                                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                                    "Head",
                                                                                                                                    "Tail"}, new object[] {
                                                                                                                                    "PidTagBody",
                                                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp2511);
                                this.Manager.Comment("reaching state \'S1522\'");
                                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp2511, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S1522");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp2512, "return of FastTransferSourceCopyProperties, state S1522");
                                this.Manager.Comment("reaching state \'S1690\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2513;
                                this.Manager.Comment("executing step \'call Release(1,3)\'");
                                temp2513 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                                this.Manager.Comment("reaching state \'S1858\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2513, "return of Release, state S1858");
                                this.Manager.Comment("reaching state \'S2122\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp2514;
                                this.Manager.Comment("executing step \'call Release(1,-1)\'");
                                temp2514 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                                this.Manager.Comment("reaching state \'S2386\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp2514, "return of Release, state S2386");
                                this.Manager.Comment("reaching state \'S2626\'");
                                goto label259;
                            }
                            throw new InvalidOperationException("never reached");
                        label259:
;
                            goto label260;
                        }
                        throw new InvalidOperationException("never reached");
                    label260:
;
                        goto label261;
                    }
                    throw new InvalidOperationException("never reached");
                label261:
;
                    goto label262;
                }
                throw new InvalidOperationException("never reached");
            label262:
;
                goto label263;
            }
            if ((temp2519 == 1)) {
                this.Manager.Comment("reaching state \'S27\'");
                goto label263;
            }
            throw new InvalidOperationException("never reached");
        label263:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S58");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S89");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S151");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1283");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1283");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S151");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1284");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1284");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S89");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S152");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1285");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1285");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S152");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1286");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker14(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1286");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker15(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S58");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker16(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S90");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker17(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S153");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker18(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1287");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker19(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1287");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker20(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S153");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker21(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1288");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker22(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1288");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker23(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S90");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker24(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S154");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker25(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1289");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker26(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1289");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker27(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S154");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker28(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S1290");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckRequirementEnabledChecker29(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S1290");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessage_TestSuite8CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        #endregion
    }
}