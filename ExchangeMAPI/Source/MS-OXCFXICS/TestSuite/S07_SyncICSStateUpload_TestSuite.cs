//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S07_SyncICSStateUpload_TestSuite : PtfTestClassBase {
        
        public S07_SyncICSStateUpload_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S07_SyncICSStateUpload_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S07_SyncICSStateUpload_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp90 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp90 == 0)) {
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S10\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S12");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S12");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S12");
                this.Manager.Comment("reaching state \'S14\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S16");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S16");
                this.Manager.Comment("reaching state \'S18\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S20");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S20");
                this.Manager.Comment("reaching state \'S22\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp9 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of GetLocalReplicaIds, state S24");
                this.Manager.Comment("reaching state \'S26\'");
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "synchronizationHandleIndex of SynchronizationOpenCollector, state S28");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of SynchronizationOpenCollector, state S28");
                this.Manager.Comment("reaching state \'S30\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp12, "importMessageHandleIndex of SynchronizationImportMessageChange, state S32");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of SynchronizationImportMessageChange, state S32");
                this.Manager.Comment("reaching state \'S34\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp14, "messageIdIndex of SaveChangesMessage, state S36");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SaveChangesMessage, state S36");
                this.Manager.Comment("reaching state \'S38\'");
                int temp16;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode,Unicode|Normal" +
                        ",Eid,[\"PidTagCreationTime\"],out _)\'");
                temp17 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp16);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp16, "downloadcontextHandleIndex of SynchronizationConfigure, state S40");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of SynchronizationConfigure, state S40");
                this.Manager.Comment("reaching state \'S42\'");
                bool temp18;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp18);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp18);
                this.Manager.Comment("reaching state \'S44\'");
                int temp89 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker3)));
                if ((temp89 == 0)) {
                    this.Manager.Comment("reaching state \'S46\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp19 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S50\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp19, "return of SynchronizationUploadState, state S50");
                    this.Manager.Comment("reaching state \'S54\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp20 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S58\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp20, "return of SynchronizationUploadState, state S58");
                    this.Manager.Comment("reaching state \'S62\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp21 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S66\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of SynchronizationUploadState, state S66");
                    this.Manager.Comment("reaching state \'S70\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp22 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S74\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of SynchronizationUploadState, state S74");
                    this.Manager.Comment("reaching state \'S78\'");
                    int temp23;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp24;
                    bool temp25;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp26 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp23, out temp24, out temp25);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S82\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp23, "transferBufferIndex of FastTransferSourceGetBuffer, state S82");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp24, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S82");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp25, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S82");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of FastTransferSourceGetBuffer, state S82");
                    this.Manager.Comment("reaching state \'S86\'");
                    int temp27;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp28 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp27);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S90\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp27, "synchronizationHandleIndex of SynchronizationOpenCollector, state S90");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of SynchronizationOpenCollector, state S90");
                    this.Manager.Comment("reaching state \'S94\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,1)\'");
                    temp29 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Comment("reaching state \'S98\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    try {
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp29, "return of SynchronizationUploadState, state S98");
                    }
                    catch (TransactionFailedException ) {
                        this.Manager.Comment("This step would have covered MS-OXCFXICS_R3359");
                        throw;
                    }
                    this.Manager.Checkpoint("MS-OXCFXICS_R3359");
                    this.Manager.Comment("reaching state \'S102\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,1)\'");
                    temp30 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S106\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp30, "return of SynchronizationUploadState, state S106");
                    this.Manager.Comment("reaching state \'S110\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,1)\'");
                    temp31 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S114\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of SynchronizationUploadState, state S114");
                    this.Manager.Comment("reaching state \'S118\'");
                    bool temp32;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(350400101,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(350400101, out temp32);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp32);
                    this.Manager.Comment("reaching state \'S122\'");
                    int temp53 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker2)));
                    if ((temp53 == 0)) {
                        this.Manager.Comment("reaching state \'S126\'");
                        int temp33;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                        this.Manager.Comment("executing step \'call SynchronizationGetTransferState(1,7,out _)\'");
                        temp34 = this.IMS_OXCFXICSAdapterInstance.SynchronizationGetTransferState(1, 7, out temp33);
                        this.Manager.Checkpoint("MS-OXCFXICS_R765");
                        this.Manager.Checkpoint("MS-OXCFXICS_R758");
                        this.Manager.Comment("reaching state \'S134\'");
                        this.Manager.Comment("checking step \'return SynchronizationGetTransferState/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp33, "stateHandleIndex of SynchronizationGetTransferState, state S134");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of SynchronizationGetTransferState, state S134");
                        this.Manager.Comment("reaching state \'S142\'");
                        int temp35;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp36;
                        bool temp37;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp38 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp35, out temp36, out temp37);
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S150\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=state,AbstractHierarchySync=AbstractHierarchySync(Folderchange" +
                                "Info=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderIdExis" +
                                "t=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=False)" +
                                ",FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven=nu" +
                                "ll,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumbe" +
                                "r=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=Fals" +
                                "e,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstract" +
                                "ContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null,A" +
                                "bstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPid" +
                                "TagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateC" +
                                "hangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven" +
                                "=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNu" +
                                "mber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime" +
                                "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                "ractICSStateIndex=2,IdSetGiven={3},IsNewCnsetReadPropertyChangeNumber=False,IsNe" +
                                "wCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False" +
                                "),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fals" +
                                "e,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp" +
                                "=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False" +
                                ",StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,I" +
                                "sRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=F" +
                                "alse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissi" +
                                "onMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrece" +
                                "dedByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPrope" +
                                "rtiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInO" +
                                "therCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out F" +
                                "alse]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp35, "transferBufferIndex of FastTransferSourceGetBuffer, state S150");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.state,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    2,
                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp36, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S150");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp37, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S150");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp38, "return of FastTransferSourceGetBuffer, state S150");
                        this.Manager.Comment("reaching state \'S158\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp39 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S166\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of Release, state S166");
                        this.Manager.Comment("reaching state \'S174\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp40;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp40 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S182\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp40, "return of Release, state S182");
                        this.Manager.Comment("reaching state \'S190\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp41 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S198\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of Release, state S198");
                        this.Manager.Comment("reaching state \'S206\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp42 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S214\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp42, "return of Release, state S214");
                        this.Manager.Comment("reaching state \'S222\'");
                        goto label0;
                    }
                    if ((temp53 == 1)) {
                        this.Manager.Comment("reaching state \'S127\'");
                        int temp43;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                        this.Manager.Comment("executing step \'call SynchronizationGetTransferState(1,7,out _)\'");
                        temp44 = this.IMS_OXCFXICSAdapterInstance.SynchronizationGetTransferState(1, 7, out temp43);
                        this.Manager.Checkpoint("MS-OXCFXICS_R765");
                        this.Manager.Checkpoint("MS-OXCFXICS_R758");
                        this.Manager.Comment("reaching state \'S135\'");
                        this.Manager.Comment("checking step \'return SynchronizationGetTransferState/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp43, "stateHandleIndex of SynchronizationGetTransferState, state S135");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of SynchronizationGetTransferState, state S135");
                        this.Manager.Comment("reaching state \'S143\'");
                        int temp45;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp46;
                        bool temp47;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp48;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp48 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp45, out temp46, out temp47);
                        this.Manager.Checkpoint("MS-OXCFXICS_R350400101");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S151\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=state,AbstractHierarchySync=AbstractHierarchySync(Folderchange" +
                                "Info=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderIdExis" +
                                "t=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=False)" +
                                ",FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven=nu" +
                                "ll,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumbe" +
                                "r=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=Fals" +
                                "e,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstract" +
                                "ContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null,A" +
                                "bstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPid" +
                                "TagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateC" +
                                "hangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven" +
                                "=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNu" +
                                "mber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime" +
                                "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                "ractICSStateIndex=2,IdSetGiven={},IsNewCnsetReadPropertyChangeNumber=False,IsNew" +
                                "CnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False)" +
                                ",AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False" +
                                ",AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=" +
                                "False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False," +
                                "StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,Is" +
                                "RTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=Fa" +
                                "lse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissio" +
                                "nMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPreced" +
                                "edByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProper" +
                                "tiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOt" +
                                "herCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out Fa" +
                                "lse]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp45, "transferBufferIndex of FastTransferSourceGetBuffer, state S151");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.state,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    2,
                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp46, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S151");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp47, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S151");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp48, "return of FastTransferSourceGetBuffer, state S151");
                        this.Manager.Comment("reaching state \'S159\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp49 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S167\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of Release, state S167");
                        this.Manager.Comment("reaching state \'S175\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp50 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S183\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of Release, state S183");
                        this.Manager.Comment("reaching state \'S191\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp51 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S199\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of Release, state S199");
                        this.Manager.Comment("reaching state \'S207\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp52 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S215\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of Release, state S215");
                        this.Manager.Comment("reaching state \'S223\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label2;
                }
                if ((temp89 == 1)) {
                    this.Manager.Comment("reaching state \'S47\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp54 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S51\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of SynchronizationUploadState, state S51");
                    this.Manager.Comment("reaching state \'S55\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp55;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp55 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S59\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp55, "return of SynchronizationUploadState, state S59");
                    this.Manager.Comment("reaching state \'S63\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp56 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S67\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp56, "return of SynchronizationUploadState, state S67");
                    this.Manager.Comment("reaching state \'S71\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp57 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S75\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of SynchronizationUploadState, state S75");
                    this.Manager.Comment("reaching state \'S79\'");
                    int temp58;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp59;
                    bool temp60;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp61 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp58, out temp59, out temp60);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S83\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp58, "transferBufferIndex of FastTransferSourceGetBuffer, state S83");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp59, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S83");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp60, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S83");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp61, "return of FastTransferSourceGetBuffer, state S83");
                    this.Manager.Comment("reaching state \'S87\'");
                    int temp62;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp63 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp62);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S91\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp62, "synchronizationHandleIndex of SynchronizationOpenCollector, state S91");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of SynchronizationOpenCollector, state S91");
                    this.Manager.Comment("reaching state \'S95\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,1)\'");
                    temp64 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S99\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    try {
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of SynchronizationUploadState, state S99");
                    }
                    catch (TransactionFailedException ) {
                        this.Manager.Comment("This step would have covered MS-OXCFXICS_R3359");
                        throw;
                    }
                    this.Manager.Checkpoint("MS-OXCFXICS_R3359");
                    this.Manager.Comment("reaching state \'S103\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,1)\'");
                    temp65 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S107\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of SynchronizationUploadState, state S107");
                    this.Manager.Comment("reaching state \'S111\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,1)\'");
                    temp66 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S115\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp66, "return of SynchronizationUploadState, state S115");
                    this.Manager.Comment("reaching state \'S119\'");
                    bool temp67;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(350400101,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(350400101, out temp67);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp67);
                    this.Manager.Comment("reaching state \'S123\'");
                    int temp88 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker4)), new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker5)));
                    if ((temp88 == 0)) {
                        this.Manager.Comment("reaching state \'S128\'");
                        int temp68;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp69;
                        this.Manager.Comment("executing step \'call SynchronizationGetTransferState(1,7,out _)\'");
                        temp69 = this.IMS_OXCFXICSAdapterInstance.SynchronizationGetTransferState(1, 7, out temp68);
                        this.Manager.Checkpoint("MS-OXCFXICS_R765");
                        this.Manager.Checkpoint("MS-OXCFXICS_R758");
                        this.Manager.Comment("reaching state \'S136\'");
                        this.Manager.Comment("checking step \'return SynchronizationGetTransferState/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp68, "stateHandleIndex of SynchronizationGetTransferState, state S136");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp69, "return of SynchronizationGetTransferState, state S136");
                        this.Manager.Comment("reaching state \'S144\'");
                        int temp70;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp71;
                        bool temp72;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp73 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp70, out temp71, out temp72);
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S152\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=state,AbstractHierarchySync=AbstractHierarchySync(Folderchange" +
                                "Info=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderIdExis" +
                                "t=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=False)" +
                                ",FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven=nu" +
                                "ll,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumbe" +
                                "r=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=Fals" +
                                "e,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstract" +
                                "ContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null,A" +
                                "bstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPid" +
                                "TagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateC" +
                                "hangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven" +
                                "=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNu" +
                                "mber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime" +
                                "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                "ractICSStateIndex=2,IdSetGiven={3},IsNewCnsetReadPropertyChangeNumber=False,IsNe" +
                                "wCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False" +
                                "),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fals" +
                                "e,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp" +
                                "=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False" +
                                ",StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,I" +
                                "sRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=F" +
                                "alse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissi" +
                                "onMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrece" +
                                "dedByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPrope" +
                                "rtiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInO" +
                                "therCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out F" +
                                "alse]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp70, "transferBufferIndex of FastTransferSourceGetBuffer, state S152");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.state,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    2,
                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp71, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S152");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp72, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S152");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of FastTransferSourceGetBuffer, state S152");
                        this.Manager.Comment("reaching state \'S160\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp74 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S168\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of Release, state S168");
                        this.Manager.Comment("reaching state \'S176\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp75 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S184\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of Release, state S184");
                        this.Manager.Comment("reaching state \'S192\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp76;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp76 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S200\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp76, "return of Release, state S200");
                        this.Manager.Comment("reaching state \'S208\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp77;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp77 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S216\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp77, "return of Release, state S216");
                        this.Manager.Comment("reaching state \'S224\'");
                        goto label1;
                    }
                    if ((temp88 == 1)) {
                        this.Manager.Comment("reaching state \'S129\'");
                        int temp78;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp79;
                        this.Manager.Comment("executing step \'call SynchronizationGetTransferState(1,7,out _)\'");
                        temp79 = this.IMS_OXCFXICSAdapterInstance.SynchronizationGetTransferState(1, 7, out temp78);
                        this.Manager.Checkpoint("MS-OXCFXICS_R765");
                        this.Manager.Checkpoint("MS-OXCFXICS_R758");
                        this.Manager.Comment("reaching state \'S137\'");
                        this.Manager.Comment("checking step \'return SynchronizationGetTransferState/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp78, "stateHandleIndex of SynchronizationGetTransferState, state S137");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp79, "return of SynchronizationGetTransferState, state S137");
                        this.Manager.Comment("reaching state \'S145\'");
                        int temp80;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp81;
                        bool temp82;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp83 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp80, out temp81, out temp82);
                        this.Manager.Checkpoint("MS-OXCFXICS_R350400101");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S153\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=state,AbstractHierarchySync=AbstractHierarchySync(Folderchange" +
                                "Info=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderIdExis" +
                                "t=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=False)" +
                                ",FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven=nu" +
                                "ll,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumbe" +
                                "r=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=Fals" +
                                "e,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstract" +
                                "ContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null,A" +
                                "bstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPid" +
                                "TagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateC" +
                                "hangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven" +
                                "=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNu" +
                                "mber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime" +
                                "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                "ractICSStateIndex=2,IdSetGiven={},IsNewCnsetReadPropertyChangeNumber=False,IsNew" +
                                "CnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False)" +
                                ",AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False" +
                                ",AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=" +
                                "False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False," +
                                "StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,Is" +
                                "RTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=Fa" +
                                "lse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissio" +
                                "nMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPreced" +
                                "edByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProper" +
                                "tiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOt" +
                                "herCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out Fa" +
                                "lse]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp80, "transferBufferIndex of FastTransferSourceGetBuffer, state S153");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.state,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    2,
                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp81, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S153");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp82, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S153");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of FastTransferSourceGetBuffer, state S153");
                        this.Manager.Comment("reaching state \'S161\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp84;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp84 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S169\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp84, "return of Release, state S169");
                        this.Manager.Comment("reaching state \'S177\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp85;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp85 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S185\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp85, "return of Release, state S185");
                        this.Manager.Comment("reaching state \'S193\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp86;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp86 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S201\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp86, "return of Release, state S201");
                        this.Manager.Comment("reaching state \'S209\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp87;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp87 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S217\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp87, "return of Release, state S217");
                        this.Manager.Comment("reaching state \'S225\'");
                        goto label1;
                    }
                    throw new InvalidOperationException("never reached");
                label1:
;
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp90 == 1)) {
                this.Manager.Comment("reaching state \'S5\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S44");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S122");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S122");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S44");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S123");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S123");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp91;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp91);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp91);
            this.Manager.Comment("reaching state \'S3\'");
            int temp181 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp181 == 0)) {
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S9\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S11\'");
                int temp92;
                int temp93;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp94;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp94 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp92, out temp93);
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp92, "logonHandleIndex of Logon, state S13");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp93, "inboxFolderIdIndex of Logon, state S13");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp94, "return of Logon, state S13");
                this.Manager.Comment("reaching state \'S15\'");
                int temp95;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp96;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp96 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp95);
                this.Manager.Comment("reaching state \'S17\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp95, "folderHandleIndex of OpenFolder, state S17");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp96, "return of OpenFolder, state S17");
                this.Manager.Comment("reaching state \'S19\'");
                int temp97;
                int temp98;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp99 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp97, out temp98);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S21\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp97, "folderIdIndex of CreateFolder, state S21");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp98, "folderHandleIndex of CreateFolder, state S21");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of CreateFolder, state S21");
                this.Manager.Comment("reaching state \'S23\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp100;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp100 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp100, "return of GetLocalReplicaIds, state S25");
                this.Manager.Comment("reaching state \'S27\'");
                int temp101;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp102;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp102 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp101);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S29\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp101, "synchronizationHandleIndex of SynchronizationOpenCollector, state S29");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp102, "return of SynchronizationOpenCollector, state S29");
                this.Manager.Comment("reaching state \'S31\'");
                int temp103;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp104;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp104 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp103);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S33\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp103, "importMessageHandleIndex of SynchronizationImportMessageChange, state S33");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp104, "return of SynchronizationImportMessageChange, state S33");
                this.Manager.Comment("reaching state \'S35\'");
                int temp105;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp106 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp105);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp105, "messageIdIndex of SaveChangesMessage, state S37");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of SaveChangesMessage, state S37");
                this.Manager.Comment("reaching state \'S39\'");
                int temp107;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp108;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode,Unicode|Normal" +
                        ",CN,[\"PidTagCreationTime\"],out _)\'");
                temp108 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.CN, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp107);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S41\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp107, "downloadcontextHandleIndex of SynchronizationConfigure, state S41");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp108, "return of SynchronizationConfigure, state S41");
                this.Manager.Comment("reaching state \'S43\'");
                bool temp109;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp109);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp109);
                this.Manager.Comment("reaching state \'S45\'");
                int temp180 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker3)));
                if ((temp180 == 0)) {
                    this.Manager.Comment("reaching state \'S48\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp110;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp110 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S52\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp110, "return of SynchronizationUploadState, state S52");
                    this.Manager.Comment("reaching state \'S56\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp111;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp111 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S60\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp111, "return of SynchronizationUploadState, state S60");
                    this.Manager.Comment("reaching state \'S64\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp112 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S68\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of SynchronizationUploadState, state S68");
                    this.Manager.Comment("reaching state \'S72\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp113 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S76\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp113, "return of SynchronizationUploadState, state S76");
                    this.Manager.Comment("reaching state \'S80\'");
                    int temp114;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp115;
                    bool temp116;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp117;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp117 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp114, out temp115, out temp116);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2196");
                    this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S84\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                            "False,IsPidTagChangeNumberExist=True,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp114, "transferBufferIndex of FastTransferSourceGetBuffer, state S84");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp115, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S84");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp116, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S84");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp117, "return of FastTransferSourceGetBuffer, state S84");
                    this.Manager.Comment("reaching state \'S88\'");
                    int temp118;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp119;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp119 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp118);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S92\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp118, "synchronizationHandleIndex of SynchronizationOpenCollector, state S92");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp119, "return of SynchronizationOpenCollector, state S92");
                    this.Manager.Comment("reaching state \'S96\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp120;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,1)\'");
                    temp120 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Comment("reaching state \'S100\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    try {
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp120, "return of SynchronizationUploadState, state S100");
                    }
                    catch (TransactionFailedException ) {
                        this.Manager.Comment("This step would have covered MS-OXCFXICS_R3359");
                        throw;
                    }
                    this.Manager.Checkpoint("MS-OXCFXICS_R3359");
                    this.Manager.Comment("reaching state \'S104\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp121;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,1)\'");
                    temp121 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S108\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp121, "return of SynchronizationUploadState, state S108");
                    this.Manager.Comment("reaching state \'S112\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp122;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,1)\'");
                    temp122 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S116\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp122, "return of SynchronizationUploadState, state S116");
                    this.Manager.Comment("reaching state \'S120\'");
                    bool temp123;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(350400101,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(350400101, out temp123);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp123);
                    this.Manager.Comment("reaching state \'S124\'");
                    int temp144 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker1)), new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker2)));
                    if ((temp144 == 0)) {
                        this.Manager.Comment("reaching state \'S130\'");
                        int temp124;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp125;
                        this.Manager.Comment("executing step \'call SynchronizationGetTransferState(1,7,out _)\'");
                        temp125 = this.IMS_OXCFXICSAdapterInstance.SynchronizationGetTransferState(1, 7, out temp124);
                        this.Manager.Checkpoint("MS-OXCFXICS_R765");
                        this.Manager.Checkpoint("MS-OXCFXICS_R758");
                        this.Manager.Comment("reaching state \'S138\'");
                        this.Manager.Comment("checking step \'return SynchronizationGetTransferState/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp124, "stateHandleIndex of SynchronizationGetTransferState, state S138");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp125, "return of SynchronizationGetTransferState, state S138");
                        this.Manager.Comment("reaching state \'S146\'");
                        int temp126;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp127;
                        bool temp128;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp129;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp129 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp126, out temp127, out temp128);
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S154\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=state,AbstractHierarchySync=AbstractHierarchySync(Folderchange" +
                                "Info=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderIdExis" +
                                "t=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=False)" +
                                ",FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven=nu" +
                                "ll,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumbe" +
                                "r=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=Fals" +
                                "e,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstract" +
                                "ContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null,A" +
                                "bstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPid" +
                                "TagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateC" +
                                "hangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven" +
                                "=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNu" +
                                "mber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime" +
                                "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                "ractICSStateIndex=2,IdSetGiven={3},IsNewCnsetReadPropertyChangeNumber=False,IsNe" +
                                "wCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False" +
                                "),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fals" +
                                "e,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp" +
                                "=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False" +
                                ",StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,I" +
                                "sRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=F" +
                                "alse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissi" +
                                "onMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrece" +
                                "dedByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPrope" +
                                "rtiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInO" +
                                "therCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out F" +
                                "alse]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp126, "transferBufferIndex of FastTransferSourceGetBuffer, state S154");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.state,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    2,
                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp127, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S154");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp128, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S154");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp129, "return of FastTransferSourceGetBuffer, state S154");
                        this.Manager.Comment("reaching state \'S162\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp130;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp130 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S170\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp130, "return of Release, state S170");
                        this.Manager.Comment("reaching state \'S178\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp131;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp131 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S186\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp131, "return of Release, state S186");
                        this.Manager.Comment("reaching state \'S194\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp132;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp132 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S202\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp132, "return of Release, state S202");
                        this.Manager.Comment("reaching state \'S210\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp133;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp133 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S218\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp133, "return of Release, state S218");
                        this.Manager.Comment("reaching state \'S226\'");
                        goto label4;
                    }
                    if ((temp144 == 1)) {
                        this.Manager.Comment("reaching state \'S131\'");
                        int temp134;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp135;
                        this.Manager.Comment("executing step \'call SynchronizationGetTransferState(1,7,out _)\'");
                        temp135 = this.IMS_OXCFXICSAdapterInstance.SynchronizationGetTransferState(1, 7, out temp134);
                        this.Manager.Checkpoint("MS-OXCFXICS_R765");
                        this.Manager.Checkpoint("MS-OXCFXICS_R758");
                        this.Manager.Comment("reaching state \'S139\'");
                        this.Manager.Comment("checking step \'return SynchronizationGetTransferState/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp134, "stateHandleIndex of SynchronizationGetTransferState, state S139");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp135, "return of SynchronizationGetTransferState, state S139");
                        this.Manager.Comment("reaching state \'S147\'");
                        int temp136;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp137;
                        bool temp138;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp139;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp139 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp136, out temp137, out temp138);
                        this.Manager.Checkpoint("MS-OXCFXICS_R350400101");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S155\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=state,AbstractHierarchySync=AbstractHierarchySync(Folderchange" +
                                "Info=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderIdExis" +
                                "t=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=False)" +
                                ",FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven=nu" +
                                "ll,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumbe" +
                                "r=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=Fals" +
                                "e,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstract" +
                                "ContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null,A" +
                                "bstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPid" +
                                "TagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateC" +
                                "hangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven" +
                                "=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNu" +
                                "mber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime" +
                                "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                "ractICSStateIndex=2,IdSetGiven={},IsNewCnsetReadPropertyChangeNumber=False,IsNew" +
                                "CnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False)" +
                                ",AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False" +
                                ",AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=" +
                                "False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False," +
                                "StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,Is" +
                                "RTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=Fa" +
                                "lse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissio" +
                                "nMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPreced" +
                                "edByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProper" +
                                "tiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOt" +
                                "herCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out Fa" +
                                "lse]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp136, "transferBufferIndex of FastTransferSourceGetBuffer, state S155");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.state,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    2,
                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp137, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S155");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp138, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S155");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp139, "return of FastTransferSourceGetBuffer, state S155");
                        this.Manager.Comment("reaching state \'S163\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp140;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp140 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S171\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp140, "return of Release, state S171");
                        this.Manager.Comment("reaching state \'S179\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp141;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp141 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S187\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp141, "return of Release, state S187");
                        this.Manager.Comment("reaching state \'S195\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp142;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp142 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S203\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp142, "return of Release, state S203");
                        this.Manager.Comment("reaching state \'S211\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp143;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp143 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S219\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp143, "return of Release, state S219");
                        this.Manager.Comment("reaching state \'S227\'");
                        goto label4;
                    }
                    throw new InvalidOperationException("never reached");
                label4:
;
                    goto label6;
                }
                if ((temp180 == 1)) {
                    this.Manager.Comment("reaching state \'S49\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp145;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp145 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S53\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp145, "return of SynchronizationUploadState, state S53");
                    this.Manager.Comment("reaching state \'S57\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp146;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp146 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S61\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp146, "return of SynchronizationUploadState, state S61");
                    this.Manager.Comment("reaching state \'S65\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp147;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp147 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S69\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp147, "return of SynchronizationUploadState, state S69");
                    this.Manager.Comment("reaching state \'S73\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp148;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp148 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S77\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp148, "return of SynchronizationUploadState, state S77");
                    this.Manager.Comment("reaching state \'S81\'");
                    int temp149;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp150;
                    bool temp151;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp152;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp152 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp149, out temp150, out temp151);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2196");
                    this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S85\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                            "False,IsPidTagChangeNumberExist=True,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp149, "transferBufferIndex of FastTransferSourceGetBuffer, state S85");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp150, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S85");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp151, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S85");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp152, "return of FastTransferSourceGetBuffer, state S85");
                    this.Manager.Comment("reaching state \'S89\'");
                    int temp153;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp154;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                    temp154 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp153);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S93\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp153, "synchronizationHandleIndex of SynchronizationOpenCollector, state S93");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp154, "return of SynchronizationOpenCollector, state S93");
                    this.Manager.Comment("reaching state \'S97\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp155;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,1)\'");
                    temp155 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S101\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    try {
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp155, "return of SynchronizationUploadState, state S101");
                    }
                    catch (TransactionFailedException ) {
                        this.Manager.Comment("This step would have covered MS-OXCFXICS_R3359");
                        throw;
                    }
                    this.Manager.Checkpoint("MS-OXCFXICS_R3359");
                    this.Manager.Comment("reaching state \'S105\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp156;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,1)\'");
                    temp156 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S109\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp156, "return of SynchronizationUploadState, state S109");
                    this.Manager.Comment("reaching state \'S113\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp157;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,1)\'");
                    temp157 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S117\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp157, "return of SynchronizationUploadState, state S117");
                    this.Manager.Comment("reaching state \'S121\'");
                    bool temp158;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(350400101,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(350400101, out temp158);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp158);
                    this.Manager.Comment("reaching state \'S125\'");
                    int temp179 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker4)), new ExpectedReturn(S07_SyncICSStateUpload_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker5)));
                    if ((temp179 == 0)) {
                        this.Manager.Comment("reaching state \'S132\'");
                        int temp159;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp160;
                        this.Manager.Comment("executing step \'call SynchronizationGetTransferState(1,7,out _)\'");
                        temp160 = this.IMS_OXCFXICSAdapterInstance.SynchronizationGetTransferState(1, 7, out temp159);
                        this.Manager.Checkpoint("MS-OXCFXICS_R765");
                        this.Manager.Checkpoint("MS-OXCFXICS_R758");
                        this.Manager.Comment("reaching state \'S140\'");
                        this.Manager.Comment("checking step \'return SynchronizationGetTransferState/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp159, "stateHandleIndex of SynchronizationGetTransferState, state S140");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp160, "return of SynchronizationGetTransferState, state S140");
                        this.Manager.Comment("reaching state \'S148\'");
                        int temp161;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp162;
                        bool temp163;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp164;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp164 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp161, out temp162, out temp163);
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S156\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=state,AbstractHierarchySync=AbstractHierarchySync(Folderchange" +
                                "Info=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderIdExis" +
                                "t=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=False)" +
                                ",FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven=nu" +
                                "ll,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumbe" +
                                "r=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=Fals" +
                                "e,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstract" +
                                "ContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null,A" +
                                "bstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPid" +
                                "TagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateC" +
                                "hangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven" +
                                "=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNu" +
                                "mber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime" +
                                "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                "ractICSStateIndex=2,IdSetGiven={3},IsNewCnsetReadPropertyChangeNumber=False,IsNe" +
                                "wCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False" +
                                "),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fals" +
                                "e,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp" +
                                "=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False" +
                                ",StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,I" +
                                "sRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=F" +
                                "alse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissi" +
                                "onMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrece" +
                                "dedByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPrope" +
                                "rtiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInO" +
                                "therCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out F" +
                                "alse]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp161, "transferBufferIndex of FastTransferSourceGetBuffer, state S156");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.state,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    2,
                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp162, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S156");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp163, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S156");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp164, "return of FastTransferSourceGetBuffer, state S156");
                        this.Manager.Comment("reaching state \'S164\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp165;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp165 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S172\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp165, "return of Release, state S172");
                        this.Manager.Comment("reaching state \'S180\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp166;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp166 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S188\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp166, "return of Release, state S188");
                        this.Manager.Comment("reaching state \'S196\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp167 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S204\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of Release, state S204");
                        this.Manager.Comment("reaching state \'S212\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp168;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp168 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S220\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp168, "return of Release, state S220");
                        this.Manager.Comment("reaching state \'S228\'");
                        goto label5;
                    }
                    if ((temp179 == 1)) {
                        this.Manager.Comment("reaching state \'S133\'");
                        int temp169;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp170;
                        this.Manager.Comment("executing step \'call SynchronizationGetTransferState(1,7,out _)\'");
                        temp170 = this.IMS_OXCFXICSAdapterInstance.SynchronizationGetTransferState(1, 7, out temp169);
                        this.Manager.Checkpoint("MS-OXCFXICS_R765");
                        this.Manager.Checkpoint("MS-OXCFXICS_R758");
                        this.Manager.Comment("reaching state \'S141\'");
                        this.Manager.Comment("checking step \'return SynchronizationGetTransferState/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp169, "stateHandleIndex of SynchronizationGetTransferState, state S141");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp170, "return of SynchronizationGetTransferState, state S141");
                        this.Manager.Comment("reaching state \'S149\'");
                        int temp171;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp172;
                        bool temp173;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp174;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp174 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp171, out temp172, out temp173);
                        this.Manager.Checkpoint("MS-OXCFXICS_R350400101");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S157\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=state,AbstractHierarchySync=AbstractHierarchySync(Folderchange" +
                                "Info=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderIdExis" +
                                "t=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=False)" +
                                ",FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven=nu" +
                                "ll,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumbe" +
                                "r=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=Fals" +
                                "e,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstract" +
                                "ContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null,A" +
                                "bstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPid" +
                                "TagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateC" +
                                "hangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiven" +
                                "=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNu" +
                                "mber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime" +
                                "=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderC" +
                                "ontent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFol" +
                                "derOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFol" +
                                "derPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFold" +
                                "erMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidT" +
                                "agEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCont" +
                                "ent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren" +
                                "(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=Fa" +
                                "lse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,Str" +
                                "ingPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abst" +
                                "ractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False," +
                                "IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut" +
                                "=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False" +
                                ",AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPro" +
                                "p=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=Ab" +
                                "sMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abst" +
                                "ractICSStateIndex=2,IdSetGiven={},IsNewCnsetReadPropertyChangeNumber=False,IsNew" +
                                "CnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False)" +
                                ",AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False" +
                                ",AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=" +
                                "False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False," +
                                "StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,Is" +
                                "RTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=Fa" +
                                "lse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissio" +
                                "nMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPreced" +
                                "edByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProper" +
                                "tiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOt" +
                                "herCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out Fa" +
                                "lse]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp171, "transferBufferIndex of FastTransferSourceGetBuffer, state S157");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.state,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    2,
                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp172, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S157");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp173, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S157");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp174, "return of FastTransferSourceGetBuffer, state S157");
                        this.Manager.Comment("reaching state \'S165\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp175;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp175 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S173\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp175, "return of Release, state S173");
                        this.Manager.Comment("reaching state \'S181\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp176;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp176 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S189\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp176, "return of Release, state S189");
                        this.Manager.Comment("reaching state \'S197\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp177;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp177 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S205\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp177, "return of Release, state S205");
                        this.Manager.Comment("reaching state \'S213\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp178;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp178 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S221\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp178, "return of Release, state S221");
                        this.Manager.Comment("reaching state \'S229\'");
                        goto label5;
                    }
                    throw new InvalidOperationException("never reached");
                label5:
;
                    goto label6;
                }
                throw new InvalidOperationException("never reached");
            label6:
;
                goto label7;
            }
            if ((temp181 == 1)) {
                this.Manager.Comment("reaching state \'S7\'");
                goto label7;
            }
            throw new InvalidOperationException("never reached");
        label7:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S45");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S124");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S124");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S45");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S125");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S125");
        }
        
        private void MSOXCFXICS_S07_SyncICSStateUpload_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
    }
}