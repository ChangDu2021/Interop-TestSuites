//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S06_SyncICSContentsInvalid_TestSuite : PtfTestClassBase {
        
        public S06_SyncICSContentsInvalid_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp26 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp26 == 0)) {
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S15\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S18");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S18");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S18");
                this.Manager.Comment("reaching state \'S21\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S24");
                this.Manager.Comment("reaching state \'S27\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S30");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S30");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S30");
                this.Manager.Comment("reaching state \'S33\'");
                int temp9;
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test2\",out _,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test2", out temp9, out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "folderIdIndex of CreateFolder, state S36");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "folderHandleIndex of CreateFolder, state S36");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of CreateFolder, state S36");
                this.Manager.Comment("reaching state \'S39\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp12;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp12 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp12, "return of GetLocalReplicaIds, state S42");
                this.Manager.Comment("reaching state \'S45\'");
                int temp13;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp14;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,4,Contents,out _)\'");
                temp14 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 4, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp13);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp13, "synchronizationHandleIndex of SynchronizationOpenCollector, state S48");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp14, "return of SynchronizationOpenCollector, state S48");
                this.Manager.Comment("reaching state \'S51\'");
                int temp15;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp16;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,5,0,Normal,out _)\'");
                temp16 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 5, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp15);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S54\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp15, "importMessageHandleIndex of SynchronizationImportMessageChange, state S54");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp16, "return of SynchronizationImportMessageChange, state S54");
                this.Manager.Comment("reaching state \'S57\'");
                int temp17;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp18 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp17);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S62\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp17, "messageIdIndex of SaveChangesMessage, state S62");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp18, "return of SaveChangesMessage, state S62");
                this.Manager.Comment("reaching state \'S67\'");
                int temp19;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp20 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp19);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S76\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp19, "synchronizationHandleIndex of SynchronizationOpenCollector, state S76");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp20, "return of SynchronizationOpenCollector, state S76");
                this.Manager.Comment("reaching state \'S85\'");
                bool temp21;
                bool temp22;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageMove(1,7,3,2,4,4,3,True,out _,ou" +
                        "t _)\'");
                temp23 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageMove(1, 7, 3, 2, 4, 4, 3, true, out temp21, out temp22);
                this.Manager.Checkpoint("MS-OXCFXICS_R875");
                this.Manager.Checkpoint("MS-OXCFXICS_R876");
                this.Manager.Checkpoint("MS-OXCFXICS_R1892");
                this.Manager.Comment("reaching state \'S94\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageMove/[out True,out True]:NewerC" +
                        "lientChange\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp21, "iolderversion of SynchronizationImportMessageMove, state S94");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp22, "icnpc of SynchronizationImportMessageMove, state S94");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NewerClientChange, temp23, "return of SynchronizationImportMessageMove, state S94");
                this.Manager.Comment("reaching state \'S103\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                this.Manager.Comment("executing step \'call Release(1,7)\'");
                temp24 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                this.Manager.Comment("reaching state \'S116\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of Release, state S116");
                this.Manager.Comment("reaching state \'S125\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                this.Manager.Comment("executing step \'call Release(1,5)\'");
                temp25 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                this.Manager.Comment("reaching state \'S134\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of Release, state S134");
                this.Manager.Comment("reaching state \'S139\'");
                goto label0;
            }
            if ((temp26 == 1)) {
                this.Manager.Comment("reaching state \'S7\'");
                goto label0;
            }
            throw new InvalidOperationException("never reached");
        label0:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp27;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp27);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp27);
            this.Manager.Comment("reaching state \'S3\'");
            int temp60 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp60 == 0)) {
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S16\'");
                int temp28;
                int temp29;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp30 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp28, out temp29);
                this.Manager.Comment("reaching state \'S19\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp28, "logonHandleIndex of Logon, state S19");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp29, "inboxFolderIdIndex of Logon, state S19");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp30, "return of Logon, state S19");
                this.Manager.Comment("reaching state \'S22\'");
                int temp31;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp32 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp31);
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp31, "folderHandleIndex of OpenFolder, state S25");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of OpenFolder, state S25");
                this.Manager.Comment("reaching state \'S28\'");
                int temp33;
                int temp34;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp35 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp33, out temp34);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S31\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp33, "folderIdIndex of CreateFolder, state S31");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp34, "folderHandleIndex of CreateFolder, state S31");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of CreateFolder, state S31");
                this.Manager.Comment("reaching state \'S34\'");
                int temp36;
                int temp37;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test2\",out _,out _)\'");
                temp38 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test2", out temp36, out temp37);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp36, "folderIdIndex of CreateFolder, state S37");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp37, "folderHandleIndex of CreateFolder, state S37");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp38, "return of CreateFolder, state S37");
                this.Manager.Comment("reaching state \'S40\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp39 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S43\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of GetLocalReplicaIds, state S43");
                this.Manager.Comment("reaching state \'S46\'");
                int temp40;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,4,Contents,out _)\'");
                temp41 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 4, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp40);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S49\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp40, "synchronizationHandleIndex of SynchronizationOpenCollector, state S49");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of SynchronizationOpenCollector, state S49");
                this.Manager.Comment("reaching state \'S52\'");
                bool temp42;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3509001,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3509001, out temp42);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp42);
                this.Manager.Comment("reaching state \'S55\'");
                int temp59 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker3)));
                if ((temp59 == 0)) {
                    this.Manager.Comment("reaching state \'S58\'");
                    bool temp43;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(350900201,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(350900201, out temp43);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp43);
                    this.Manager.Comment("reaching state \'S63\'");
                    int temp50 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker2)));
                    if ((temp50 == 0)) {
                        this.Manager.Comment("reaching state \'S68\'");
                        int temp44;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,5,0,InvalidParameter,ou" +
                                "t _)\'");
                        temp45 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 5, 0, Microsoft.Protocols.TestSuites.Common.ImportFlag.InvalidParameter, out temp44);
                        this.Manager.Checkpoint("MS-OXCFXICS_R814");
                        this.Manager.Checkpoint("MS-OXCFXICS_R805");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R782");
                        this.Manager.Comment("reaching state \'S77\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp44, "importMessageHandleIndex of SynchronizationImportMessageChange, state S77");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of SynchronizationImportMessageChange, state S77");
                        this.Manager.Comment("reaching state \'S86\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp46 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S95\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of Release, state S95");
                        this.Manager.Comment("reaching state \'S104\'");
                        goto label1;
                    }
                    if ((temp50 == 1)) {
                        this.Manager.Comment("reaching state \'S69\'");
                        int temp47;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp48;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,5,0,InvalidParameter,ou" +
                                "t _)\'");
                        temp48 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 5, 0, Microsoft.Protocols.TestSuites.Common.ImportFlag.InvalidParameter, out temp47);
                        this.Manager.Checkpoint("MS-OXCFXICS_R350900201");
                        this.Manager.Checkpoint("MS-OXCFXICS_R814");
                        this.Manager.Checkpoint("MS-OXCFXICS_R805");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R782");
                        this.Manager.Comment("reaching state \'S78\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp47, "importMessageHandleIndex of SynchronizationImportMessageChange, state S78");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp48, "return of SynchronizationImportMessageChange, state S78");
                        this.Manager.Comment("reaching state \'S87\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp49 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S96\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of Release, state S96");
                        this.Manager.Comment("reaching state \'S105\'");
                        goto label1;
                    }
                    throw new InvalidOperationException("never reached");
                label1:
;
                    goto label3;
                }
                if ((temp59 == 1)) {
                    this.Manager.Comment("reaching state \'S59\'");
                    bool temp51;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(350900201,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(350900201, out temp51);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp51);
                    this.Manager.Comment("reaching state \'S64\'");
                    int temp58 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker4)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker5)));
                    if ((temp58 == 0)) {
                        this.Manager.Comment("reaching state \'S70\'");
                        int temp52;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,5,0,InvalidParameter,ou" +
                                "t _)\'");
                        temp53 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 5, 0, Microsoft.Protocols.TestSuites.Common.ImportFlag.InvalidParameter, out temp52);
                        this.Manager.Checkpoint("MS-OXCFXICS_R3509001");
                        this.Manager.Comment("reaching state \'S79\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out -1]:InvalidParamete" +
                                "r\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp52, "importMessageHandleIndex of SynchronizationImportMessageChange, state S79");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp53, "return of SynchronizationImportMessageChange, state S79");
                        this.Manager.Comment("reaching state \'S88\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp54 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S97\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of Release, state S97");
                        this.Manager.Comment("reaching state \'S106\'");
                        goto label2;
                    }
                    if ((temp58 == 1)) {
                        this.Manager.Comment("reaching state \'S71\'");
                        int temp55;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                        this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,5,0,InvalidParameter,ou" +
                                "t _)\'");
                        temp56 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 5, 0, Microsoft.Protocols.TestSuites.Common.ImportFlag.InvalidParameter, out temp55);
                        this.Manager.Checkpoint("MS-OXCFXICS_R3509001");
                        this.Manager.Comment("reaching state \'S80\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out -1]:InvalidParamete" +
                                "r\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp55, "importMessageHandleIndex of SynchronizationImportMessageChange, state S80");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp56, "return of SynchronizationImportMessageChange, state S80");
                        this.Manager.Comment("reaching state \'S89\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp57 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S98\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of Release, state S98");
                        this.Manager.Comment("reaching state \'S107\'");
                        goto label2;
                    }
                    throw new InvalidOperationException("never reached");
                label2:
;
                    goto label3;
                }
                throw new InvalidOperationException("never reached");
            label3:
;
                goto label4;
            }
            if ((temp60 == 1)) {
                this.Manager.Comment("reaching state \'S9\'");
                goto label4;
            }
            throw new InvalidOperationException("never reached");
        label4:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S55");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S63");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S63");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S55");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S64");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S64");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp61;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp61);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp61);
            this.Manager.Comment("reaching state \'S5\'");
            int temp110 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp110 == 0)) {
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S17\'");
                int temp62;
                int temp63;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp64 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp62, out temp63);
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp62, "logonHandleIndex of Logon, state S20");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp63, "inboxFolderIdIndex of Logon, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of Logon, state S20");
                this.Manager.Comment("reaching state \'S23\'");
                int temp65;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp66 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp65);
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp65, "folderHandleIndex of OpenFolder, state S26");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp66, "return of OpenFolder, state S26");
                this.Manager.Comment("reaching state \'S29\'");
                int temp67;
                int temp68;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp69;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp69 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp67, out temp68);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp67, "folderIdIndex of CreateFolder, state S32");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp68, "folderHandleIndex of CreateFolder, state S32");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp69, "return of CreateFolder, state S32");
                this.Manager.Comment("reaching state \'S35\'");
                int temp70;
                int temp71;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test2\",out _,out _)\'");
                temp72 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test2", out temp70, out temp71);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp70, "folderIdIndex of CreateFolder, state S38");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp71, "folderHandleIndex of CreateFolder, state S38");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of CreateFolder, state S38");
                this.Manager.Comment("reaching state \'S41\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp73 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of GetLocalReplicaIds, state S44");
                this.Manager.Comment("reaching state \'S47\'");
                int temp74;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,4,Contents,out _)\'");
                temp75 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 4, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp74);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S50\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp74, "synchronizationHandleIndex of SynchronizationOpenCollector, state S50");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of SynchronizationOpenCollector, state S50");
                this.Manager.Comment("reaching state \'S53\'");
                bool temp76;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2254001,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2254001, out temp76);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp76);
                this.Manager.Comment("reaching state \'S56\'");
                int temp109 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker7)));
                if ((temp109 == 0)) {
                    this.Manager.Comment("reaching state \'S60\'");
                    bool temp77;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp77);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp77);
                    this.Manager.Comment("reaching state \'S65\'");
                    int temp92 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker4)));
                    if ((temp92 == 0)) {
                        this.Manager.Comment("reaching state \'S72\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp78;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,5,[3],16)\'");
                        temp78 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 5, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 16);
                        this.Manager.Comment("reaching state \'S81\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp78, "return of SynchronizationImportDeletes, state S81");
                        this.Manager.Comment("reaching state \'S90\'");
                        bool temp79;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(35121,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(35121, out temp79);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp79);
                        this.Manager.Comment("reaching state \'S99\'");
                        int temp84 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker2)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker3)));
                        if ((temp84 == 0)) {
                            this.Manager.Comment("reaching state \'S108\'");
                            int temp80;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,3,out _)\'");
                            temp81 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 3, out temp80);
                            this.Manager.Comment("reaching state \'S117\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 6]:Success\'");
                            try {
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp80, "folderHandleIndex of OpenFolder, state S117");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of OpenFolder, state S117");
                            }
                            catch (TransactionFailedException ) {
                                this.Manager.Comment("This step would have covered MS-OXCFXICS_R35121");
                                throw;
                            }
                            this.Manager.Checkpoint("MS-OXCFXICS_R35121");
                            this.Manager.Comment("reaching state \'S126\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp82;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp82 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S135\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp82, "return of Release, state S135");
                            this.Manager.Comment("reaching state \'S140\'");
                            goto label5;
                        }
                        if ((temp84 == 1)) {
                            this.Manager.Comment("reaching state \'S109\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp83 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S118\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of Release, state S118");
                            this.Manager.Comment("reaching state \'S127\'");
                            goto label5;
                        }
                        throw new InvalidOperationException("never reached");
                    label5:
;
                        goto label7;
                    }
                    if ((temp92 == 1)) {
                        this.Manager.Comment("reaching state \'S73\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp85;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,5,[3],16)\'");
                        temp85 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 5, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 16);
                        this.Manager.Comment("reaching state \'S82\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp85, "return of SynchronizationImportDeletes, state S82");
                        this.Manager.Comment("reaching state \'S91\'");
                        bool temp86;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(35121,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(35121, out temp86);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp86);
                        this.Manager.Comment("reaching state \'S100\'");
                        int temp91 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker5)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker6)));
                        if ((temp91 == 0)) {
                            this.Manager.Comment("reaching state \'S110\'");
                            int temp87;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp88;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,3,out _)\'");
                            temp88 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 3, out temp87);
                            this.Manager.Comment("reaching state \'S119\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 6]:Success\'");
                            try {
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp87, "folderHandleIndex of OpenFolder, state S119");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp88, "return of OpenFolder, state S119");
                            }
                            catch (TransactionFailedException ) {
                                this.Manager.Comment("This step would have covered MS-OXCFXICS_R35121");
                                throw;
                            }
                            this.Manager.Checkpoint("MS-OXCFXICS_R35121");
                            this.Manager.Comment("reaching state \'S128\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp89;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp89 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S136\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp89, "return of Release, state S136");
                            this.Manager.Comment("reaching state \'S141\'");
                            goto label6;
                        }
                        if ((temp91 == 1)) {
                            this.Manager.Comment("reaching state \'S111\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp90;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp90 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S120\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp90, "return of Release, state S120");
                            this.Manager.Comment("reaching state \'S129\'");
                            goto label6;
                        }
                        throw new InvalidOperationException("never reached");
                    label6:
;
                        goto label7;
                    }
                    throw new InvalidOperationException("never reached");
                label7:
;
                    goto label11;
                }
                if ((temp109 == 1)) {
                    this.Manager.Comment("reaching state \'S61\'");
                    bool temp93;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp93);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp93);
                    this.Manager.Comment("reaching state \'S66\'");
                    int temp108 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker8)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker11)));
                    if ((temp108 == 0)) {
                        this.Manager.Comment("reaching state \'S74\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp94;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,5,[3],16)\'");
                        temp94 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 5, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 16);
                        this.Manager.Comment("reaching state \'S83\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp94, "return of SynchronizationImportDeletes, state S83");
                        this.Manager.Comment("reaching state \'S92\'");
                        bool temp95;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(35121,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(35121, out temp95);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp95);
                        this.Manager.Comment("reaching state \'S101\'");
                        int temp100 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker9)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker10)));
                        if ((temp100 == 0)) {
                            this.Manager.Comment("reaching state \'S112\'");
                            int temp96;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp97;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,3,out _)\'");
                            temp97 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 3, out temp96);
                            this.Manager.Comment("reaching state \'S121\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 6]:Success\'");
                            try {
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp96, "folderHandleIndex of OpenFolder, state S121");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp97, "return of OpenFolder, state S121");
                            }
                            catch (TransactionFailedException ) {
                                this.Manager.Comment("This step would have covered MS-OXCFXICS_R35121");
                                throw;
                            }
                            this.Manager.Checkpoint("MS-OXCFXICS_R35121");
                            this.Manager.Comment("reaching state \'S130\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp98;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp98 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S137\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp98, "return of Release, state S137");
                            this.Manager.Comment("reaching state \'S142\'");
                            goto label8;
                        }
                        if ((temp100 == 1)) {
                            this.Manager.Comment("reaching state \'S113\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp99 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S122\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of Release, state S122");
                            this.Manager.Comment("reaching state \'S131\'");
                            goto label8;
                        }
                        throw new InvalidOperationException("never reached");
                    label8:
;
                        goto label10;
                    }
                    if ((temp108 == 1)) {
                        this.Manager.Comment("reaching state \'S75\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp101;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,5,[3],16)\'");
                        temp101 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 5, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 16);
                        this.Manager.Comment("reaching state \'S84\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/NotSupported\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotSupported, temp101, "return of SynchronizationImportDeletes, state S84");
                        this.Manager.Comment("reaching state \'S93\'");
                        bool temp102;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(35121,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(35121, out temp102);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp102);
                        this.Manager.Comment("reaching state \'S102\'");
                        int temp107 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker12)), new ExpectedReturn(S06_SyncICSContentsInvalid_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker13)));
                        if ((temp107 == 0)) {
                            this.Manager.Comment("reaching state \'S114\'");
                            int temp103;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp104;
                            this.Manager.Comment("executing step \'call OpenFolder(1,1,3,out _)\'");
                            temp104 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 3, out temp103);
                            this.Manager.Comment("reaching state \'S123\'");
                            this.Manager.Comment("checking step \'return OpenFolder/[out 6]:Success\'");
                            try {
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp103, "folderHandleIndex of OpenFolder, state S123");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp104, "return of OpenFolder, state S123");
                            }
                            catch (TransactionFailedException ) {
                                this.Manager.Comment("This step would have covered MS-OXCFXICS_R35121");
                                throw;
                            }
                            this.Manager.Checkpoint("MS-OXCFXICS_R35121");
                            this.Manager.Comment("reaching state \'S132\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp105;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp105 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S138\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp105, "return of Release, state S138");
                            this.Manager.Comment("reaching state \'S143\'");
                            goto label9;
                        }
                        if ((temp107 == 1)) {
                            this.Manager.Comment("reaching state \'S115\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp106 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S124\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of Release, state S124");
                            this.Manager.Comment("reaching state \'S133\'");
                            goto label9;
                        }
                        throw new InvalidOperationException("never reached");
                    label9:
;
                        goto label10;
                    }
                    throw new InvalidOperationException("never reached");
                label10:
;
                    goto label11;
                }
                throw new InvalidOperationException("never reached");
            label11:
;
                goto label12;
            }
            if ((temp110 == 1)) {
                this.Manager.Comment("reaching state \'S11\'");
                goto label12;
            }
            throw new InvalidOperationException("never reached");
        label12:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S56");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S65");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S99");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S99");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S65");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S100");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S100");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S56");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S66");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S101");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S101");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S66");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S102");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S102");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsInvalid_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
    }
}