//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S01_SyncFastTransferUnusedFlag_TestSuite : PtfTestClassBase {
        
        public S01_SyncFastTransferUnusedFlag_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp33 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferUnusedFlag_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferUnusedFlag_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp33 == 0)) {
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S15\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S18");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S18");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S18");
                this.Manager.Comment("reaching state \'S21\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S24");
                this.Manager.Comment("reaching state \'S27\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S30");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S30");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S30");
                this.Manager.Comment("reaching state \'S33\'");
                int temp9;
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp9, out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "folderIdIndex of CreateFolder, state S36");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "folderHandleIndex of CreateFolder, state S36");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of CreateFolder, state S36");
                this.Manager.Comment("reaching state \'S39\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp12, "messageHandleIndex of CreateMessage, state S42");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of CreateMessage, state S42");
                this.Manager.Comment("reaching state \'S45\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp14;
                this.Manager.Comment("executing step \'call SetProperties(1,5,[\"PidTagBody\"])\'");
                temp14 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 5, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp14, "return of SetProperties, state S48");
                this.Manager.Comment("reaching state \'S51\'");
                int temp15;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp16;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp16 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp15);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S54\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp15, "messageIdIndex of SaveChangesMessage, state S54");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp16, "return of SaveChangesMessage, state S54");
                this.Manager.Comment("reaching state \'S57\'");
                int temp17;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,3,Unused1,RecoverMode,[4],o" +
                        "ut _)\'");
                temp18 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 3, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.Unused1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            4,
                                            ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp17);
                this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                this.Manager.Comment("reaching state \'S60\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp17, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S60");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp18, "return of FastTransferSourceCopyMessages, state S60");
                this.Manager.Comment("reaching state \'S63\'");
                int temp19;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp20;
                bool temp21;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                temp22 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp19, out temp20, out temp21);
                this.Manager.Checkpoint("MS-OXCFXICS_R487");
                this.Manager.Checkpoint("MS-OXCFXICS_R3330");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S67\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=MessageList,AbstractHierarchySync=AbstractHierarchySync(Folder" +
                        "changeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolder" +
                        "IdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                        "False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGi" +
                        "ven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                        "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChil" +
                        "d=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                        "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Ab" +
                        "stractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=" +
                        "null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null" +
                        ",IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRead" +
                        "StateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                        "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                        "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelive" +
                        "ryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractF" +
                        "olderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNe" +
                        "wFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,Is" +
                        "SubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(" +
                        "IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(" +
                        "IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessa" +
                        "geContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageCh" +
                        "ildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelP" +
                        "rop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fal" +
                        "se,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolde" +
                        "r=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=" +
                        "False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContent" +
                        "NotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp" +
                        "=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFX" +
                        "DelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMess" +
                        "age=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                        "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                        "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                        "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                        "=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractStat" +
                        "e(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fal" +
                        "se,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumbe" +
                        "r=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                        "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                        "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                        "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                        "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                        "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                        "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                        "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                        "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                        "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                        "),out False]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp19, "transferBufferIndex of FastTransferSourceGetBuffer, state S67");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageList,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp20, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S67");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp21, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S67");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of FastTransferSourceGetBuffer, state S67");
                this.Manager.Comment("reaching state \'S71\'");
                int temp23;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,3,Unused2,RecoverMode,[4],o" +
                        "ut _)\'");
                temp24 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 3, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.Unused2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            4,
                                            ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp23);
                this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                this.Manager.Comment("reaching state \'S75\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp23, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S75");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of FastTransferSourceCopyMessages, state S75");
                this.Manager.Comment("reaching state \'S79\'");
                int temp25;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp26;
                bool temp27;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                temp28 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp25, out temp26, out temp27);
                this.Manager.Checkpoint("MS-OXCFXICS_R487");
                this.Manager.Checkpoint("MS-OXCFXICS_R3330");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S83\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                        "Stream(StreamType=MessageList,AbstractHierarchySync=AbstractHierarchySync(Folder" +
                        "changeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolder" +
                        "IdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                        "False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGi" +
                        "ven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                        "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChil" +
                        "d=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                        "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Ab" +
                        "stractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=" +
                        "null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null" +
                        ",IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRead" +
                        "StateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                        "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                        "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelive" +
                        "ryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractF" +
                        "olderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNe" +
                        "wFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,Is" +
                        "SubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(" +
                        "IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(" +
                        "IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessa" +
                        "geContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageCh" +
                        "ildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelP" +
                        "rop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fal" +
                        "se,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolde" +
                        "r=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=" +
                        "False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContent" +
                        "NotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp" +
                        "=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFX" +
                        "DelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMess" +
                        "age=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                        "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                        "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                        "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                        "=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractStat" +
                        "e(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fal" +
                        "se,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumbe" +
                        "r=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                        "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                        "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                        "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                        "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                        "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                        "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                        "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                        "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                        "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                        "),out False]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp25, "transferBufferIndex of FastTransferSourceGetBuffer, state S83");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageList,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp26, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S83");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp27, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S83");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of FastTransferSourceGetBuffer, state S83");
                this.Manager.Comment("reaching state \'S87\'");
                bool temp29;
                this.Manager.Comment("executing step \'call AreEqual(FastTransferSourceCopyProperties,1,2)\'");
                temp29 = this.IMS_OXCFXICSAdapterInstance.AreEqual(((Microsoft.Protocols.TestSuites.MS_OXCFXICS.EnumFastTransferOperation)(1)), 1, 2);
                this.Manager.Comment("reaching state \'S91\'");
                this.Manager.Comment("checking step \'return AreEqual/True\'");
                try {
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp29, "return of AreEqual, state S91");
                }
                catch (TransactionFailedException ) {
                    this.Manager.Comment("This step would have covered MS-OXCFXICS_R2715, MS-OXCFXICS_R2716");
                    throw;
                }
                this.Manager.Checkpoint("MS-OXCFXICS_R2715");
                this.Manager.Checkpoint("MS-OXCFXICS_R2716");
                this.Manager.Comment("reaching state \'S95\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                this.Manager.Comment("executing step \'call Release(1,6)\'");
                temp30 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                this.Manager.Comment("reaching state \'S99\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp30, "return of Release, state S99");
                this.Manager.Comment("reaching state \'S103\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                this.Manager.Comment("executing step \'call Release(1,7)\'");
                temp31 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                this.Manager.Comment("reaching state \'S107\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of Release, state S107");
                this.Manager.Comment("reaching state \'S111\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                this.Manager.Comment("executing step \'call Release(1,5)\'");
                temp32 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                this.Manager.Comment("reaching state \'S115\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of Release, state S115");
                this.Manager.Comment("reaching state \'S119\'");
                goto label0;
            }
            if ((temp33 == 1)) {
                this.Manager.Comment("reaching state \'S7\'");
                goto label0;
            }
            throw new InvalidOperationException("never reached");
        label0:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp34;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp34);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp34);
            this.Manager.Comment("reaching state \'S3\'");
            int temp67 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferUnusedFlag_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferUnusedFlag_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp67 == 0)) {
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S16\'");
                int temp35;
                int temp36;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp37 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp35, out temp36);
                this.Manager.Comment("reaching state \'S19\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp35, "logonHandleIndex of Logon, state S19");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp36, "inboxFolderIdIndex of Logon, state S19");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp37, "return of Logon, state S19");
                this.Manager.Comment("reaching state \'S22\'");
                int temp38;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp39 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp38);
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp38, "folderHandleIndex of OpenFolder, state S25");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of OpenFolder, state S25");
                this.Manager.Comment("reaching state \'S28\'");
                int temp40;
                int temp41;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp42 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp40, out temp41);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S31\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp40, "folderIdIndex of CreateFolder, state S31");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp41, "folderHandleIndex of CreateFolder, state S31");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp42, "return of CreateFolder, state S31");
                this.Manager.Comment("reaching state \'S34\'");
                int temp43;
                int temp44;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp45 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp43, out temp44);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp43, "folderIdIndex of CreateFolder, state S37");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp44, "folderHandleIndex of CreateFolder, state S37");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of CreateFolder, state S37");
                this.Manager.Comment("reaching state \'S40\'");
                int temp46;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp47 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp46);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S43\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp46, "messageHandleIndex of CreateMessage, state S43");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of CreateMessage, state S43");
                this.Manager.Comment("reaching state \'S46\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp48;
                this.Manager.Comment("executing step \'call SetProperties(1,5,[\"PidTagBody\"])\'");
                temp48 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 5, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                this.Manager.Comment("reaching state \'S49\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp48, "return of SetProperties, state S49");
                this.Manager.Comment("reaching state \'S52\'");
                int temp49;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp50 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp49);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S55\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp49, "messageIdIndex of SaveChangesMessage, state S55");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of SaveChangesMessage, state S55");
                this.Manager.Comment("reaching state \'S58\'");
                int temp51;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,FolderHandle,False,Unus" +
                        "ed1,RecoverMode,[\"PidTagAccess\"],out _)\'");
                temp52 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags.Unused1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagAccess",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp51);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S61\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp51, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S61");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of FastTransferSourceCopyProperties, state S61");
                this.Manager.Comment("reaching state \'S64\'");
                int temp53;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp54;
                bool temp55;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                temp56 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp53, out temp54, out temp55);
                this.Manager.Checkpoint("MS-OXCFXICS_R455");
                this.Manager.Checkpoint("MS-OXCFXICS_R3325");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S68\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                        "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                        "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                        "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                        "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                        "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                        "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                        "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                        "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                        "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                        "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                        "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                        "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                        "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                        "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                        "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                        "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                        "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                        "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                        "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                        "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                        "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                        "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                        "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                        "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                        "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                        "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                        "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                        "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                        "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                        "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                        "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                        "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                        "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                        "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                        "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                        "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out False]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp53, "transferBufferIndex of FastTransferSourceGetBuffer, state S68");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp54, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S68");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp55, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S68");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp56, "return of FastTransferSourceGetBuffer, state S68");
                this.Manager.Comment("reaching state \'S72\'");
                int temp57;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp58;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,FolderHandle,False,Unus" +
                        "ed1|Unused2|Unused3,RecoverMode,[\"PidTagAccess\"],out _)\'");
                temp58 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(14)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagAccess",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp57);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S76\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp57, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S76");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp58, "return of FastTransferSourceCopyProperties, state S76");
                this.Manager.Comment("reaching state \'S80\'");
                int temp59;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp60;
                bool temp61;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                temp62 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp59, out temp60, out temp61);
                this.Manager.Checkpoint("MS-OXCFXICS_R455");
                this.Manager.Checkpoint("MS-OXCFXICS_R3325");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S84\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                        "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                        "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                        "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                        "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                        "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                        "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                        "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                        "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                        "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                        "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                        "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                        "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                        "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                        "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                        "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                        "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                        "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                        "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                        "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                        "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                        "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                        "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                        "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                        "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                        "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                        "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                        "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                        "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                        "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                        "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                        "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                        "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                        "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                        "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                        "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                        "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                        "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out False]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp59, "transferBufferIndex of FastTransferSourceGetBuffer, state S84");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp60, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S84");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp61, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S84");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp62, "return of FastTransferSourceGetBuffer, state S84");
                this.Manager.Comment("reaching state \'S88\'");
                bool temp63;
                this.Manager.Comment("executing step \'call AreEqual(FastTransferSourceCopyProperties,1,2)\'");
                temp63 = this.IMS_OXCFXICSAdapterInstance.AreEqual(((Microsoft.Protocols.TestSuites.MS_OXCFXICS.EnumFastTransferOperation)(1)), 1, 2);
                this.Manager.Comment("reaching state \'S92\'");
                this.Manager.Comment("checking step \'return AreEqual/True\'");
                try {
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp63, "return of AreEqual, state S92");
                }
                catch (TransactionFailedException ) {
                    this.Manager.Comment("This step would have covered MS-OXCFXICS_R2712, MS-OXCFXICS_R2713, MS-OXCFXICS_R2" +
                            "714");
                    throw;
                }
                this.Manager.Checkpoint("MS-OXCFXICS_R2712");
                this.Manager.Checkpoint("MS-OXCFXICS_R2713");
                this.Manager.Checkpoint("MS-OXCFXICS_R2714");
                this.Manager.Comment("reaching state \'S96\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                this.Manager.Comment("executing step \'call Release(1,6)\'");
                temp64 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                this.Manager.Comment("reaching state \'S100\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of Release, state S100");
                this.Manager.Comment("reaching state \'S104\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                this.Manager.Comment("executing step \'call Release(1,7)\'");
                temp65 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                this.Manager.Comment("reaching state \'S108\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of Release, state S108");
                this.Manager.Comment("reaching state \'S112\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                this.Manager.Comment("executing step \'call Release(1,5)\'");
                temp66 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                this.Manager.Comment("reaching state \'S116\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp66, "return of Release, state S116");
                this.Manager.Comment("reaching state \'S120\'");
                goto label1;
            }
            if ((temp67 == 1)) {
                this.Manager.Comment("reaching state \'S9\'");
                goto label1;
            }
            throw new InvalidOperationException("never reached");
        label1:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite2() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite2");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp68;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp68);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp68);
            this.Manager.Comment("reaching state \'S5\'");
            int temp119 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferUnusedFlag_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferUnusedFlag_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp119 == 0)) {
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S17\'");
                int temp69;
                int temp70;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp71 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp69, out temp70);
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp69, "logonHandleIndex of Logon, state S20");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp70, "inboxFolderIdIndex of Logon, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of Logon, state S20");
                this.Manager.Comment("reaching state \'S23\'");
                int temp72;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp73 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp72);
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp72, "folderHandleIndex of OpenFolder, state S26");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of OpenFolder, state S26");
                this.Manager.Comment("reaching state \'S29\'");
                int temp74;
                int temp75;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp76;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp76 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp74, out temp75);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp74, "folderIdIndex of CreateFolder, state S32");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp75, "folderHandleIndex of CreateFolder, state S32");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp76, "return of CreateFolder, state S32");
                this.Manager.Comment("reaching state \'S35\'");
                int temp77;
                int temp78;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp79;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp79 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp77, out temp78);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp77, "folderIdIndex of CreateFolder, state S38");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp78, "folderHandleIndex of CreateFolder, state S38");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp79, "return of CreateFolder, state S38");
                this.Manager.Comment("reaching state \'S41\'");
                int temp80;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp81 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp80);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp80, "messageHandleIndex of CreateMessage, state S44");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of CreateMessage, state S44");
                this.Manager.Comment("reaching state \'S47\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp82;
                this.Manager.Comment("executing step \'call SetProperties(1,5,[\"PidTagBody\"])\'");
                temp82 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 5, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                this.Manager.Comment("reaching state \'S50\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp82, "return of SetProperties, state S50");
                this.Manager.Comment("reaching state \'S53\'");
                int temp83;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp84;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp84 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp83);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S56\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp83, "messageIdIndex of SaveChangesMessage, state S56");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp84, "return of SaveChangesMessage, state S56");
                this.Manager.Comment("reaching state \'S59\'");
                bool temp85;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp85);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp85);
                this.Manager.Comment("reaching state \'S62\'");
                int temp118 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferUnusedFlag_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferUnusedFlag_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite2CheckRequirementEnabledChecker1)));
                if ((temp118 == 0)) {
                    this.Manager.Comment("reaching state \'S65\'");
                    int temp86;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp87;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,FolderHandle,False,Move,Unicode" +
                            ",[\"PidTagAccess\"],out _)\'");
                    temp87 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp86);
                    this.Manager.Checkpoint("MS-OXCFXICS_R361");
                    this.Manager.Comment("reaching state \'S69\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp86, "copyToHandleIndex of FastTransferSourceCopyTo, state S69");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp87, "return of FastTransferSourceCopyTo, state S69");
                    this.Manager.Comment("reaching state \'S73\'");
                    int temp88;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp89;
                    bool temp90;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp91 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp88, out temp89, out temp90);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3324");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2620");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S77\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=True,AbsFolderMessage=AbstractFolderMessage" +
                            "(IsFolderMessagesPrecededByPidTagFXDelProp=True,MessageList=AbstractMessageList(" +
                            "IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessa" +
                            "geContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageCh" +
                            "ildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelP" +
                            "rop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fal" +
                            "se,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolde" +
                            "r=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=" +
                            "False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContent" +
                            "NotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp" +
                            "=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFX" +
                            "DelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMess" +
                            "age=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                            "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                            "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                            "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                            "=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractStat" +
                            "e(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumbe" +
                            "r=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                            "),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp88, "transferBufferIndex of FastTransferSourceGetBuffer, state S77");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            true,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp89, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S77");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp90, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S77");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of FastTransferSourceGetBuffer, state S77");
                    this.Manager.Comment("reaching state \'S81\'");
                    int temp92;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp93;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,FolderHandle,False,Move|Unused1" +
                            "|Unused2|Unused3|Unused4|Unused5,Unicode,[\"PidTagAccess\"],out _)\'");
                    temp93 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1551)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp92);
                    this.Manager.Checkpoint("MS-OXCFXICS_R361");
                    this.Manager.Comment("reaching state \'S85\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp92, "copyToHandleIndex of FastTransferSourceCopyTo, state S85");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp93, "return of FastTransferSourceCopyTo, state S85");
                    this.Manager.Comment("reaching state \'S89\'");
                    int temp94;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp95;
                    bool temp96;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp97;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp97 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp94, out temp95, out temp96);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3324");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2620");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S93\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                            "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=True,AbsFolderMessage=AbstractFolderMessage" +
                            "(IsFolderMessagesPrecededByPidTagFXDelProp=True,MessageList=AbstractMessageList(" +
                            "IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessa" +
                            "geContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageCh" +
                            "ildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelP" +
                            "rop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fal" +
                            "se,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolde" +
                            "r=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=" +
                            "False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContent" +
                            "NotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp" +
                            "=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFX" +
                            "DelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMess" +
                            "age=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                            "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                            "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                            "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                            "=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractStat" +
                            "e(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumbe" +
                            "r=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                            "),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp94, "transferBufferIndex of FastTransferSourceGetBuffer, state S93");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            true,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp95, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S93");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp96, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S93");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp97, "return of FastTransferSourceGetBuffer, state S93");
                    this.Manager.Comment("reaching state \'S97\'");
                    bool temp98;
                    this.Manager.Comment("executing step \'call AreEqual(FastTransferSourceCopyTo,1,2)\'");
                    temp98 = this.IMS_OXCFXICSAdapterInstance.AreEqual(((Microsoft.Protocols.TestSuites.MS_OXCFXICS.EnumFastTransferOperation)(0)), 1, 2);
                    this.Manager.Comment("reaching state \'S101\'");
                    this.Manager.Comment("checking step \'return AreEqual/True\'");
                    try {
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp98, "return of AreEqual, state S101");
                    }
                    catch (TransactionFailedException ) {
                        this.Manager.Comment("This step would have covered MS-OXCFXICS_R2707, MS-OXCFXICS_R2708, MS-OXCFXICS_R2" +
                                "709, MS-OXCFXICS_R2710, MS-OXCFXICS_R2711");
                        throw;
                    }
                    this.Manager.Checkpoint("MS-OXCFXICS_R2707");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2708");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2709");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2710");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2711");
                    this.Manager.Comment("reaching state \'S105\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp99 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S109\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of Release, state S109");
                    this.Manager.Comment("reaching state \'S113\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp100;
                    this.Manager.Comment("executing step \'call Release(1,7)\'");
                    temp100 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                    this.Manager.Comment("reaching state \'S117\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp100, "return of Release, state S117");
                    this.Manager.Comment("reaching state \'S121\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp101;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp101 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S123\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp101, "return of Release, state S123");
                    this.Manager.Comment("reaching state \'S125\'");
                    goto label2;
                }
                if ((temp118 == 1)) {
                    this.Manager.Comment("reaching state \'S66\'");
                    int temp102;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp103;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,FolderHandle,False,Move,Unicode" +
                            ",[\"PidTagAccess\"],out _)\'");
                    temp103 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp102);
                    this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                    this.Manager.Comment("reaching state \'S70\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp102, "copyToHandleIndex of FastTransferSourceCopyTo, state S70");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp103, "return of FastTransferSourceCopyTo, state S70");
                    this.Manager.Comment("reaching state \'S74\'");
                    int temp104;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp105;
                    bool temp106;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp107;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,-1,Normal,out _,out _,out _)\'");
                    temp107 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, -1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp104, out temp105, out temp106);
                    this.Manager.Comment("reaching state \'S78\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                            "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                            "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                            "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                            "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                            "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                            "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                            "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                            "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                            "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                            "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                            "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                            "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                            "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                            "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                            "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                            "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                            "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                            "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                            "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                            "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                            "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                            "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                            "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                            "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                            "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                            "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                            "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                            "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                            "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                            "se),out False]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp104, "transferBufferIndex of FastTransferSourceGetBuffer, state S78");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp105, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S78");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp106, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S78");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp107, "return of FastTransferSourceGetBuffer, state S78");
                    this.Manager.Comment("reaching state \'S82\'");
                    int temp108;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp109;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,FolderHandle,False,Move|Unused1" +
                            "|Unused2|Unused3|Unused4|Unused5,Unicode,[\"PidTagAccess\"],out _)\'");
                    temp109 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1551)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp108);
                    this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                    this.Manager.Comment("reaching state \'S86\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp108, "copyToHandleIndex of FastTransferSourceCopyTo, state S86");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp109, "return of FastTransferSourceCopyTo, state S86");
                    this.Manager.Comment("reaching state \'S90\'");
                    int temp110;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp111;
                    bool temp112;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,-1,Normal,out _,out _,out _)\'");
                    temp113 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, -1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp110, out temp111, out temp112);
                    this.Manager.Comment("reaching state \'S94\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                            "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                            "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                            "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                            "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                            "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                            "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                            "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                            "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                            "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                            "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                            "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                            "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                            "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                            "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                            "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                            "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                            "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                            "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                            "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                            "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                            "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                            "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                            "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                            "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                            "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                            "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                            "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                            "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                            "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                            "se),out False]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp110, "transferBufferIndex of FastTransferSourceGetBuffer, state S94");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp111, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S94");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp112, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S94");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp113, "return of FastTransferSourceGetBuffer, state S94");
                    this.Manager.Comment("reaching state \'S98\'");
                    bool temp114;
                    this.Manager.Comment("executing step \'call AreEqual(FastTransferSourceCopyTo,-1,-1)\'");
                    temp114 = this.IMS_OXCFXICSAdapterInstance.AreEqual(((Microsoft.Protocols.TestSuites.MS_OXCFXICS.EnumFastTransferOperation)(0)), -1, -1);
                    this.Manager.Comment("reaching state \'S102\'");
                    this.Manager.Comment("checking step \'return AreEqual/False\'");
                    try {
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp114, "return of AreEqual, state S102");
                    }
                    catch (TransactionFailedException ) {
                        this.Manager.Comment("This step would have covered MS-OXCFXICS_R2707, MS-OXCFXICS_R2708, MS-OXCFXICS_R2" +
                                "709, MS-OXCFXICS_R2710, MS-OXCFXICS_R2711");
                        throw;
                    }
                    this.Manager.Checkpoint("MS-OXCFXICS_R2707");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2708");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2709");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2710");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2711");
                    this.Manager.Comment("reaching state \'S106\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp115;
                    this.Manager.Comment("executing step \'call Release(1,-1)\'");
                    temp115 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                    this.Manager.Comment("reaching state \'S110\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp115, "return of Release, state S110");
                    this.Manager.Comment("reaching state \'S114\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                    this.Manager.Comment("executing step \'call Release(1,-1)\'");
                    temp116 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                    this.Manager.Comment("reaching state \'S118\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of Release, state S118");
                    this.Manager.Comment("reaching state \'S122\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp117;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp117 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S124\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp117, "return of Release, state S124");
                    this.Manager.Comment("reaching state \'S126\'");
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp119 == 1)) {
                this.Manager.Comment("reaching state \'S11\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S62");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S62");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferUnusedFlag_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
    }
}